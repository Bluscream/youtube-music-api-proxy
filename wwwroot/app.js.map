{"version":3,"file":"app.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,4EAA4E;AAC5E,qFAAqF;AAC9E,MAAM,2BAA2B,GAAG,GAAG,CAAC,CAAC,uDAAuD;AAEvG,oCAAoC;AAC7B,MAAM,aAAa,GAAG,UAAU,CAAC;AAExC,gBAAgB;AACT,MAAM,aAAa,GAAG;IACzB,OAAO,EAAE,SAAS;IAClB,MAAM,EAAE,QAAQ;IAChB,OAAO,EAAE,SAAS;CACZ,CAAC;AAIX,eAAe;AACR,MAAM,YAAY,GAAG;IACxB,IAAI,EAAE,MAAM;IACZ,GAAG,EAAE,KAAK;IACV,GAAG,EAAE,KAAK;CACJ,CAAC;AAIX,iBAAiB;AACV,MAAM,cAAc,GAAG;IAC1B,IAAI,EAAE,MAAM;IACZ,QAAQ,EAAE,UAAU;IACpB,IAAI,EAAE,MAAM;IACZ,SAAS,EAAE,WAAW;CAChB,CAAC;AAIX,qBAAqB;AACd,MAAM,kBAAkB,GAAG;IAC9B,IAAI,EAAE,MAAM;IACZ,MAAM,EAAE,QAAQ;CACV,CAAC;AAIX,qBAAqB;AACd,MAAM,kBAAkB,GAAG;IAC9B,KAAK,EAAE,OAAO;IACd,OAAO,EAAE,SAAS;IAClB,OAAO,EAAE,SAAS;IAClB,IAAI,EAAE,MAAM;CACN,CAAC;AAIX,qBAAqB;AACd,MAAM,kBAAkB,GAAqC;IAChE,KAAK,EAAE,GAAG;IACV,OAAO,EAAE,GAAG;IACZ,OAAO,EAAE,IAAI;IACb,IAAI,EAAE,IAAI;CACb,CAAC;AAEF,iBAAiB;AACV,MAAM,QAAQ,GAAG;IACpB,MAAM,EAAE,GAAG;IACX,qBAAqB,EAAE,IAAI;IAC3B,2BAA2B,EAAE,IAAI;IACjC,6BAA6B,EAAE,IAAI;IACnC,6BAA6B,EAAE,IAAI;IACnC,0BAA0B,EAAE,IAAI;IAChC,mBAAmB,EAAE,GAAG;IACxB,uBAAuB,EAAE,GAAG;IAC5B,uBAAuB,EAAE,GAAG;CACtB,CAAC;AAEX,4DAA4D;AACrD,MAAM,sBAAsB,GAAG,IAAI,CAAC;AAE3C,iCAAiC;AAC1B,MAAM,kBAAkB,GAAG,GAAG,CAAC;AAEtC,+BAA+B;AACxB,MAAM,qBAAqB,GAAG,EAAE,CAAC;;;;;;;;;;;;;;;;;AChFQ;AAiBe;AAE/D,kBAAkB;AACX,MAAM,cAAc;IAKvB;QAJQ,gBAAW,GAAW,MAAM,CAAC;QAC7B,cAAS,GAAU,EAAE,CAAC;QACtB,kBAAa,GAAmB,EAAE,CAAC;QAGvC,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,IAAI;QACA,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAED,mBAAmB;QACf,uBAAuB;QACvB,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAqB,CAAC;QAC/E,IAAI,WAAW,EAAE,CAAC;YACd,WAAW,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,CAAgB,EAAE,EAAE;gBAC1D,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,EAAE,CAAC;oBACpB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBACzB,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAED,KAAK,CAAC,QAAQ;QACV,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QAEjC,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC3D,IAAI,CAAC,WAAW;YAAE,OAAO;QAEzB,WAAW,CAAC,SAAS,GAAG;;;;;;;;;SASvB,CAAC;QAEF,qBAAqB;QACrB,MAAM,eAAe,GAAG,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAqB,CAAC;QACvF,IAAI,eAAe,EAAE,CAAC;YAClB,eAAe,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,CAAgB,EAAE,EAAE;gBAC9D,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,EAAE,CAAC;oBACpB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBACzB,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAED,KAAK,CAAC,WAAW;QACb,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAC7B,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;QAEpC,IAAI,CAAC;YACD,MAAM,GAAG,GAAG,6DAAU,CAAC,MAAM,EAAE,CAAC;YAChC,MAAM,IAAI,GAAoB,MAAM,GAAG,CAAC,UAAU,EAAE,CAAC;YACrD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;YAC/C,IAAI,MAAM,CAAC,mBAAmB,EAAE,CAAC;gBAC7B,MAAM,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,CAAC;YAC/E,CAAC;QACL,CAAC;IACL,CAAC;IAED,KAAK,CAAC,SAAS;QACX,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;QAC3B,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;QAElC,IAAI,CAAC;YACD,MAAM,GAAG,GAAG,6DAAU,CAAC,MAAM,EAAE,CAAC;YAChC,MAAM,IAAI,GAAyB,MAAM,GAAG,CAAC,eAAe,EAAE,CAAC;YAC/D,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;YAC7C,IAAI,MAAM,CAAC,mBAAmB,EAAE,CAAC;gBAC7B,MAAM,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,CAAC;YAC7E,CAAC;QACL,CAAC;IACL,CAAC;IAED,KAAK,CAAC,WAAW;QACb,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAC7B,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;QAEpC,IAAI,CAAC;YACD,MAAM,GAAG,GAAG,6DAAU,CAAC,MAAM,EAAE,CAAC;YAChC,MAAM,IAAI,GAA2B,MAAM,GAAG,CAAC,iBAAiB,EAAE,CAAC;YACnE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;YAC/C,IAAI,MAAM,CAAC,mBAAmB,EAAE,CAAC;gBAC7B,MAAM,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,CAAC;YAC/E,CAAC;QACL,CAAC;IACL,CAAC;IAED,KAAK,CAAC,UAAU;QACZ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC5B,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;QAEnC,IAAI,CAAC;YACD,MAAM,GAAG,GAAG,6DAAU,CAAC,MAAM,EAAE,CAAC;YAChC,MAAM,IAAI,GAA0B,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;YACjE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;YAC9C,IAAI,MAAM,CAAC,mBAAmB,EAAE,CAAC;gBAC7B,MAAM,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,CAAC;YAC9E,CAAC;QACL,CAAC;IACL,CAAC;IAED,KAAK,CAAC,aAAa;QACf,IAAI,CAAC;YACD,MAAM,GAAG,GAAG,6DAAU,CAAC,MAAM,EAAE,CAAC;YAChC,MAAM,IAAI,GAA6B,MAAM,GAAG,CAAC,mBAAmB,EAAE,CAAC;YACvE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAChC,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAClC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;QACrD,CAAC;IACL,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,EAAU,EAAE,KAAa;QACxC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;QAErC,IAAI,CAAC;YACD,MAAM,GAAG,GAAG,6DAAU,CAAC,MAAM,EAAE,CAAC;YAChC,MAAM,IAAI,GAAqB,MAAM,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YACzD,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC7C,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;YAChD,IAAI,MAAM,CAAC,mBAAmB,EAAE,CAAC;gBAC7B,MAAM,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,yBAAyB,CAAC,CAAC;YAChF,CAAC;QACL,CAAC;IACL,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,EAAU,EAAE,KAAa;QACrC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;QAC3B,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;QAElC,IAAI,CAAC;YACD,MAAM,GAAG,GAAG,6DAAU,CAAC,MAAM,EAAE,CAAC;YAChC,MAAM,IAAI,GAAc,MAAM,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YACnD,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC1C,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;YAC7C,IAAI,MAAM,CAAC,mBAAmB,EAAE,CAAC;gBAC7B,MAAM,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,CAAC;YAC7E,CAAC;QACL,CAAC;IACL,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,EAAU,EAAE,IAAY;QACrC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC5B,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;QAEnC,IAAI,CAAC;YACD,MAAM,GAAG,GAAG,6DAAU,CAAC,MAAM,EAAE,CAAC;YAChC,MAAM,IAAI,GAAe,MAAM,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;YACrD,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC1C,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;YAC9C,IAAI,MAAM,CAAC,mBAAmB,EAAE,CAAC;gBAC7B,MAAM,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,CAAC;YAC9E,CAAC;QACL,CAAC;IACL,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,KAAoB;QACnC,MAAM,MAAM,GAAG,KAAK,CAAC,MAA0B,CAAC;QAChD,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAElC,IAAI,CAAC,KAAK;YAAE,OAAO;QAEnB,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC5B,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;QAEnC,IAAI,CAAC;YACD,MAAM,GAAG,GAAG,6DAAU,CAAC,MAAM,EAAE,CAAC;YAChC,MAAM,IAAI,GAAmB,MAAM,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACrD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC;YAClC,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC3C,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;YACzC,IAAI,MAAM,CAAC,mBAAmB,EAAE,CAAC;gBAC7B,MAAM,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,eAAe,CAAC,CAAC;YACtE,CAAC;QACL,CAAC;IACL,CAAC;IAED,qBAAqB,CAAC,IAAqB;QACvC,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC3D,IAAI,CAAC,WAAW;YAAE,OAAO;QAEzB,WAAW,CAAC,SAAS,GAAG;;;;;oDAKoB,IAAI,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC;;;;oDAIvB,IAAI,CAAC,OAAO,EAAE,MAAM,IAAI,CAAC;;;;oDAIzB,IAAI,CAAC,MAAM,EAAE,MAAM,IAAI,CAAC;;;;oDAIxB,IAAI,CAAC,SAAS,EAAE,MAAM,IAAI,CAAC;;;;;SAKtE,CAAC;IACN,CAAC;IAED,mBAAmB,CAAC,IAA0B;QAC1C,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC3D,IAAI,CAAC,WAAW;YAAE,OAAO;QAEzB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QAC/B,MAAM,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC;mDACK,IAAI,CAAC,EAAE;mCACvB,IAAI,CAAC,IAAI;qCACP,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;wCAChE,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;4BACvF,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,UAAU,IAAI,CAAC,IAAI;;0BAEhG,IAAI,CAAC,IAAI;yBACV,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB;;6CAE7D,IAAI,CAAC,QAAQ,IAAI,EAAE;;SAEvD,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEZ,WAAW,CAAC,SAAS,GAAG;;kCAEE,KAAK,CAAC,MAAM;;sBAExB,SAAS;;;SAGtB,CAAC;IACN,CAAC;IAED,qBAAqB,CAAC,IAA4B;QAC9C,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC3D,IAAI,CAAC,WAAW;YAAE,OAAO;QAEzB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;QACnC,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC;uDACG,MAAM,CAAC,EAAE;qCAC3B,MAAM,CAAC,IAAI;4BACpB,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,UAAU,MAAM,CAAC,IAAI;;0BAExG,MAAM,CAAC,IAAI;yBACZ,MAAM,CAAC,SAAS,IAAI,CAAC;;;SAGrC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEZ,WAAW,CAAC,SAAS,GAAG;;oCAEI,OAAO,CAAC,MAAM;;sBAE5B,WAAW;;;SAGxB,CAAC;IACN,CAAC;IAED,oBAAoB,CAAC,IAA2B;QAC5C,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC3D,IAAI,CAAC,WAAW;YAAE,OAAO;QAEzB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;QACjC,MAAM,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC;qDACI,KAAK,CAAC,EAAE;qCACxB,KAAK,CAAC,IAAI;4BACnB,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,UAAU,KAAK,CAAC,IAAI;;0BAEpG,KAAK,CAAC,IAAI;yBACX,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB;yBACpF,KAAK,CAAC,IAAI,IAAI,EAAE;;;SAGhC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEZ,WAAW,CAAC,SAAS,GAAG;;mCAEG,MAAM,CAAC,MAAM;;sBAE1B,UAAU;;;SAGvB,CAAC;IACN,CAAC;IAED,sBAAsB,CAAC,IAAsB,EAAE,KAAa;QACxD,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC3D,IAAI,CAAC,WAAW;YAAE,OAAO;QAEzB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QAC/B,MAAM,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAkB,EAAE,EAAE;YAC/C,IAAI,IAAI,YAAY,kGAAgB,EAAE,CAAC;gBACnC,MAAM,QAAQ,GAAG,IAAwB,CAAC;gBAC1C,OAAO;2DACoC,QAAQ,CAAC,EAAE;2CAC3B,QAAQ,CAAC,IAAI;6CACX,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;gDAC5E,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;oCACnG,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,UAAU,QAAQ,CAAC,IAAI;;kCAEhH,QAAQ,CAAC,IAAI;iCACd,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB;;qDAEzE,QAAQ,CAAC,QAAQ,IAAI,EAAE;;iBAE3D,CAAC;YACN,CAAC;YACD,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEZ,WAAW,CAAC,SAAS,GAAG;;sBAEV,KAAK;qBACN,KAAK,CAAC,MAAM;;sBAEX,SAAS;;;SAGtB,CAAC;IACN,CAAC;IAED,mBAAmB,CAAC,IAAe,EAAE,KAAa;QAC9C,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC3D,IAAI,CAAC,WAAW;YAAE,OAAO;QAEzB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QAC/B,MAAM,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC;mDACK,IAAI,CAAC,EAAE;mCACvB,IAAI,CAAC,IAAI;qCACP,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;wCAChE,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;4BACvF,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,UAAU,IAAI,CAAC,IAAI;;0BAEhG,IAAI,CAAC,IAAI;yBACV,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB;;6CAE7D,IAAI,CAAC,QAAQ,IAAI,EAAE;;SAEvD,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEZ,WAAW,CAAC,SAAS,GAAG;;sBAEV,KAAK;qBACN,KAAK,CAAC,MAAM;;sBAEX,SAAS;;;SAGtB,CAAC;IACN,CAAC;IAED,oBAAoB,CAAC,IAAgB,EAAE,IAAY;QAC/C,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC3D,IAAI,CAAC,WAAW;YAAE,OAAO;QAEzB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QAC/B,MAAM,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC;mDACK,IAAI,CAAC,EAAE;mCACvB,IAAI,CAAC,IAAI;qCACP,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;wCAChE,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;4BACvF,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,UAAU,IAAI,CAAC,IAAI;;0BAEhG,IAAI,CAAC,IAAI;yBACV,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB;;6CAE7D,IAAI,CAAC,QAAQ,IAAI,EAAE;;SAEvD,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEZ,WAAW,CAAC,SAAS,GAAG;;sBAEV,IAAI;qBACL,KAAK,CAAC,MAAM;;sBAEX,SAAS;;;SAGtB,CAAC;IACN,CAAC;IAED,oBAAoB,CAAC,IAAoB,EAAE,KAAa;QACpD,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC3D,IAAI,CAAC,WAAW;YAAE,OAAO;QAEzB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;QACnC,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,IAAkB,EAAE,EAAE;YACnD,IAAI,IAAI,YAAY,kGAAgB,EAAE,CAAC;gBACnC,MAAM,QAAQ,GAAG,IAAwB,CAAC;gBAC1C,OAAO;2DACoC,QAAQ,CAAC,EAAE;2CAC3B,QAAQ,CAAC,IAAI;6CACX,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;gDAC5E,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;oCACnG,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,UAAU,QAAQ,CAAC,IAAI;;kCAEhH,QAAQ,CAAC,IAAI;iCACd,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB;;qDAEzE,QAAQ,CAAC,QAAQ,IAAI,EAAE;;iBAE3D,CAAC;YACN,CAAC;iBAAM,IAAI,IAAI,YAAY,mGAAiB,EAAE,CAAC;gBAC3C,MAAM,SAAS,GAAG,IAAyB,CAAC;gBAC5C,OAAO;6DACsC,SAAS,CAAC,EAAE;6CAC5B,SAAS,CAAC,IAAI;oCACvB,SAAS,CAAC,UAAU,IAAI,SAAS,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,UAAU,SAAS,CAAC,IAAI;;kCAEpH,SAAS,CAAC,IAAI;iCACf,SAAS,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB;;;iBAGhH,CAAC;YACN,CAAC;iBAAM,IAAI,IAAI,YAAY,oGAAkB,EAAE,CAAC;gBAC5C,MAAM,UAAU,GAAG,IAA0B,CAAC;gBAC9C,OAAO;+DACwC,UAAU,CAAC,EAAE;6CAC/B,UAAU,CAAC,IAAI;oCACxB,UAAU,CAAC,UAAU,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,UAAU,UAAU,CAAC,IAAI;;kCAExH,UAAU,CAAC,IAAI;;;iBAGhC,CAAC;YACN,CAAC;YACD,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEZ,WAAW,CAAC,SAAS,GAAG;;0CAEU,KAAK;qBAC1B,OAAO,CAAC,MAAM;;sBAEb,WAAW;;;SAGxB,CAAC;IACN,CAAC;IAED,sBAAsB;QAClB,MAAM,kBAAkB,GAAG,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC;QACzE,IAAI,CAAC,kBAAkB;YAAE,OAAO;QAEhC,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAa,EAAE,EAAE,CAAC;2DACT,QAAQ,CAAC,EAAE,IAAI,QAAQ,CAAC,UAAU;wCACrD,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,KAAK;;0BAE7C,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,KAAK;yBAChC,QAAQ,CAAC,SAAS,IAAI,CAAC;;;SAGvC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEZ,kBAAkB,CAAC,SAAS,GAAG,aAAa,CAAC;IACjD,CAAC;IAED,mBAAmB,CAAC,IAAY;QAC5B,yCAAyC;QACzC,QAAQ,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAClD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,mCAAmC;QACnC,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,IAAI,IAAI,CAAC,CAAC;QAChE,IAAI,OAAO,EAAE,CAAC;YACV,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACpC,CAAC;IACL,CAAC;CACJ;AAED,yBAAyB;AACzB,MAAM,CAAC,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;AAE7C,wCAAwC;AACxC,MAAM,CAAC,QAAQ,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;AACzD,MAAM,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;AAC/D,MAAM,CAAC,SAAS,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC;AAC3D,MAAM,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;AAC/D,MAAM,CAAC,UAAU,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;AAC7D,MAAM,CAAC,aAAa,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;AACnE,MAAM,CAAC,YAAY,GAAG,CAAC,EAAU,EAAE,KAAa,EAAE,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACnG,MAAM,CAAC,SAAS,GAAG,CAAC,EAAU,EAAE,KAAa,EAAE,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AAC7F,MAAM,CAAC,UAAU,GAAG,CAAC,EAAU,EAAE,IAAY,EAAE,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;AAC7F,MAAM,CAAC,YAAY,GAAG,CAAC,KAAoB,EAAE,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;;;;;;;;;;;;;;;AClhB1F,0EAA0E;AACnE,SAAS,oBAAoB;IAChC,0CAA0C;IAC1C,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,KAAY;QACrD,MAAM,MAAM,GAAG,KAAK,CAAC,MAAiB,CAAC;QACvC,MAAM,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAgB,CAAC;QACpE,IAAI,WAAW,EAAE,CAAC;YACd,MAAM,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC,MAAO,CAAC;YAC3C,MAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAC;YACpD,MAAM,UAAU,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC;YACxD,MAAM,aAAa,GAAG,WAAW,CAAC,OAAO,CAAC,aAAa,IAAI,EAAE,CAAC;YAC9D,MAAM,UAAU,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC;YAC1D,MAAM,SAAS,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE/F,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;YAC7H,KAAK,CAAC,eAAe,EAAE,CAAC,CAAC,oDAAoD;YAC7E,OAAO,CAAC,oDAAoD;QAChE,CAAC;QAED,8CAA8C;QAC9C,MAAM,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAgB,CAAC;QAC5E,IAAI,eAAe,EAAE,CAAC;YAClB,MAAM,UAAU,GAAG,eAAe,CAAC,OAAO,CAAC,UAAW,CAAC;YACvD,MAAM,aAAa,GAAG,eAAe,CAAC,OAAO,CAAC,aAAa,IAAI,EAAE,CAAC;YAElE,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;YAC9D,KAAK,CAAC,eAAe,EAAE,CAAC,CAAC,iCAAiC;YAC1D,OAAO,CAAC,oDAAoD;QAChE,CAAC;QAED,2CAA2C;QAC3C,MAAM,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAgB,CAAC;QACtE,IAAI,YAAY,EAAE,CAAC;YACf,MAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,OAAQ,CAAC;YAC9C,MAAM,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC;YAEzD,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;YACrD,KAAK,CAAC,eAAe,EAAE,CAAC,CAAC,iCAAiC;YAC1D,OAAO,CAAC,oDAAoD;QAChE,CAAC;QAED,4CAA4C;QAC5C,MAAM,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAgB,CAAC;QACxE,IAAI,aAAa,EAAE,CAAC;YAChB,MAAM,QAAQ,GAAG,aAAa,CAAC,OAAO,CAAC,QAAS,CAAC;YACjD,MAAM,UAAU,GAAG,aAAa,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC;YAE1D,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;YACvD,KAAK,CAAC,eAAe,EAAE,CAAC,CAAC,iCAAiC;YAC1D,OAAO,CAAC,oDAAoD;QAChE,CAAC;IACL,CAAC,CAAC,CAAC;AACP,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDD;;;;;;GAMG;AAEH,+EAA+E;AAC/E,8BAA8B;AAC9B,+EAA+E;AAE/E;;GAEG;AACI,MAAe,WAAW;IAC7B,YACoB,IAAY,EACZ,EAAU;QADV,SAAI,GAAJ,IAAI,CAAQ;QACZ,OAAE,GAAF,EAAE,CAAQ;IAC3B,CAAC;CACP;AAED;;GAEG;AACI,MAAe,UAAW,SAAQ,WAAW;IAChD,YACI,IAAY,EACZ,EAAU,EACM,UAAuB;QAEvC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAFA,eAAU,GAAV,UAAU,CAAa;IAG3C,CAAC;CACJ;AAyED;;GAEG;AACH,IAAY,cASX;AATD,WAAY,cAAc;IACtB,iCAAe;IACf,mCAAiB;IACjB,mCAAiB;IACjB,2DAAyC;IACzC,qCAAmB;IACnB,uCAAqB;IACrB,uCAAqB;IACrB,uCAAqB;AACzB,CAAC,EATW,cAAc,KAAd,cAAc,QASzB;AAED,+EAA+E;AAC/E,wBAAwB;AACxB,+EAA+E;AAE/E;;GAEG;AACI,MAAe,YAAa,SAAQ,UAAU;IACjD,YACI,IAAY,EACZ,EAAU,EACV,UAAuB,EACP,QAAwB;QAExC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC;QAFZ,aAAQ,GAAR,QAAQ,CAAgB;IAG5C,CAAC;CACJ;AAED;;GAEG;AACI,MAAM,gBAAiB,SAAQ,YAAY;IAC9C,YACI,IAAY,EACZ,EAAU,EACM,OAAsB,EACtB,KAAkB,EAClB,QAAgB,EAChB,UAAmB,EACnB,SAAiB,EACjB,KAAmB,EACnC,UAAuB;QAEvB,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC;QARlC,YAAO,GAAP,OAAO,CAAe;QACtB,UAAK,GAAL,KAAK,CAAa;QAClB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,eAAU,GAAV,UAAU,CAAS;QACnB,cAAS,GAAT,SAAS,CAAQ;QACjB,UAAK,GAAL,KAAK,CAAc;IAIvC,CAAC;CACJ;AAED;;GAEG;AACI,MAAM,iBAAkB,SAAQ,YAAY;IAC/C,YACI,IAAY,EACZ,EAAU,EACM,OAAsB,EACtB,QAAgB,EAChB,UAAmB,EACnB,SAAiB,EACjB,KAAmB,EACnC,UAAuB;QAEvB,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC;QAPnC,YAAO,GAAP,OAAO,CAAe;QACtB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,eAAU,GAAV,UAAU,CAAS;QACnB,cAAS,GAAT,SAAS,CAAQ;QACjB,UAAK,GAAL,KAAK,CAAc;IAIvC,CAAC;CACJ;AAED;;GAEG;AACI,MAAM,iBAAkB,SAAQ,YAAY;IAC/C,YACI,IAAY,EACZ,EAAU,EACM,OAAsB,EACtB,IAAY,EACZ,SAAiB,EACjC,UAAuB;QAEvB,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC;QALnC,YAAO,GAAP,OAAO,CAAe;QACtB,SAAI,GAAJ,IAAI,CAAQ;QACZ,cAAS,GAAT,SAAS,CAAQ;IAIrC,CAAC;CACJ;AAED;;GAEG;AACI,MAAM,kBAAmB,SAAQ,YAAY;IAChD,YACI,IAAY,EACZ,EAAU,EACM,WAAmB,EACnB,SAAiB,EACjC,UAAuB;QAEvB,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,cAAc,CAAC,OAAO,CAAC,CAAC;QAJpC,gBAAW,GAAX,WAAW,CAAQ;QACnB,cAAS,GAAT,SAAS,CAAQ;IAIrC,CAAC;CACJ;AAED,+EAA+E;AAC/E,eAAe;AACf,+EAA+E;AAE/E;;GAEG;AACI,MAAM,aAAc,SAAQ,UAAU;IACzC,YACI,IAAY,EACZ,EAAU,EACM,QAAgB,EAChB,WAAmB,EACnB,OAAsB,EACtB,KAAyB,EACzB,QAAgB,EAChB,KAAmB,EACnB,iBAAoC,EACpC,gBAAyB,EACzB,SAAkB,EAClB,UAAmB,EACnB,aAAsB,EACtB,gBAAyB,EACzB,UAAmB,EACnB,UAAkB,EAClB,WAAmB,EACnB,UAAkB,EAClB,gBAAyC,EACzD,UAAuB,EACP,IAAc;QAE9B,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC;QApBZ,aAAQ,GAAR,QAAQ,CAAQ;QAChB,gBAAW,GAAX,WAAW,CAAQ;QACnB,YAAO,GAAP,OAAO,CAAe;QACtB,UAAK,GAAL,KAAK,CAAoB;QACzB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,UAAK,GAAL,KAAK,CAAc;QACnB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,qBAAgB,GAAhB,gBAAgB,CAAS;QACzB,cAAS,GAAT,SAAS,CAAS;QAClB,eAAU,GAAV,UAAU,CAAS;QACnB,kBAAa,GAAb,aAAa,CAAS;QACtB,qBAAgB,GAAhB,gBAAgB,CAAS;QACzB,eAAU,GAAV,UAAU,CAAS;QACnB,eAAU,GAAV,UAAU,CAAQ;QAClB,gBAAW,GAAX,WAAW,CAAQ;QACnB,eAAU,GAAV,UAAU,CAAQ;QAClB,qBAAgB,GAAhB,gBAAgB,CAAyB;QAEzC,SAAI,GAAJ,IAAI,CAAU;IAGlC,CAAC;CACJ;AAcD;;GAEG;AACI,MAAM,SAAS;IAClB,YACoB,IAAY,EACZ,EAAU,EACV,WAA0B,EAC1B,OAAsB,EACtB,QAAgB,EAChB,SAAiB,EACjB,WAAmB,EACnB,QAAiB,EACjB,IAAa,EACb,UAAuB,EACvB,KAAkB;QAVlB,SAAI,GAAJ,IAAI,CAAQ;QACZ,OAAE,GAAF,EAAE,CAAQ;QACV,gBAAW,GAAX,WAAW,CAAe;QAC1B,YAAO,GAAP,OAAO,CAAe;QACtB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,cAAS,GAAT,SAAS,CAAQ;QACjB,gBAAW,GAAX,WAAW,CAAQ;QACnB,aAAQ,GAAR,QAAQ,CAAS;QACjB,SAAI,GAAJ,IAAI,CAAS;QACb,eAAU,GAAV,UAAU,CAAa;QACvB,UAAK,GAAL,KAAK,CAAa;IACnC,CAAC;CACP;AAED;;GAEG;AACI,MAAM,UAAU;IACnB,YACoB,IAAY,EACZ,EAAU,EACV,WAA0B,EAC1B,WAAmB,EACnB,SAAiB,EACjB,UAAkB,EAClB,UAAuB,EACvB,KAAkB,EAClB,MAAmB;QARnB,SAAI,GAAJ,IAAI,CAAQ;QACZ,OAAE,GAAF,EAAE,CAAQ;QACV,gBAAW,GAAX,WAAW,CAAe;QAC1B,gBAAW,GAAX,WAAW,CAAQ;QACnB,cAAS,GAAT,SAAS,CAAQ;QACjB,eAAU,GAAV,UAAU,CAAQ;QAClB,eAAU,GAAV,UAAU,CAAa;QACvB,UAAK,GAAL,KAAK,CAAa;QAClB,WAAM,GAAN,MAAM,CAAa;IACpC,CAAC;CACP;AAyED,+EAA+E;AAC/E,mBAAmB;AACnB,+EAA+E;AAE/E;;GAEG;AACI,MAAM,WAAW;IACpB,YACoB,IAAO,EACP,UAAmB,IAAI,EACvB,KAAc;QAFd,SAAI,GAAJ,IAAI,CAAG;QACP,YAAO,GAAP,OAAO,CAAgB;QACvB,UAAK,GAAL,KAAK,CAAS;IAC/B,CAAC;CACP;AAED;;GAEG;AACI,MAAM,aAAa;IACtB,YACoB,KAAa,EACb,OAAgB;QADhB,UAAK,GAAL,KAAK,CAAQ;QACb,YAAO,GAAP,OAAO,CAAS;IACjC,CAAC;CACP;AAED;;GAEG;AACI,MAAM,cAAc;IACvB,YACoB,MAAc,EACd,OAAe,EACf,IAAY,EACZ,SAAiB,EACjB,OAAoB,EACpB,WAA4B;QAL5B,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAQ;QACf,SAAI,GAAJ,IAAI,CAAQ;QACZ,cAAS,GAAT,SAAS,CAAQ;QACjB,YAAO,GAAP,OAAO,CAAa;QACpB,gBAAW,GAAX,WAAW,CAAiB;IAC7C,CAAC;CACP;AAoBD;;GAEG;AACI,MAAM,cAAc;IACvB,YACoB,OAAuB,EACvB,UAAkB,EAClB,KAAa,EACb,QAAiB;QAHjB,YAAO,GAAP,OAAO,CAAgB;QACvB,eAAU,GAAV,UAAU,CAAQ;QAClB,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAS;IAClC,CAAC;CACP;AAED;;GAEG;AACI,MAAM,qBAAsB,SAAQ,aAAa;IACpD,YACI,aAA4B,EACZ,aAA6B,EAC7B,MAA0B;QAE1C,KAAK,CACD,aAAa,CAAC,IAAI,EAClB,aAAa,CAAC,EAAE,EAChB,aAAa,CAAC,QAAQ,EACtB,aAAa,CAAC,WAAW,EACzB,aAAa,CAAC,OAAO,EACrB,aAAa,CAAC,KAAK,EACnB,aAAa,CAAC,QAAQ,EACtB,aAAa,CAAC,KAAK,EACnB,aAAa,CAAC,iBAAiB,EAC/B,aAAa,CAAC,gBAAgB,EAC9B,aAAa,CAAC,SAAS,EACvB,aAAa,CAAC,UAAU,EACxB,aAAa,CAAC,aAAa,EAC3B,aAAa,CAAC,gBAAgB,EAC9B,aAAa,CAAC,UAAU,EACxB,aAAa,CAAC,UAAU,EACxB,aAAa,CAAC,WAAW,EACzB,aAAa,CAAC,UAAU,EACxB,aAAa,CAAC,gBAAgB,EAC9B,aAAa,CAAC,UAAU,EACxB,aAAa,CAAC,IAAI,CACrB,CAAC;QAzBc,kBAAa,GAAb,aAAa,CAAgB;QAC7B,WAAM,GAAN,MAAM,CAAoB;IAyB9C,CAAC;CACJ;AAED;;GAEG;AACI,MAAM,eAAe;IACxB,YACoB,KAAoB,EACpB,MAAsB,EACtB,OAAwB,EACxB,aAAoC,EACpC,QAA0B,EAC1B,SAAqC;QALrC,UAAK,GAAL,KAAK,CAAe;QACpB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAiB;QACxB,kBAAa,GAAb,aAAa,CAAuB;QACpC,aAAQ,GAAR,QAAQ,CAAkB;QAC1B,cAAS,GAAT,SAAS,CAA4B;IACtD,CAAC;CACP;AAED;;GAEG;AACI,MAAM,oBAAoB;IAC7B,YACoB,KAAoB,EACpB,UAAkB;QADlB,UAAK,GAAL,KAAK,CAAe;QACpB,eAAU,GAAV,UAAU,CAAQ;IACnC,CAAC;CACP;AAED;;GAEG;AACI,MAAM,qBAAqB;IAC9B,YACoB,MAAsB,EACtB,UAAkB;QADlB,WAAM,GAAN,MAAM,CAAgB;QACtB,eAAU,GAAV,UAAU,CAAQ;IACnC,CAAC;CACP;AAED;;GAEG;AACI,MAAM,sBAAsB;IAC/B,YACoB,OAAwB,EACxB,UAAkB;QADlB,YAAO,GAAP,OAAO,CAAiB;QACxB,eAAU,GAAV,UAAU,CAAQ;IACnC,CAAC;CACP;AAED;;GAEG;AACI,MAAM,4BAA4B;IACrC,YACoB,aAAoC,EACpC,UAAkB;QADlB,kBAAa,GAAb,aAAa,CAAuB;QACpC,eAAU,GAAV,UAAU,CAAQ;IACnC,CAAC;CACP;AAED;;GAEG;AACI,MAAM,uBAAuB;IAChC,YACoB,QAA0B,EAC1B,UAAkB;QADlB,aAAQ,GAAR,QAAQ,CAAkB;QAC1B,eAAU,GAAV,UAAU,CAAQ;IACnC,CAAC;CACP;AAED;;GAEG;AACI,MAAM,wBAAwB;IACjC,YACoB,SAAqC,EACrC,UAAkB;QADlB,cAAS,GAAT,SAAS,CAA4B;QACrC,eAAU,GAAV,UAAU,CAAQ;IACnC,CAAC;CACP;AAED;;GAEG;AACI,MAAM,gBAAgB;IACzB,YACoB,EAAU,EACV,QAAgB,EAChB,QAAa,EACb,KAAqB,EACrB,UAAkB;QAJlB,OAAE,GAAF,EAAE,CAAQ;QACV,aAAQ,GAAR,QAAQ,CAAQ;QAChB,aAAQ,GAAR,QAAQ,CAAK;QACb,UAAK,GAAL,KAAK,CAAgB;QACrB,eAAU,GAAV,UAAU,CAAQ;IACnC,CAAC;CACP;AAED,+EAA+E;AAC/E,iBAAiB;AACjB,+EAA+E;AAE/E;;GAEG;AACI,MAAM,UAAU;IACnB,YACoB,EAAU,EACV,OAAe,EACf,SAAiB,EACjB,UAAkB,EAClB,SAAiB,EACjB,eAAuB,EACvB,UAAkB,EAClB,YAAoB,EACpB,cAAsB,EACtB,IAAY,EACZ,WAAmB,EACnB,gBAAwB;QAXxB,OAAE,GAAF,EAAE,CAAQ;QACV,YAAO,GAAP,OAAO,CAAQ;QACf,cAAS,GAAT,SAAS,CAAQ;QACjB,eAAU,GAAV,UAAU,CAAQ;QAClB,cAAS,GAAT,SAAS,CAAQ;QACjB,oBAAe,GAAf,eAAe,CAAQ;QACvB,eAAU,GAAV,UAAU,CAAQ;QAClB,iBAAY,GAAZ,YAAY,CAAQ;QACpB,mBAAc,GAAd,cAAc,CAAQ;QACtB,SAAI,GAAJ,IAAI,CAAQ;QACZ,gBAAW,GAAX,WAAW,CAAQ;QACnB,qBAAgB,GAAhB,gBAAgB,CAAQ;IACzC,CAAC;CACP;AAED;;GAEG;AACI,MAAM,mBAAmB;IAC5B,YACoB,KAAc,EACd,IAAY,EACZ,MAAc,EACd,OAAgB,EAChB,OAAgB,EAChB,GAAY;QALZ,UAAK,GAAL,KAAK,CAAS;QACd,SAAI,GAAJ,IAAI,CAAQ;QACZ,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAS;QAChB,YAAO,GAAP,OAAO,CAAS;QAChB,QAAG,GAAH,GAAG,CAAS;IAC7B,CAAC;CACP;AAED;;GAEG;AACI,MAAM,wBAAwB;IACjC,YACoB,IAAY,EACZ,OAAe;QADf,SAAI,GAAJ,IAAI,CAAQ;QACZ,YAAO,GAAP,OAAO,CAAQ;IAChC,CAAC;CACP;AAED;;GAEG;AACI,MAAM,iBAAiB;IAC1B,YACoB,IAAmB,EACnB,KAA2B,EAC3B,UAAqC,EACrC,UAAmB,KAAK;QAHxB,SAAI,GAAJ,IAAI,CAAe;QACnB,UAAK,GAAL,KAAK,CAAsB;QAC3B,eAAU,GAAV,UAAU,CAA2B;QACrC,YAAO,GAAP,OAAO,CAAiB;IACzC,CAAC;CACP;AA6CD,+EAA+E;AAC/E,0BAA0B;AAC1B,+EAA+E;AAE/E;;GAEG;AACI,MAAM,eAAe;IASxB,YAAY,UAAkB,EAAE,EAAE,UAAkC,EAAE;QAClE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,wBAAwB;QACnE,IAAI,CAAC,OAAO,GAAG;YACX,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,CAAC;YACV,GAAG,OAAO;SACb,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC;IAC7C,CAAC;IAED;;;OAGG;IACI,UAAU,CAAC,OAAe;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAED;;;OAGG;IACI,WAAW,CAAC,QAAgB;QAC/B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED;;;;OAIG;IACI,gBAAgB,CAAC,SAAsB,EAAE;QAC5C,MAAM,WAAW,GAAG,IAAI,eAAe,EAAE,CAAC;QAE1C,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAChD,CAAC;QAED,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,WAAW,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClD,CAAC;QAED,4BAA4B;QAC5B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;YAC5C,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;gBACxC,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YACnC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC,QAAQ,EAAE,CAAC;IAClC,CAAC;IAED;;;;;OAKG;IACI,KAAK,CAAC,OAAO,CAAC,QAAgB,EAAE,UAA0B,EAAE;QAC/D,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,EAAE,CAAC;QACzC,MAAM,MAAM,GAAgB;YACxB,MAAM,EAAE,KAAK;YACb,OAAO,EAAE;gBACL,cAAc,EAAE,kBAAkB;gBAClC,GAAG,OAAO,CAAC,OAAO;aACrB;YACD,GAAG,OAAO;SACb,CAAC;QAEF,IAAI,SAAgB,CAAC;QACrB,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,CAAC;YAC/D,IAAI,CAAC;gBACD,MAAM,UAAU,GAAG,IAAI,eAAe,EAAE,CAAC;gBACzC,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAE7E,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,EAAE;oBAC9B,GAAG,MAAM;oBACT,MAAM,EAAE,UAAU,CAAC,MAAM;iBAC5B,CAAC,CAAC;gBAEH,YAAY,CAAC,SAAS,CAAC,CAAC;gBAExB,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;oBACf,MAAM,SAAS,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC1D,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,IAAI,QAAQ,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;gBAC1F,CAAC;gBAED,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YACjC,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACb,SAAS,GAAG,KAAc,CAAC;gBAC3B,IAAI,OAAO,KAAK,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;oBACnC,MAAM,KAAK,CAAC;gBAChB,CAAC;gBACD,6CAA6C;gBAC7C,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YACnF,CAAC;QACL,CAAC;IACL,CAAC;IAED;;;OAGG;IACI,KAAK,CAAC,SAAS;QAClB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,IAAI,cAAc,CACrB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,WAAW,CACnB,CAAC;IACN,CAAC;IAED;;;;;OAKG;IACI,KAAK,CAAC,MAAM,CAAC,KAAa,EAAE,WAAkC,IAAI;QACrE,MAAM,MAAM,GAAiB,EAAE,KAAK,EAAE,CAAC;QACvC,IAAI,QAAQ,EAAE,CAAC;YACX,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC/B,CAAC;QACD,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAClD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,eAAe,WAAW,EAAE,CAAC,CAAC;QAE9D,qDAAqD;QACrD,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAW,EAAE,EAAE;YAC7C,QAAQ,MAAM,CAAC,IAAI,EAAE,CAAC;gBAClB,KAAK,kBAAkB;oBACnB,OAAO,IAAI,gBAAgB,CACvB,MAAM,CAAC,KAAK,EACZ,MAAM,CAAC,EAAE,EACT,MAAM,CAAC,OAAO,IAAI,EAAE,EACpB,MAAM,CAAC,KAAK,IAAI,IAAI,EACpB,MAAM,CAAC,QAAQ,IAAI,EAAE,EACrB,MAAM,CAAC,UAAU,IAAI,KAAK,EAC1B,MAAM,CAAC,SAAS,IAAI,EAAE,EACtB,MAAM,CAAC,KAAK,IAAI,IAAI,EACpB,MAAM,CAAC,UAAU,IAAI,EAAE,CAC1B,CAAC;gBACN,KAAK,mBAAmB;oBACpB,OAAO,IAAI,iBAAiB,CACxB,MAAM,CAAC,KAAK,EACZ,MAAM,CAAC,EAAE,EACT,MAAM,CAAC,OAAO,IAAI,EAAE,EACpB,MAAM,CAAC,QAAQ,IAAI,EAAE,EACrB,MAAM,CAAC,UAAU,IAAI,KAAK,EAC1B,MAAM,CAAC,SAAS,IAAI,EAAE,EACtB,MAAM,CAAC,KAAK,IAAI,IAAI,EACpB,MAAM,CAAC,UAAU,IAAI,EAAE,CAC1B,CAAC;gBACN,KAAK,mBAAmB;oBACpB,OAAO,IAAI,iBAAiB,CACxB,MAAM,CAAC,KAAK,EACZ,MAAM,CAAC,QAAQ,EACf,MAAM,CAAC,OAAO,IAAI,EAAE,EACpB,MAAM,CAAC,IAAI,IAAI,EAAE,EACjB,MAAM,CAAC,SAAS,IAAI,CAAC,EACrB,MAAM,CAAC,UAAU,IAAI,EAAE,CAC1B,CAAC;gBACN,KAAK,oBAAoB;oBACrB,OAAO,IAAI,kBAAkB,CACzB,MAAM,CAAC,IAAI,EACX,MAAM,CAAC,QAAQ,EACf,MAAM,CAAC,WAAW,IAAI,EAAE,EACxB,MAAM,CAAC,SAAS,IAAI,CAAC,EACrB,MAAM,CAAC,UAAU,IAAI,EAAE,CAC1B,CAAC;gBACN;oBACI,OAAO,MAAM,CAAC,CAAC,iCAAiC;YACxD,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,cAAc,CACrB,OAAO,EACP,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,QAAQ,CAChB,CAAC;IACN,CAAC;IAED;;;;OAIG;IACI,KAAK,CAAC,WAAW,CAAC,EAAU;QAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5C,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,WAAW,EAAE,CAAC,CAAC;QAElE,MAAM,QAAQ,GAAG,IAAI,aAAa,CAC9B,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,EACvB,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,QAAQ,IAAI,EAAE,EACnB,IAAI,CAAC,WAAW,IAAI,EAAE,EACtB,IAAI,CAAC,OAAO,IAAI,EAAE,EAClB,IAAI,CAAC,KAAK,IAAI,IAAI,EAClB,IAAI,CAAC,QAAQ,IAAI,EAAE,EACnB,IAAI,CAAC,KAAK,IAAI,IAAI,EAClB,IAAI,CAAC,iBAAiB,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,EAC1C,IAAI,CAAC,gBAAgB,IAAI,KAAK,EAC9B,IAAI,CAAC,SAAS,IAAI,KAAK,EACvB,IAAI,CAAC,UAAU,IAAI,KAAK,EACxB,IAAI,CAAC,aAAa,IAAI,KAAK,EAC3B,IAAI,CAAC,gBAAgB,IAAI,KAAK,EAC9B,IAAI,CAAC,UAAU,IAAI,KAAK,EACxB,IAAI,CAAC,UAAU,IAAI,CAAC,EACpB,IAAI,CAAC,WAAW,IAAI,EAAE,EACtB,IAAI,CAAC,UAAU,IAAI,EAAE,EACrB,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAC7B,IAAI,CAAC,UAAU,IAAI,EAAE,EACrB,IAAI,CAAC,IAAI,IAAI,EAAE,CAClB,CAAC;QAEF,OAAO,IAAI,qBAAqB,CAC5B,QAAQ,EACR,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,MAAM,CACd,CAAC;IACN,CAAC;IAED;;;;OAIG;IACI,KAAK,CAAC,gBAAgB,CAAC,EAAU;QACpC,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5C,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,IAAI,WAAW,EAAE,CAAC,CAAC;IACrE,CAAC;IAED;;;;;OAKG;IACI,iBAAiB,CAAC,EAAU,EAAE,UAAyB,IAAI;QAC9D,MAAM,MAAM,GAAiB,EAAE,CAAC;QAChC,IAAI,OAAO,EAAE,CAAC;YACV,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;QAC7B,CAAC;QACD,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAClD,OAAO,GAAG,IAAI,CAAC,OAAO,eAAe,EAAE,IAAI,WAAW,EAAE,CAAC;IAC7D,CAAC;IAED;;;;OAIG;IACI,KAAK,CAAC,YAAY,CAAC,QAAgB;QACtC,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5C,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,QAAQ,IAAI,WAAW,EAAE,CAAC,CAAC;QAEzE,OAAO,IAAI,SAAS,CAChB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,OAAO,IAAI,EAAE,EAClB,IAAI,CAAC,QAAQ,IAAI,EAAE,EACnB,IAAI,CAAC,SAAS,IAAI,CAAC,EACnB,IAAI,CAAC,WAAW,IAAI,CAAC,EACrB,IAAI,CAAC,QAAQ,IAAI,KAAK,EACtB,IAAI,CAAC,IAAI,IAAI,KAAK,EAClB,IAAI,CAAC,UAAU,IAAI,EAAE,EACrB,IAAI,CAAC,KAAK,IAAI,EAAE,CACnB,CAAC;IACN,CAAC;IAED;;;;OAIG;IACI,KAAK,CAAC,aAAa,CAAC,QAAgB;QACvC,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5C,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,eAAe,QAAQ,IAAI,WAAW,EAAE,CAAC,CAAC;QAE1E,OAAO,IAAI,UAAU,CACjB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,WAAW,IAAI,EAAE,EACtB,IAAI,CAAC,SAAS,IAAI,CAAC,EACnB,IAAI,CAAC,UAAU,IAAI,CAAC,EACpB,IAAI,CAAC,UAAU,IAAI,EAAE,EACrB,IAAI,CAAC,KAAK,IAAI,EAAE,EAChB,IAAI,CAAC,MAAM,IAAI,EAAE,CACpB,CAAC;IACN,CAAC;IAED;;;OAGG;IACI,KAAK,CAAC,UAAU;QACnB,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5C,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,gBAAgB,WAAW,EAAE,CAAC,CAAC;QAE/D,OAAO,IAAI,eAAe,CACtB,IAAI,CAAC,KAAK,IAAI,EAAE,EAChB,IAAI,CAAC,MAAM,IAAI,EAAE,EACjB,IAAI,CAAC,OAAO,IAAI,EAAE,EAClB,IAAI,CAAC,aAAa,IAAI,EAAE,EACxB,IAAI,CAAC,QAAQ,IAAI,EAAE,EACnB,IAAI,CAAC,SAAS,IAAI,EAAE,CACvB,CAAC;IACN,CAAC;IAED;;;OAGG;IACI,KAAK,CAAC,eAAe;QACxB,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5C,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,sBAAsB,WAAW,EAAE,CAAC,CAAC;QAErE,OAAO,IAAI,oBAAoB,CAC3B,IAAI,CAAC,KAAK,IAAI,EAAE,EAChB,IAAI,CAAC,UAAU,IAAI,CAAC,CACvB,CAAC;IACN,CAAC;IAED;;;OAGG;IACI,KAAK,CAAC,gBAAgB;QACzB,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5C,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,uBAAuB,WAAW,EAAE,CAAC,CAAC;QAEtE,OAAO,IAAI,qBAAqB,CAC5B,IAAI,CAAC,MAAM,IAAI,EAAE,EACjB,IAAI,CAAC,UAAU,IAAI,CAAC,CACvB,CAAC;IACN,CAAC;IAED;;;OAGG;IACI,KAAK,CAAC,iBAAiB;QAC1B,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5C,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,wBAAwB,WAAW,EAAE,CAAC,CAAC;QAEvE,OAAO,IAAI,sBAAsB,CAC7B,IAAI,CAAC,OAAO,IAAI,EAAE,EAClB,IAAI,CAAC,UAAU,IAAI,CAAC,CACvB,CAAC;IACN,CAAC;IAED;;;OAGG;IACI,KAAK,CAAC,uBAAuB;QAChC,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5C,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,8BAA8B,WAAW,EAAE,CAAC,CAAC;QAE7E,OAAO,IAAI,4BAA4B,CACnC,IAAI,CAAC,aAAa,IAAI,EAAE,EACxB,IAAI,CAAC,UAAU,IAAI,CAAC,CACvB,CAAC;IACN,CAAC;IAED;;;OAGG;IACI,KAAK,CAAC,kBAAkB;QAC3B,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5C,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,yBAAyB,WAAW,EAAE,CAAC,CAAC;QAExE,OAAO,IAAI,uBAAuB,CAC9B,IAAI,CAAC,QAAQ,IAAI,EAAE,EACnB,IAAI,CAAC,UAAU,IAAI,CAAC,CACvB,CAAC;IACN,CAAC;IAED;;;OAGG;IACI,KAAK,CAAC,mBAAmB;QAC5B,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5C,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,0BAA0B,WAAW,EAAE,CAAC,CAAC;QAEzE,OAAO,IAAI,wBAAwB,CAC/B,IAAI,CAAC,SAAS,IAAI,EAAE,EACpB,IAAI,CAAC,UAAU,IAAI,CAAC,CACvB,CAAC;IACN,CAAC;IAED;;;;OAIG;IACI,KAAK,CAAC,WAAW,CAAC,EAAU;QAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5C,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,WAAW,EAAE,CAAC,CAAC;QAEtE,OAAO,IAAI,gBAAgB,CACvB,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,KAAK,IAAI,EAAE,EAChB,IAAI,CAAC,UAAU,IAAI,CAAC,CACvB,CAAC;IACN,CAAC;IAED;;;OAGG;IACI,KAAK,CAAC,UAAU;QACnB,OAAO,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IAChE,CAAC;IAED;;;OAGG;IACI,KAAK,CAAC,aAAa;QACtB,OAAO,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;IAC5C,CAAC;CACJ;AAED,+EAA+E;AAC/E,gCAAgC;AAChC,+EAA+E;AAE/E,iEAAe,eAAe,EAAC;;;;;;;;;;;;;;;;ACplC8C;AAE7E,sBAAsB;AACf,MAAM,mBAAmB;IAG5B;QAFQ,wBAAmB,GAAW,CAAC,CAAC;QAGpC,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,gBAAgB,CAAC,IAAsB,EAAE,KAAa,EAAE,OAAe,EAAE,WAAmB,gDAAQ,CAAC,qBAAqB;QACtH,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;YAClD,OAAO,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,cAAc,GAAG,gBAAgB,EAAE,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAEpE,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACnD,YAAY,CAAC,SAAS,GAAG,gBAAgB,IAAI,EAAE,CAAC;QAChD,YAAY,CAAC,EAAE,GAAG,cAAc,CAAC;QAEjC,2BAA2B;QAC3B,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC9C,OAAO,CAAC,SAAS,GAAG,mBAAmB,CAAC;QACxC,OAAO,CAAC,WAAW,GAAG,0DAAkB,CAAC,IAAI,CAAC,IAAI,0DAAkB,CAAC,IAAI,CAAC;QAC1E,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAElC,8BAA8B;QAC9B,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACjD,UAAU,CAAC,SAAS,GAAG,sBAAsB,CAAC;QAE9C,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC/C,QAAQ,CAAC,SAAS,GAAG,oBAAoB,CAAC;QAC1C,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;QAC7B,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAEjC,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACjD,UAAU,CAAC,SAAS,GAAG,sBAAsB,CAAC;QAC9C,UAAU,CAAC,WAAW,GAAG,OAAO,CAAC;QACjC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAEnC,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAErC,sBAAsB;QACtB,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACrD,WAAW,CAAC,SAAS,GAAG,oBAAoB,CAAC;QAC7C,WAAW,CAAC,WAAW,GAAG,GAAG,CAAC;QAC9B,WAAW,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;QAC1F,YAAY,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAEtC,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAEpC,oBAAoB;QACpB,UAAU,CAAC,GAAG,EAAE;YACZ,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC,EAAE,EAAE,CAAC,CAAC;QAEP,6BAA6B;QAC7B,IAAI,SAAS,GAAkB,IAAI,CAAC;QACpC,IAAI,QAAQ,GAAG,CAAC,EAAE,CAAC;YACf,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;gBAC/B,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;YAC5C,CAAC,EAAE,QAAQ,CAAC,CAAC;QACjB,CAAC;QAED,yCAAyC;QACzC,YAAY,CAAC,OAAO,CAAC,SAAS,GAAG,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;QAE7D,OAAO,cAAc,CAAC;IAC1B,CAAC;IAED,kBAAkB,CAAC,cAAsB;QACrC,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QAC7D,IAAI,YAAY,EAAE,CAAC;YACf,iCAAiC;YACjC,IAAI,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;gBACjC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvD,OAAO,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC;YAC1C,CAAC;YAED,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACtC,UAAU,CAAC,GAAG,EAAE;gBACZ,IAAI,YAAY,CAAC,UAAU,EAAE,CAAC;oBAC1B,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;gBACtD,CAAC;YACL,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,CAAC;IACL,CAAC;IAED,qBAAqB,CAAC,OAAe;QACjC,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,gDAAQ,CAAC,2BAA2B,CAAC,CAAC;IAClG,CAAC;IAED,uBAAuB,CAAC,OAAe;QACnC,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,gDAAQ,CAAC,6BAA6B,CAAC,CAAC;IACxG,CAAC;IAED,uBAAuB,CAAC,OAAe;QACnC,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,gDAAQ,CAAC,6BAA6B,CAAC,CAAC;IACxG,CAAC;IAED,oBAAoB,CAAC,OAAe;QAChC,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,gDAAQ,CAAC,0BAA0B,CAAC,CAAC;IAC/F,CAAC;CACJ;AAED,yBAAyB;AACzB,MAAM,CAAC,mBAAmB,GAAG,IAAI,mBAAmB,EAAE,CAAC;AAEvD,0DAA0D;AAC1D,MAAM,CAAC,kBAAkB,GAAG,CAAC,cAAsB,EAAE,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;;;;;;;;;;;;;;;;;AChHzB;AACpD;AAEzC,iBAAiB;AACV,MAAM,aAAa;IAStB;QARQ,iBAAY,GAAgB,qDAAa,CAAC,OAAO,CAAC;QAClD,kBAAa,GAAW,gDAAQ,CAAC,MAAM,CAAC;QACxC,eAAU,GAAe,oDAAY,CAAC,IAAI,CAAC;QAC3C,eAAU,GAAY,KAAK,CAAC;QAC5B,oBAAe,GAAU,EAAE,CAAC;QAC5B,iBAAY,GAAW,CAAC,CAAC,CAAC;QAC1B,qBAAgB,GAAU,EAAE,CAAC;QAgY7B,sBAAiB,GAAW,EAAE,CAAC;QA7XnC,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,IAAI;QACA,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAED,mBAAmB;QACf,kBAAkB;QAClB,MAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QACzD,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC3D,MAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QACzD,MAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QACzD,MAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QACzD,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAqB,CAAC;QACjF,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QAC7D,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QAE/D,IAAI,UAAU;YAAE,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QAC9E,IAAI,WAAW;YAAE,WAAW,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAC/E,IAAI,UAAU;YAAE,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC5E,IAAI,UAAU;YAAE,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC5E,IAAI,UAAU;YAAE,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;QAEhF,IAAI,YAAY,EAAE,CAAC;YACf,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;gBACzC,MAAM,MAAM,GAAG,CAAC,CAAC,MAA0B,CAAC;gBAC5C,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;QACP,CAAC;QAED,IAAI,YAAY;YAAE,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;QACvF,IAAI,aAAa;YAAE,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QAEvF,uBAAuB;QACvB,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC;YACtB,MAAM,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;YAC1E,MAAM,CAAC,YAAY,CAAC,gBAAgB,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;YAChF,MAAM,CAAC,YAAY,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QACxF,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,EAAU,EAAE,KAAa,EAAE,MAAc,EAAE,SAAiB,EAAE,QAAgB,EAAE,KAAc;QACnG,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC7D,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,QAAQ,CAAC,EAAU,EAAE,KAAa,EAAE,MAAc,EAAE,SAAiB,EAAE,QAAgB,EAAE,KAAc;QACnG,qBAAqB;QACrB,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC;YACtB,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC5B,MAAM,CAAC,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC;QACxC,CAAC;QAED,2BAA2B;QAC3B,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QAC1B,KAAK,CAAC,GAAG,GAAG,eAAe,EAAE,EAAE,CAAC;QAChC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;QAClC,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC;QAE3B,yBAAyB;QACzB,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QAC5D,KAAK,CAAC,gBAAgB,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QAClE,KAAK,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QACtE,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;QAEjE,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,MAAM,CAAC,eAAe,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC;QAE1D,uBAAuB;QACvB,IAAI,QAAQ,EAAE,CAAC;YACX,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;YAChC,IAAI,CAAC,gBAAgB,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC;YACtC,IAAI,CAAC,YAAY,GAAG,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzD,CAAC;QAED,YAAY;QACZ,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,YAAY,GAAG,qDAAa,CAAC,OAAO,CAAC;QAC1C,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,oBAAoB;QACpB,IAAI,MAAM,CAAC,mBAAmB,EAAE,CAAC;YAC7B,MAAM,CAAC,mBAAmB,CAAC,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACvE,CAAC;IACL,CAAC;IAED,SAAS;QACL,IAAI,MAAM,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,KAAK,qDAAa,CAAC,OAAO,EAAE,CAAC;YACrE,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC5B,IAAI,CAAC,YAAY,GAAG,qDAAa,CAAC,MAAM,CAAC;YACzC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC;IACL,CAAC;IAED,UAAU;QACN,IAAI,MAAM,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,KAAK,qDAAa,CAAC,OAAO,EAAE,CAAC;YACrE,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;gBACjC,IAAI,CAAC,YAAY,GAAG,qDAAa,CAAC,OAAO,CAAC;gBAC1C,IAAI,CAAC,QAAQ,EAAE,CAAC;YACpB,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;gBACb,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;gBAC7C,IAAI,MAAM,CAAC,mBAAmB,EAAE,CAAC;oBAC7B,MAAM,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,CAAC;gBAC7E,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAED,QAAQ;QACJ,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC;YACtB,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC5B,MAAM,CAAC,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC;YACpC,IAAI,CAAC,YAAY,GAAG,qDAAa,CAAC,OAAO,CAAC;YAC1C,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC;IACL,CAAC;IAED,QAAQ;QACJ,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACzF,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACrD,IAAI,CAAC,QAAQ,CACT,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,EACvB,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EACvB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EACnE,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAC3E,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,YAAY,CACpB,CAAC;QACN,CAAC;IACL,CAAC;IAED,YAAY;QACR,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE,CAAC;YAC3D,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACrD,IAAI,CAAC,QAAQ,CACT,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,EACvB,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EACvB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EACnE,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAC3E,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,YAAY,CACpB,CAAC;QACN,CAAC;IACL,CAAC;IAED,SAAS,CAAC,MAAc;QACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;QACtD,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC;YACtB,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;QACpD,CAAC;QACD,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,aAAa,CAAC,IAAgB;QAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,eAAe;QACX,MAAM,KAAK,GAAG,CAAC,oDAAY,CAAC,IAAI,EAAE,oDAAY,CAAC,GAAG,EAAE,oDAAY,CAAC,GAAG,CAAC,CAAC;QACtE,MAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpD,MAAM,SAAS,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;QACpD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,aAAa;QACT,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACrD,IAAI,CAAC,gBAAgB,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;YAClD,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;aAAM,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC9D,IAAI,CAAC,eAAe,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACtD,CAAC;QACD,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,eAAe;QACX,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YACvD,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9C,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5G,CAAC;IACL,CAAC;IAED,aAAa;QACT,QAAQ,IAAI,CAAC,UAAU,EAAE,CAAC;YACtB,KAAK,oDAAY,CAAC,GAAG;gBACjB,sBAAsB;gBACtB,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC;oBACtB,MAAM,CAAC,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC;oBACpC,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;gBAC/B,CAAC;gBACD,MAAM;YACV,KAAK,oDAAY,CAAC,GAAG;gBACjB,qCAAqC;gBACrC,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBACtD,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACpB,CAAC;qBAAM,CAAC;oBACJ,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;oBACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACpB,CAAC;gBACD,MAAM;YACV,KAAK,oDAAY,CAAC,IAAI,CAAC;YACvB;gBACI,8BAA8B;gBAC9B,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBACtD,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACpB,CAAC;qBAAM,CAAC;oBACJ,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACpB,CAAC;gBACD,MAAM;QACd,CAAC;IACL,CAAC;IAED,gBAAgB,CAAC,KAAY;QACzB,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QACrC,IAAI,MAAM,CAAC,mBAAmB,EAAE,CAAC;YAC7B,MAAM,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,CAAC;QAC7E,CAAC;IACL,CAAC;IAED,cAAc;QACV,IAAI,CAAC,MAAM,CAAC,YAAY;YAAE,OAAO;QAEjC,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAqB,CAAC;QAC/E,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC3D,MAAM,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAErD,IAAI,WAAW,EAAE,CAAC;YACd,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;YAC/D,WAAW,CAAC,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QAC9D,CAAC;QAED,IAAI,WAAW,EAAE,CAAC;YACd,WAAW,CAAC,WAAW,GAAG,sDAAc,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QAC9E,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACX,QAAQ,CAAC,WAAW,GAAG,sDAAc,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACxE,CAAC;IACL,CAAC;IAED,cAAc;QACV,IAAI,CAAC,MAAM,CAAC,YAAY;YAAE,OAAO;QAEjC,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAqB,CAAC;QAC/E,MAAM,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAErD,IAAI,WAAW,EAAE,CAAC;YACd,WAAW,CAAC,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QAC9D,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACX,QAAQ,CAAC,WAAW,GAAG,sDAAc,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACxE,CAAC;IACL,CAAC;IAED,cAAc,CAAC,KAAa,EAAE,MAAc,EAAE,SAAiB;QAC3D,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QACvD,MAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QACzD,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAqB,CAAC;QAEnF,IAAI,SAAS;YAAE,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;QAC7C,IAAI,UAAU;YAAE,UAAU,CAAC,WAAW,GAAG,MAAM,CAAC;QAChD,IAAI,aAAa;YAAE,aAAa,CAAC,GAAG,GAAG,SAAS,CAAC;IACrD,CAAC;IAED,QAAQ;QACJ,MAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QACzD,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAE3D,IAAI,UAAU;YAAE,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,KAAK,qDAAa,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;QAC1G,IAAI,WAAW;YAAE,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,KAAK,qDAAa,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;IAChH,CAAC;IAED,cAAc;QACV,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAqB,CAAC;QACjF,IAAI,YAAY,EAAE,CAAC;YACf,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QACvD,CAAC;IACL,CAAC;IAED,cAAc;QACV,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QAC7D,IAAI,YAAY,EAAE,CAAC;YACf,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,KAAK,oDAAY,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBACpE,IAAI,CAAC,UAAU,KAAK,oDAAY,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;QAC3D,CAAC;IACL,CAAC;IAED,eAAe;QACX,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QAC/D,IAAI,aAAa,EAAE,CAAC;YAChB,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9D,CAAC;IACL,CAAC;IAED,sBAAsB;QAClB,wCAAwC;QACxC,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAqB,CAAC;QAC/E,IAAI,WAAW,EAAE,CAAC;YACd,WAAW,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;gBACxC,MAAM,MAAM,GAAG,CAAC,CAAC,MAA0B,CAAC;gBAC5C,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC;oBACtB,MAAM,CAAC,YAAY,CAAC,WAAW,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAC/D,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAED,qBAAqB;QACjB,yBAAyB;QACzB,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE;YACvC,IAAI,CAAC,CAAC,MAAM,IAAK,CAAC,CAAC,MAAsB,CAAC,OAAO,KAAK,OAAO;gBAAE,OAAO;YAEtE,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;gBACb,KAAK,OAAO;oBACR,CAAC,CAAC,cAAc,EAAE,CAAC;oBACnB,IAAI,IAAI,CAAC,YAAY,KAAK,qDAAa,CAAC,OAAO,EAAE,CAAC;wBAC9C,IAAI,CAAC,SAAS,EAAE,CAAC;oBACrB,CAAC;yBAAM,CAAC;wBACJ,IAAI,CAAC,UAAU,EAAE,CAAC;oBACtB,CAAC;oBACD,MAAM;gBACV,KAAK,YAAY;oBACb,CAAC,CAAC,cAAc,EAAE,CAAC;oBACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,MAAM;gBACV,KAAK,WAAW;oBACZ,CAAC,CAAC,cAAc,EAAE,CAAC;oBACnB,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,MAAM;YACd,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kBAAkB,CAAC,UAAkB;QACjC,6CAA6C;QAC7C,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC;IACxC,CAAC;IAED,wBAAwB;QACpB,wCAAwC;QACxC,MAAM,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,CAAC;QACzE,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC/B,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;YAC7C,IAAI,OAAO,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACtE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAC9C,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,SAAS;QACL,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC;YAC/C,MAAM,EAAE,IAAI,CAAC,aAAa;YAC1B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;SAC9B,CAAC,CAAC,CAAC;IACR,CAAC;IAED,YAAY;QACR,IAAI,CAAC;YACD,MAAM,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YACvD,IAAI,UAAU,EAAE,CAAC;gBACb,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBACrC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,IAAI,gDAAQ,CAAC,MAAM,CAAC;gBACrD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,IAAI,oDAAY,CAAC,IAAI,CAAC;gBACxD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC;YAChD,CAAC;QACL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;QAC1D,CAAC;IACL,CAAC;CAGJ;AAED,yBAAyB;AACzB,MAAM,CAAC,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC;AAE3C,wCAAwC;AACxC,MAAM,CAAC,QAAQ,GAAG,CAAC,EAAU,EAAE,KAAa,EAAE,MAAc,EAAE,SAAiB,EAAE,QAAgB,EAAE,KAAc,EAAE,EAAE,CACjH,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AACjF,MAAM,CAAC,QAAQ,GAAG,CAAC,EAAU,EAAE,KAAa,EAAE,MAAc,EAAE,SAAiB,EAAE,QAAgB,EAAE,KAAc,EAAE,EAAE,CACjH,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AACjF,MAAM,CAAC,SAAS,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;AAC1D,MAAM,CAAC,UAAU,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;AAC5D,MAAM,CAAC,QAAQ,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;AACxD,MAAM,CAAC,QAAQ,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;AACxD,MAAM,CAAC,YAAY,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;AAChE,MAAM,CAAC,SAAS,GAAG,CAAC,MAAc,EAAE,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC9E,MAAM,CAAC,aAAa,GAAG,CAAC,IAAgB,EAAE,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACtF,MAAM,CAAC,aAAa,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;;;;;;;;;;;;;;;;AC7ZU;AAE5E,wBAAwB;AACjB,MAAM,mBAAmB;IAQ5B;QAPQ,cAAS,GAAY,KAAK,CAAC;QAC3B,eAAU,GAAoB,0DAAkB,CAAC,IAAI,CAAC;QACtD,iBAAY,GAAW,gDAAQ,CAAC,mBAAmB,CAAC;QACpD,eAAU,GAAY,KAAK,CAAC;QAC5B,WAAM,GAAW,CAAC,CAAC;QACnB,eAAU,GAAW,CAAC,CAAC;QAG3B,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,IAAI;QACA,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,mBAAmB;QACf,gBAAgB;QAChB,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,0BAA0B,CAAC,CAAC;QACzE,IAAI,YAAY,EAAE,CAAC;YACf,YAAY,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAa,EAAE,EAAE;gBACzD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;QACP,CAAC;QAED,gBAAgB;QAChB,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACnD,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAEvD,IAAI,OAAO,EAAE,CAAC;YACV,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,0DAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;QACrF,CAAC;QACD,IAAI,SAAS,EAAE,CAAC;YACZ,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,0DAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;QACzF,CAAC;QAED,eAAe;QACf,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;QACjE,IAAI,WAAW,EAAE,CAAC;YACd,WAAW,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QAC7D,CAAC;QAED,uBAAuB;QACvB,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAa,EAAE,EAAE;YACrD,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACzB,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,GAAG,EAAE;YACtC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,UAAU,EAAE,CAAC;YACtB,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW,CAAC,CAAa;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QACpC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,YAAY,CAAC;QAC1C,CAAC,CAAC,cAAc,EAAE,CAAC;IACvB,CAAC;IAED,YAAY,CAAC,CAAa;QACtB,IAAI,CAAC,IAAI,CAAC,UAAU;YAAE,OAAO;QAE7B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC;QACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CACrB,gDAAQ,CAAC,uBAAuB,EAChC,IAAI,CAAC,GAAG,CAAC,gDAAQ,CAAC,uBAAuB,EAAE,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,CACvE,CAAC;QAEF,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC7B,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,UAAU;QACN,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,SAAS,CAAC,GAAoB;QAC1B,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,gBAAgB;QACZ,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC3D,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QAC/D,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACnD,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAEvD,qBAAqB;QACrB,IAAI,OAAO;YAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,KAAK,0DAAkB,CAAC,IAAI,CAAC,CAAC;QAC7F,IAAI,SAAS;YAAE,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,KAAK,0DAAkB,CAAC,MAAM,CAAC,CAAC;QAEnG,4BAA4B;QAC5B,IAAI,WAAW;YAAE,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,KAAK,0DAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;QAC5G,IAAI,aAAa;YAAE,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,KAAK,0DAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;IACtH,CAAC;IAED,IAAI;QACA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,IAAI;QACA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,MAAM;QACF,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC;aAAM,CAAC;YACJ,IAAI,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC;IACL,CAAC;IAED,YAAY;QACR,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QAC7D,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC3D,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QAExD,IAAI,CAAC,YAAY,IAAI,CAAC,WAAW;YAAE,OAAO;QAE1C,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,YAAY,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,YAAY,IAAI,CAAC;YACpD,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;YACrC,WAAW,CAAC,KAAK,CAAC,WAAW,GAAG,GAAG,IAAI,CAAC,YAAY,IAAI,CAAC;YACzD,IAAI,SAAS,EAAE,CAAC;gBACX,SAAyB,CAAC,KAAK,CAAC,WAAW,GAAG,GAAG,IAAI,CAAC,YAAY,IAAI,CAAC;YAC5E,CAAC;QACL,CAAC;aAAM,CAAC;YACJ,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YACpC,WAAW,CAAC,KAAK,CAAC,WAAW,GAAG,GAAG,CAAC;YACpC,IAAI,SAAS,EAAE,CAAC;gBACX,SAAyB,CAAC,KAAK,CAAC,WAAW,GAAG,GAAG,CAAC;YACvD,CAAC;QACL,CAAC;IACL,CAAC;IAED,eAAe,CAAC,QAAa;QACzB,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC3D,IAAI,CAAC,WAAW,IAAI,CAAC,QAAQ;YAAE,OAAO;QAEtC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,KAAK,IAAI,eAAe,CAAC;QACjE,MAAM,MAAM,GAAG,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB,CAAC;QAC7G,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,IAAI,eAAe,CAAC;QAChD,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,IAAI,SAAS,CAAC;QAChD,MAAM,SAAS,GAAG,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;QAE1G,WAAW,CAAC,SAAS,GAAG;;4BAEJ,SAAS,UAAU,KAAK;sBAC9B,KAAK;oCACS,MAAM;mCACP,KAAK;sCACF,QAAQ;;SAErC,CAAC;QAEF,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,iBAAiB,CAAC,MAAc;QAC5B,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QAC/D,IAAI,CAAC,aAAa;YAAE,OAAO;QAE3B,aAAa,CAAC,SAAS,GAAG;;uBAEX,MAAM,IAAI,qBAAqB;;SAE7C,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,0DAAkB,CAAC,MAAM,CAAC,CAAC;QAC1C,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,cAAc;QACV,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC3D,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QAE/D,IAAI,WAAW;YAAE,WAAW,CAAC,SAAS,GAAG,EAAE,CAAC;QAC5C,IAAI,aAAa;YAAE,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;QAEhD,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,SAAS;QACL,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC;YACrD,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,YAAY,EAAE,IAAI,CAAC,YAAY;SAClC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,YAAY;QACR,IAAI,CAAC;YACD,MAAM,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;YAC7D,IAAI,UAAU,EAAE,CAAC;gBACb,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBACrC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC;gBAC1C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,IAAI,0DAAkB,CAAC,IAAI,CAAC;gBAC9D,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,IAAI,gDAAQ,CAAC,mBAAmB,CAAC;YAC3E,CAAC;QACL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,sCAAsC,EAAE,KAAK,CAAC,CAAC;QACjE,CAAC;IACL,CAAC;CACJ;AAED,yBAAyB;AACzB,MAAM,CAAC,mBAAmB,GAAG,IAAI,mBAAmB,EAAE,CAAC;AAEvD,wCAAwC;AACxC,MAAM,CAAC,kBAAkB,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC;AACtE,MAAM,CAAC,gBAAgB,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;AAClE,MAAM,CAAC,gBAAgB,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;AAClE,MAAM,CAAC,cAAc,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,cAAc,EAAE,CAAC;;;;;;;;;;;;;;;;;;ACrOW;AAErF;;;GAGG;AACH,MAAM,UAAU;IAMZ;QAJQ,QAAG,GAA2B,IAAI,CAAC;QACnC,kBAAa,GAAG,KAAK,CAAC;QACtB,gBAAW,GAAoC,IAAI,CAAC;IAEpC,CAAC;IAElB,MAAM,CAAC,WAAW;QACrB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YACvB,UAAU,CAAC,QAAQ,GAAG,IAAI,UAAU,EAAE,CAAC;QAC3C,CAAC;QACD,OAAO,UAAU,CAAC,QAAQ,CAAC;IAC/B,CAAC;IAED;;;;;OAKG;IACI,KAAK,CAAC,UAAU,CAAC,UAAkB,EAAE,EAAE,UAAe,EAAE;QAC3D,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;YACjC,OAAO,IAAI,CAAC,GAAG,CAAC;QACpB,CAAC;QAED,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED;;;;OAIG;IACI,MAAM;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YACnC,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;QACrE,CAAC;QACD,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IAED;;;OAGG;IACI,OAAO;QACV,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC;IACnD,CAAC;IAED;;;;;OAKG;IACK,KAAK,CAAC,SAAS,CAAC,OAAe,EAAE,OAAY;QACjD,IAAI,CAAC;YACD,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;YAE7C,IAAI,CAAC,GAAG,GAAG,IAAI,4FAAe,CAAC,OAAO,EAAE;gBACpC,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,CAAC;gBACV,GAAG,OAAO;aACb,CAAC,CAAC;YAEH,yCAAyC;YACzC,IAAI,CAAC;gBACD,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;oBACrB,MAAM,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;oBAC3B,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;gBACzD,CAAC;qBAAM,CAAC;oBACJ,OAAO,CAAC,GAAG,CAAC,oEAAoE,CAAC,CAAC;gBACtF,CAAC;YACL,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACb,OAAO,CAAC,IAAI,CAAC,iDAAiD,EAAE,KAAK,CAAC,CAAC;YAC3E,CAAC;YAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;YACtD,OAAO,IAAI,CAAC,GAAG,CAAC;QAEpB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;YAC1D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,MAAM,KAAK,CAAC;QAChB,CAAC;IACL,CAAC;IAED;;OAEG;IACI,KAAK;QACR,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;CACJ;AAED,4BAA4B;AACrB,MAAM,UAAU,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;AAEnD,wCAAwC;AAClB;AAEtB,iCAAiC;AACjC,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;ACpH8D;AAExF,2BAA2B;AACpB,MAAM,cAAc;IAKvB;QAJO,aAAQ,GAAY,KAAK,CAAC;QACzB,iBAAY,GAAiB,sDAAc,CAAC,QAAQ,CAAC;QACtD,qBAAgB,GAAY,KAAK,CAAC;QAGrC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,sDAAc,CAAC,QAAQ,CAAC;QAC5C,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,IAAI;QACA,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,gBAAgB;QACZ,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,IAAI,mEAA2B,CAAC;IACrE,CAAC;IAED,mBAAmB;QACf,wBAAwB;QACxB,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,EAAE;YACnC,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;YAChC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAExB,yDAAyD;YACzD,IAAI,SAAS,KAAK,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAC9B,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAClC,CAAC;YAED,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,0CAA0C;QAC1C,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAY,EAAE,EAAE;YAChD,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACzC,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;gBACnD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;gBAErE,IAAI,OAAO,IAAI,gBAAgB;oBAC3B,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAc,CAAC;oBACvC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAc,CAAC,EAAE,CAAC;oBACnD,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,iCAAiC;QACjC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,KAAoB,EAAE,EAAE;YAC1D,IAAI,IAAI,CAAC,QAAQ;gBAAE,OAAO;YAE1B,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,uCAAuC;gBAChG,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,CAAC,UAAU,EAAE,CAAC;YACtB,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,mDAAmD;QACnD,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QAC/D,IAAI,aAAa,EAAE,CAAC;YAChB,aAAa,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,KAAY,EAAE,EAAE;gBACxD,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,IAAI,CAAC,YAAY,KAAK,sDAAc,CAAC,IAAI,EAAE,CAAC;oBAC5C,IAAI,CAAC,QAAQ,CAAC,sDAAc,CAAC,QAAQ,CAAC,CAAC;gBAC3C,CAAC;qBAAM,CAAC;oBACJ,IAAI,CAAC,QAAQ,CAAC,sDAAc,CAAC,IAAI,CAAC,CAAC;gBACvC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAED,sBAAsB;QAClB,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,gDAAgD;YAChD,IAAI,CAAC,YAAY,GAAG,sDAAc,CAAC,SAAS,CAAC;YAC7C,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC;aAAM,CAAC;YACJ,iDAAiD;YACjD,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC;IACL,CAAC;IAED,MAAM;QACF,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5B,CAAC;aAAM,CAAC;YACJ,IAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC;IACL,CAAC;IAED,UAAU;QACN,MAAM,MAAM,GAAmB,CAAC,sDAAc,CAAC,QAAQ,EAAE,sDAAc,CAAC,IAAI,EAAE,sDAAc,CAAC,SAAS,CAAC,CAAC;QACxG,MAAM,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACvD,MAAM,SAAS,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;QACrD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;QACtC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,QAAQ,CAAC,KAAmB;QACxB,IAAI,MAAM,CAAC,MAAM,CAAC,sDAAc,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;YAChD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC;IACL,CAAC;IAED,gBAAgB;QACZ,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAC/C,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,eAAe;QACX,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,YAAY;QACR,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACnD,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC3D,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QAC/D,MAAM,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;QACrE,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QAC/D,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QAExD,IAAI,CAAC,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;YAC3B,OAAO,CAAC,KAAK,CAAC,2DAA2D,CAAC,CAAC;YAC3E,OAAO;QACX,CAAC;QAED,2BAA2B;QAC3B,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC;QACjF,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,mBAAmB,CAAC,CAAC;QACtG,IAAI,SAAS,EAAE,CAAC;YACZ,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,mBAAmB,CAAC,CAAC;QACxG,CAAC;QAED,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,gBAAgB;YAChB,IAAI,aAAa;gBAAE,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YACxD,IAAI,gBAAgB;gBAAE,gBAAgB,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YAC9D,IAAI,aAAa;gBAAE,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YAExD,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBACrC,gBAAgB,CAAC,WAAW,GAAG,GAAG,CAAC;gBACnC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC7B,CAAC;iBAAM,CAAC;gBACJ,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACnC,gBAAgB,CAAC,WAAW,GAAG,GAAG,CAAC;gBACnC,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAChC,CAAC;YAED,uDAAuD;YACvD,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;YAClD,IAAI,SAAS,EAAE,CAAC;gBACZ,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;YACpD,CAAC;QACL,CAAC;aAAM,CAAC;YACJ,iBAAiB;YACjB,IAAI,aAAa;gBAAE,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YACxD,IAAI,gBAAgB;gBAAE,gBAAgB,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YAC9D,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE5B,sBAAsB;YACtB,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACzC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;YAC1D,IAAI,SAAS,EAAE,CAAC;gBACZ,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;YAC5D,CAAC;YAED,mCAAmC;YACnC,IAAI,aAAa,EAAE,CAAC;gBAChB,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,KAAK,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;YACvF,CAAC;YAED,uBAAuB;YACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC9B,CAAC;IACL,CAAC;IAED,kBAAkB;QACd,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QAC/D,IAAI,CAAC,aAAa;YAAE,OAAO;QAE3B,MAAM,YAAY,GAAwE;YACtF,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,kBAAkB,EAAE,IAAI,EAAE,MAAM,EAAE;YAC5D,QAAQ,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,mBAAmB,EAAE,IAAI,EAAE,OAAO,EAAE;YAClE,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,kBAAkB,EAAE,IAAI,EAAE,MAAM,EAAE;YAC5D,SAAS,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,gBAAgB,EAAE,IAAI,EAAE,MAAM,EAAE;SAClE,CAAC;QAEF,MAAM,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/C,IAAI,MAAM,EAAE,CAAC;YACT,aAAa,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC;YACxC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YACnC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QAC3C,CAAC;IACL,CAAC;IAED,iBAAiB;QACb,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,EAAE,CAAC;YACjD,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC/C,QAAQ,CAAC,EAAE,GAAG,oBAAoB,CAAC;YACnC,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG;;;;;;;;;;aAUxB,CAAC;YACF,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAEpC,sBAAsB;YACtB,UAAU,CAAC,GAAG,EAAE;gBACZ,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;YACjC,CAAC,EAAE,EAAE,CAAC,CAAC;YAEP,sCAAsC;YACtC,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;gBACpC,IAAI,CAAC,eAAe,EAAE,CAAC;YAC3B,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAED,oBAAoB;QAChB,MAAM,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC;QAC/D,IAAI,QAAQ,EAAE,CAAC;YACX,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;YAC7B,UAAU,CAAC,GAAG,EAAE;gBACZ,IAAI,QAAQ,CAAC,UAAU,EAAE,CAAC;oBACtB,QAAQ,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAC9C,CAAC;YACL,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,CAAC;IACL,CAAC;IAED,SAAS;QACL,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACjB,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC;gBAChD,KAAK,EAAE,IAAI,CAAC,YAAY;aAC3B,CAAC,CAAC,CAAC;QACR,CAAC;aAAM,CAAC;YACJ,oBAAoB;YACpB,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC;gBAChD,KAAK,EAAE,IAAI,CAAC,YAAY;gBACxB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;aAC1C,CAAC,CAAC,CAAC;QACR,CAAC;IACL,CAAC;IAED,YAAY;QACR,IAAI,CAAC;YACD,MAAM,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YACxD,IAAI,UAAU,EAAE,CAAC;gBACb,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBACrC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,IAAI,sDAAc,CAAC,QAAQ,CAAC;gBAC3D,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,gBAAgB,IAAI,KAAK,CAAC;YAC5D,CAAC;iBAAM,CAAC;gBACJ,iBAAiB;gBACjB,IAAI,CAAC,YAAY,GAAG,sDAAc,CAAC,QAAQ,CAAC;gBAC5C,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAClC,CAAC;QACL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;YACvD,IAAI,CAAC,YAAY,GAAG,sDAAc,CAAC,QAAQ,CAAC;YAC5C,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAClC,CAAC;QAED,iDAAiD;QACjD,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,YAAY,GAAG,sDAAc,CAAC,SAAS,CAAC;YAC7C,6CAA6C;QACjD,CAAC;IACL,CAAC;CACJ;AAED,yBAAyB;AACzB,MAAM,CAAC,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;AAE7C,8CAA8C;AAC9C,MAAM,CAAC,aAAa,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;AAE5D,+CAA+C;AAC/C,MAAM,CAAC,cAAc,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,sDAAc,CAAC,IAAI,CAAC,CAAC;AAClF,MAAM,CAAC,kBAAkB,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,sDAAc,CAAC,QAAQ,CAAC,CAAC;AAC1F,MAAM,CAAC,cAAc,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,sDAAc,CAAC,IAAI,CAAC,CAAC;AAClF,MAAM,CAAC,mBAAmB,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,sDAAc,CAAC,SAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;AC7StB;AACtB;AACgG;AAEhJ,cAAc;AACP,MAAM,UAAU;IACnB;QACI,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,IAAI;QACA,yBAAyB;IAC7B,CAAC;IAED,gDAAgD;IAChD,KAAK,CAAC,WAAW;QACb,MAAM,MAAM,GAAG,sDAAc,EAAE,CAAC;QAEhC,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;YAClB,mCAAmC;YACnC,IAAI,CAAC;gBACD,MAAM,GAAG,GAAG,6DAAU,CAAC,MAAM,EAAE,CAAC;gBAChC,MAAM,IAAI,GAAqB,MAAM,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACtE,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,UAAU,CAAC;gBAEhF,IAAI,MAAM,CAAC,cAAc,EAAE,CAAC;oBACxB,MAAM,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;gBACtE,CAAC;gBAED,uBAAuB;gBACvB,IAAI,MAAM,CAAC,aAAa,EAAE,CAAC;oBACvB,MAAM,CAAC,aAAa,CAAC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBACzD,MAAM,CAAC,aAAa,CAAC,wBAAwB,EAAE,CAAC;oBAEhD,6DAA6D;oBAC7D,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;wBACd,4CAA4C;wBAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;wBAC/B,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC;wBACrE,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE,CAAC;4BACnB,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;4BAC9B,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,IAAI,eAAe,CAAC;4BAC3C,IAAI,MAAM,GAAG,EAAE,CAAC;4BAChB,IAAI,SAAS,GAAG,EAAE,CAAC;4BAEnB,8BAA8B;4BAC9B,IAAI,IAAI,YAAY,kGAAgB,EAAE,CAAC;gCACnC,MAAM,QAAQ,GAAG,IAAwB,CAAC;gCAC1C,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oCAClD,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gCACtC,CAAC;gCACD,IAAI,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oCACxD,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gCAC3C,CAAC;4BACL,CAAC;4BAED,mDAAmD;4BACnD,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;gCACd,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;4BACvF,CAAC;iCAAM,CAAC;gCACJ,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;4BACvF,CAAC;wBACL,CAAC;6BAAM,CAAC;4BACJ,sDAAsD;4BACtD,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;gCACd,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,eAAe,EAAE,gBAAgB,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;4BACtG,CAAC;iCAAM,CAAC;gCACJ,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,eAAe,EAAE,gBAAgB,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;4BACtG,CAAC;wBACL,CAAC;oBACL,CAAC;gBACL,CAAC;YACL,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACb,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;gBACzD,IAAI,MAAM,CAAC,mBAAmB,EAAE,CAAC;oBAC7B,MAAM,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,iCAAiC,CAAC,CAAC;gBACxF,CAAC;YACL,CAAC;QACL,CAAC;aAAM,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;YACrB,wCAAwC;YACxC,IAAI,CAAC;gBACD,MAAM,GAAG,GAAG,6DAAU,CAAC,MAAM,EAAE,CAAC;gBAChC,MAAM,IAAI,GAA0B,MAAM,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACvE,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,IAAI,eAAe,CAAC;gBAC3C,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;gBACnF,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;gBAE9F,mDAAmD;gBACnD,IAAI,MAAM,CAAC,aAAa,EAAE,CAAC;oBACvB,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;wBACd,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;oBACnF,CAAC;yBAAM,CAAC;wBACJ,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;oBACnF,CAAC;gBACL,CAAC;YACL,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACb,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;gBACrD,IAAI,MAAM,CAAC,mBAAmB,EAAE,CAAC;oBAC7B,MAAM,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,CAAC;gBACpF,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;CACJ;AAED,qCAAqC;AACrC,MAAM,CAAC,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;AAErC,qCAAqC;AACrC,MAAM,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7Gc;AAEzE,qCAAqC;AAC9B,SAAS,cAAc,CAAC,QAAa;IACxC,IAAI,CAAC,QAAQ;QAAE,OAAO,SAAS,CAAC;IAEhC,qDAAqD;IACrD,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;QACzD,0EAA0E;QAC1E,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,kDAAkD;IAClD,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE,CAAC;QAC/B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;QAC1C,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;QAE1C,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC;YACZ,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC;QAChI,CAAC;aAAM,CAAC;YACJ,OAAO,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC;QAC3F,CAAC;IACL,CAAC;IAED,OAAO,QAAQ,CAAC;AACpB,CAAC;AAED,0DAA0D;AACnD,SAAS,YAAY,CAAC,GAAW;IACpC,IAAI,GAAG,IAAI,UAAU,EAAE,CAAC;QACpB,OAAO,CAAC,GAAG,GAAG,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAC/C,CAAC;SAAM,IAAI,GAAG,IAAI,OAAO,EAAE,CAAC;QACxB,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAC5C,CAAC;SAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACrB,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACzC,CAAC;IACD,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC;AAC1B,CAAC;AAED,iCAAiC;AAC1B,SAAS,UAAU,CAAC,UAAkB;IACzC,IAAI,CAAC,UAAU;QAAE,OAAO,SAAS,CAAC;IAElC,IAAI,CAAC;QACD,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE;YACpC,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,MAAM;YACb,GAAG,EAAE,SAAS;SACjB,CAAC,CAAC;IACP,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,OAAO,UAAU,CAAC;IACtB,CAAC;AACL,CAAC;AAED,gDAAgD;AACzC,SAAS,cAAc;IAC1B,MAAM,SAAS,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC9D,MAAM,MAAM,GAA2B,EAAE,CAAC;IAC1C,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,SAAS,EAAE,CAAC;QACnC,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IACxB,CAAC;IACD,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,yCAAyC;AAClC,SAAS,gBAAgB,CAAC,MAA2B;IACxD,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;SACrB,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;SACtF,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,CAAC,GAAG,CAAC,IAAI,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;SAC3E,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC;AAED,iCAAiC;AAC1B,SAAS,SAAS,CAAC,MAA2B;IACjD,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC1C,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QAC9B,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC;YAC1E,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC;aAAM,CAAC;YACJ,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;QAC3C,CAAC;IACL,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;AAC1C,CAAC;AAED,qDAAqD;AAC9C,KAAK,UAAU,oBAAoB;IACtC,IAAI,CAAC;QACD,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,+BAA+B,EAAE,GAAG,mEAA2B,IAAI,CAAC,CAAC;IACpH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;IAC5D,CAAC;AACL,CAAC;AAED,6DAA6D;AACtD,KAAK,UAAU,qBAAqB;IACvC,IAAI,CAAC;QACD,OAAO,MAAM,CAAC,UAAU,IAAI,mEAA2B,CAAC;IAC5D,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;QACzD,OAAO,KAAK,CAAC,CAAC,oCAAoC;IACtD,CAAC;AACL,CAAC;AAED,sDAAsD;AAC/C,SAAS,YAAY;IACxB,yBAAyB;IACzB,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC;QACtB,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC5B,MAAM,CAAC,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC;QACpC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;IAC/B,CAAC;IAED,sDAAsD;IACtD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;IAC5D,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QAC7B,IAAI,KAAK,KAAK,MAAM,CAAC,YAAY,EAAE,CAAC;YAChC,KAAK,CAAC,KAAK,EAAE,CAAC;YACd,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QAC1B,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,gDAAgD;IAChD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;IAC5D,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QAC7B,IAAK,KAAa,CAAC,WAAW,IAAK,KAAa,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACtE,KAAK,CAAC,KAAK,EAAE,CAAC;YACd,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QAC1B,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,uEAAuE;IACvE,IAAI,MAAM,CAAC,YAAY,IAAK,MAAc,CAAC,kBAAkB,EAAE,CAAC;QAC5D,iCAAiC;QACjC,IAAI,CAAC;YACD,2EAA2E;YAC3E,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE,CAAC;gBACtD,MAAM,iBAAiB,GAAG,MAAM,CAAC,YAAY,IAAK,MAAc,CAAC,kBAAkB,CAAC;gBACpF,MAAM,YAAY,GAAG,IAAI,iBAAiB,EAAE,CAAC;gBAC7C,IAAI,YAAY,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;oBACnC,YAAY,CAAC,OAAO,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC;QACL,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACT,kDAAkD;QACtD,CAAC;IACL,CAAC;IAED,wEAAwE;IACxE,qEAAqE;IACrE,MAAM,aAAa,GAAG,QAAQ,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;IAChE,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QAC1B,IAAI,CAAE,KAA0B,CAAC,MAAM,EAAE,CAAC;YACrC,KAA0B,CAAC,KAAK,EAAE,CAAC;YACnC,KAA0B,CAAC,WAAW,GAAG,CAAC,CAAC;QAChD,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,sCAAsC;IACtC,MAAM,CAAC,eAAe,GAAG,IAAI,CAAC;IAC9B,IAAI,MAAM,CAAC,cAAc,EAAE,CAAC;QACxB,MAAM,CAAC,cAAc,EAAE,CAAC;IAC5B,CAAC;IAED,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;AAC9C,CAAC;AAED,qBAAqB;AACd,SAAS,WAAW;IACvB,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;IACnD,MAAM,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IAC/C,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;IAClE,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;IAC/D,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;IAEjE,IAAI,OAAO;QAAG,OAAuB,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;IAC9D,IAAI,KAAK;QAAG,KAAqB,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IACzD,IAAI,cAAc;QAAG,cAA8B,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IAC3E,IAAI,aAAa;QAAG,aAA6B,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IACzE,IAAI,cAAc;QAAG,cAA8B,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;AAC/E,CAAC;AAED,mBAAmB;AACZ,SAAS,SAAS,CAAC,OAAe;IACrC,MAAM,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IAC/C,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;IACnD,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;IAClE,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;IAC/D,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;IAEjE,IAAI,KAAK,EAAE,CAAC;QACR,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC;QAC3B,KAAqB,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;IACnD,CAAC;IACD,IAAI,OAAO;QAAG,OAAuB,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IAC7D,IAAI,cAAc;QAAG,cAA8B,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IAC3E,IAAI,aAAa;QAAG,aAA6B,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IACzE,IAAI,cAAc;QAAG,cAA8B,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;AAC/E,CAAC;AAED,gCAAgC;AACzB,SAAS,mBAAmB,CAAC,WAAoB;IACpD,yCAAyC;IACzC,QAAQ,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;QAClD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IACH,mCAAmC;IACnC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAEpC,qCAAqC;IACrC,IAAI,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,cAAc,CAAC,QAAQ,IAAI,MAAM,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;QACpG,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;IACnC,CAAC;AACL,CAAC;AAED,wDAAwD;AACxD,MAAM,CAAC,KAAK,GAAG;IACX,cAAc;IACd,YAAY;IACZ,UAAU;IACV,cAAc;IACd,gBAAgB;IAChB,SAAS;IACT,oBAAoB;IACpB,qBAAqB;IACrB,YAAY;IACZ,WAAW;IACX,SAAS;IACT,mBAAmB;CACtB,CAAC;AAEF,+DAA+D;AAC/D,MAAM,CAAC,cAAc,GAAG,cAAc,CAAC;AACvC,MAAM,CAAC,YAAY,GAAG,YAAY,CAAC;AACnC,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;AAC/B,MAAM,CAAC,cAAc,GAAG,cAAc,CAAC;AACvC,MAAM,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AAC3C,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;AAC7B,MAAM,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;AACnD,MAAM,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;AACrD,MAAM,CAAC,YAAY,GAAG,YAAY,CAAC;AACnC,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;AACjC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;AAC7B,MAAM,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;AAEjD,+EAA+E;AAC/E,MAAM,CAAC,yBAAyB,GAAG,GAAY,EAAE;IAC7C,yCAAyC;IACzC,OAAO,MAAM,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,qBAAqB;AAC1D,CAAC,CAAC;;;;;;;UC3PF;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D,E;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA,+BAA+B;AAC/B,+DAA+D;AAE/D,kBAAkB;AAClB,qCAAqC;AAErC,aAAa;AACY;AAEzB,qDAAqD;AAChC;AACJ;AACe;AACL;AACM;AACP;AACC;AACJ;AACmC;AACV;AAEhD,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;AAE3C,yDAAyD;AACzD,KAAK,UAAU,aAAa,CAAC,aAAqB,EAAE,EAAE,aAAqB,IAAI;IAC3E,IAAI,UAAU,GAAG,CAAC,CAAC;IAEnB,MAAM,aAAa,GAAG,KAAK,IAAsB,EAAE;QAC/C,IAAI,CAAC;YACD,6BAA6B;YAC7B,MAAM,GAAG,GAAG,MAAM,8DAAU,CAAC,UAAU,CAAC,EAAE,EAAE;gBACxC,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,CAAC;aACb,CAAC,CAAC;YAEH,yDAAyD;YACzD,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;YAEpB,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;YACtD,OAAO,IAAI,CAAC;QAChB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;YAE1D,UAAU,EAAE,CAAC;YACb,IAAI,UAAU,GAAG,UAAU,EAAE,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,gDAAgD,UAAU,eAAe,UAAU,IAAI,UAAU,GAAG,CAAC,CAAC;gBAClH,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC;gBAC9D,OAAO,MAAM,aAAa,EAAE,CAAC;YACjC,CAAC;iBAAM,CAAC;gBACJ,OAAO,CAAC,KAAK,CAAC,8DAA8D,CAAC,CAAC;gBAC9E,qBAAqB;gBACrB,MAAM,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;gBAClD,IAAI,QAAQ,EAAE,CAAC;oBACX,QAAQ,CAAC,WAAW,GAAG,kEAAkE,CAAC;oBAC1F,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;gBACrC,CAAC;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC;QACL,CAAC;IACL,CAAC,CAAC;IAEF,OAAO,MAAM,aAAa,EAAE,CAAC;AACjC,CAAC;AAED,qDAAqD;AACrD,SAAS,aAAa;IAClB,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;IAEvD,yBAAyB;IACzB,IAAI,MAAM,CAAC,oBAAoB,EAAE,CAAC;QAC9B,MAAM,CAAC,oBAAoB,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACxC,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kDAAkD;IAClD,uEAAoB,EAAE,CAAC;IAEvB,gDAAgD;IAChD,MAAM,oBAAoB,GAAG,GAAS,EAAE;QACpC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/C,qDAAqD;QACrD,QAAQ,CAAC,mBAAmB,CAAC,OAAO,EAAE,oBAAoB,CAAC,CAAC;QAC5D,QAAQ,CAAC,mBAAmB,CAAC,YAAY,EAAE,oBAAoB,CAAC,CAAC;QACjE,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC;IAClE,CAAC,CAAC;IAEF,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,oBAAoB,CAAC,CAAC;IACzD,QAAQ,CAAC,gBAAgB,CAAC,YAAY,EAAE,oBAAoB,CAAC,CAAC;IAC9D,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC;IAE3D,0CAA0C;IAC1C,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC;QACtB,MAAM,CAAC,YAAY,EAAE,CAAC;IAC1B,CAAC;IAED,0CAA0C;IAC1C,MAAM,CAAC,gBAAgB,CAAC,cAAc,EAAE,GAAG,EAAE;QACzC,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC;YACtB,MAAM,CAAC,YAAY,EAAE,CAAC;QAC1B,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,iCAAiC;IACjC,IAAI,MAAM,CAAC,aAAa,EAAE,CAAC;QACvB,MAAM,CAAC,aAAa,CAAC,sBAAsB,EAAE,CAAC;QAC9C,MAAM,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;IACjD,CAAC;IAED,2CAA2C;IAC3C,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE;QAC1C,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QACjE,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QAC7D,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QACjE,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QAC/D,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAqB,CAAC;QAE/E,IAAI,cAAc,EAAE,CAAC;YACjB,cAAc,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;QACjE,CAAC;QACD,IAAI,YAAY,EAAE,CAAC;YACf,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;QAC7D,CAAC;QACD,IAAI,cAAc,EAAE,CAAC;YACjB,cAAc,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;QACjE,CAAC;QACD,IAAI,aAAa,EAAE,CAAC;YAChB,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;QAC/D,CAAC;QACD,IAAI,WAAW,EAAE,CAAC;YACd,WAAW,CAAC,gBAAgB,CAAC,UAAU,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;QAClE,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,iDAAiD;IACjD,qDAAqD;IACrD,UAAU,CAAC,GAAG,EAAE;QACZ,IAAI,MAAM,CAAC,cAAc,EAAE,CAAC;YACxB,MAAM,MAAM,GAAG,MAAM,CAAC,cAAc,EAAE,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC;YAE7C,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;gBACjC,sDAAsD;gBACtD,IAAI,MAAM,CAAC,cAAc,EAAE,CAAC;oBACxB,MAAM,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;wBAC5C,IAAI,MAAM,CAAC,UAAU,EAAE,CAAC;4BACpB,MAAM,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;wBACpC,CAAC;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC;YACL,CAAC;iBAAM,CAAC;gBACJ,oCAAoC;gBACpC,IAAI,MAAM,CAAC,cAAc,EAAE,CAAC;oBACxB,MAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;oBACjC,+BAA+B;oBAC/B,MAAM,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;gBAC1C,CAAC;YACL,CAAC;QACL,CAAC;aAAM,CAAC;YACJ,OAAO,CAAC,KAAK,CAAC,uCAAuC,CAAC,CAAC;YACvD,2BAA2B;YAC3B,IAAI,MAAM,CAAC,cAAc,EAAE,CAAC;gBACxB,MAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;gBACjC,MAAM,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YAC1C,CAAC;QACL,CAAC;IACL,CAAC,EAAE,GAAG,CAAC,CAAC;IAER,OAAO,CAAC,GAAG,CAAC,mDAAmD,CAAC,CAAC;AACrE,CAAC;AAED,+BAA+B;AAC/B,KAAK,UAAU,gBAAgB;IAC3B,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;IAE/D,qBAAqB;IACrB,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;IACnD,IAAI,OAAO,EAAE,CAAC;QACV,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QAChC,OAAO,CAAC,WAAW,GAAG,mCAAmC,CAAC;IAC9D,CAAC;IAED,uBAAuB;IACvB,MAAM,UAAU,GAAG,MAAM,aAAa,EAAE,CAAC;IAEzC,IAAI,CAAC,UAAU,EAAE,CAAC;QACd,OAAO,CAAC,KAAK,CAAC,oDAAoD,CAAC,CAAC;QACpE,OAAO;IACX,CAAC;IAED,gCAAgC;IAChC,IAAI,OAAO,EAAE,CAAC;QACV,OAAO,CAAC,WAAW,GAAG,wCAAwC,CAAC;IACnE,CAAC;IAED,qBAAqB;IACrB,aAAa,EAAE,CAAC;IAEhB,0BAA0B;IAC1B,IAAI,OAAO,EAAE,CAAC;QACV,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IACnC,CAAC;IAED,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;AACjD,CAAC;AAED,8CAA8C;AAC9C,IAAI,QAAQ,CAAC,UAAU,KAAK,SAAS,EAAE,CAAC;IACpC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;AACpE,CAAC;KAAM,CAAC;IACJ,uBAAuB;IACvB,gBAAgB,EAAE,CAAC;AACvB,CAAC;AAED,oCAAoC;AACO","sources":["webpack://youtube-music-api-proxy-frontend/./css/main.css?1ad6","webpack://youtube-music-api-proxy-frontend/./js/constants.ts","webpack://youtube-music-api-proxy-frontend/./js/content-manager.ts","webpack://youtube-music-api-proxy-frontend/./js/event-delegation.ts","webpack://youtube-music-api-proxy-frontend/./js/lib/youtube-music-api-proxy/youtube-music-api-proxy.ts","webpack://youtube-music-api-proxy-frontend/./js/notification-manager.ts","webpack://youtube-music-api-proxy-frontend/./js/player-manager.ts","webpack://youtube-music-api-proxy-frontend/./js/right-sidebar-manager.ts","webpack://youtube-music-api-proxy-frontend/./js/services/api-service.ts","webpack://youtube-music-api-proxy-frontend/./js/sidebar-manager.ts","webpack://youtube-music-api-proxy-frontend/./js/url-manager.ts","webpack://youtube-music-api-proxy-frontend/./js/utils.ts","webpack://youtube-music-api-proxy-frontend/webpack/bootstrap","webpack://youtube-music-api-proxy-frontend/webpack/runtime/define property getters","webpack://youtube-music-api-proxy-frontend/webpack/runtime/hasOwnProperty shorthand","webpack://youtube-music-api-proxy-frontend/webpack/runtime/make namespace object","webpack://youtube-music-api-proxy-frontend/./js/app.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// Responsive breakpoints - these values are used throughout the application\r\n// and are synchronized with CSS custom properties for consistent responsive behavior\r\nexport const SIDEBAR_COLLAPSE_BREAKPOINT = 800; // Breakpoint for sidebar collapse (desktop and mobile)\r\n\r\n// Default title for the application\r\nexport const DEFAULT_TITLE = 'YT Music';\r\n\r\n// Player states\r\nexport const PLAYER_STATES = {\r\n    PLAYING: 'playing',\r\n    PAUSED: 'paused',\r\n    STOPPED: 'stopped'\r\n} as const;\r\n\r\nexport type PlayerState = typeof PLAYER_STATES[keyof typeof PLAYER_STATES];\r\n\r\n// Repeat modes\r\nexport const REPEAT_MODES = {\r\n    NONE: 'none',\r\n    ONE: 'one',\r\n    ALL: 'all'\r\n} as const;\r\n\r\nexport type RepeatMode = typeof REPEAT_MODES[keyof typeof REPEAT_MODES];\r\n\r\n// Sidebar states\r\nexport const SIDEBAR_STATES = {\r\n    FULL: 'full',\r\n    EXPANDED: 'expanded',\r\n    ICON: 'icon',\r\n    COLLAPSED: 'collapsed'\r\n} as const;\r\n\r\nexport type SidebarState = typeof SIDEBAR_STATES[keyof typeof SIDEBAR_STATES];\r\n\r\n// Right sidebar tabs\r\nexport const RIGHT_SIDEBAR_TABS = {\r\n    INFO: 'info',\r\n    LYRICS: 'lyrics'\r\n} as const;\r\n\r\nexport type RightSidebarTab = typeof RIGHT_SIDEBAR_TABS[keyof typeof RIGHT_SIDEBAR_TABS];\r\n\r\n// Notification types\r\nexport const NOTIFICATION_TYPES = {\r\n    ERROR: 'error',\r\n    SUCCESS: 'success',\r\n    WARNING: 'warning',\r\n    INFO: 'info'\r\n} as const;\r\n\r\nexport type NotificationType = typeof NOTIFICATION_TYPES[keyof typeof NOTIFICATION_TYPES];\r\n\r\n// Notification icons\r\nexport const NOTIFICATION_ICONS: Record<NotificationType, string> = {\r\n    error: '❌',\r\n    success: '✅',\r\n    warning: '⚠️',\r\n    info: 'ℹ️'\r\n};\r\n\r\n// Default values\r\nexport const DEFAULTS = {\r\n    VOLUME: 0.5,\r\n    NOTIFICATION_DURATION: 5000,\r\n    ERROR_NOTIFICATION_DURATION: 8000,\r\n    SUCCESS_NOTIFICATION_DURATION: 4000,\r\n    WARNING_NOTIFICATION_DURATION: 6000,\r\n    INFO_NOTIFICATION_DURATION: 5000,\r\n    RIGHT_SIDEBAR_WIDTH: 300,\r\n    RIGHT_SIDEBAR_MIN_WIDTH: 200,\r\n    RIGHT_SIDEBAR_MAX_WIDTH: 600\r\n} as const;\r\n\r\n// Error recovery timeout for automatic playlist advancement\r\nexport const ERROR_RECOVERY_TIMEOUT = 3000;\r\n\r\n// Swipe gesture minimum distance\r\nexport const MIN_SWIPE_DISTANCE = 100;\r\n\r\n// Volume slider drag threshold\r\nexport const VOLUME_DRAG_THRESHOLD = 50;\r\n","import { formatNumber, formatDate } from './utils';\r\nimport apiService from './services/api-service';\r\nimport {\r\n    SearchResponse,\r\n    SearchResult,\r\n    SongSearchResult,\r\n    AlbumSearchResult,\r\n    ArtistSearchResult,\r\n    LibraryResponse,\r\n    LibrarySongsResponse,\r\n    LibraryArtistsResponse,\r\n    LibraryAlbumsResponse,\r\n    LibraryPlaylistsResponse,\r\n    PlaylistResponse,\r\n    AlbumInfo,\r\n    ArtistInfo,\r\n    SongVideoInfoResponse,\r\n    SearchCategory\r\n} from './lib/youtube-music-api-proxy/youtube-music-api-proxy';\r\n\r\n// Content Manager\r\nexport class ContentManager {\r\n    private currentView: string = 'home';\r\n    private playlists: any[] = [];\r\n    private searchResults: SearchResult[] = [];\r\n\r\n    constructor() {\r\n        this.init();\r\n    }\r\n\r\n    init(): void {\r\n        this.setupEventListeners();\r\n    }\r\n\r\n    setupEventListeners(): void {\r\n        // Search functionality\r\n        const searchInput = document.getElementById('searchInput') as HTMLInputElement;\r\n        if (searchInput) {\r\n            searchInput.addEventListener('keypress', (e: KeyboardEvent) => {\r\n                if (e.key === 'Enter') {\r\n                    this.handleSearch(e);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    async loadHome(): Promise<void> {\r\n        this.currentView = 'home';\r\n        this.updateActiveNavItem('home');\r\n\r\n        const mainContent = document.getElementById('mainContent');\r\n        if (!mainContent) return;\r\n\r\n        mainContent.innerHTML = `\r\n            <div class=\"welcome-section\">\r\n                <h1>Welcome to YouTube Music API Proxy</h1>\r\n                <p>Search for music, browse your library, or explore playlists.</p>\r\n                <div class=\"search-box\">\r\n                    <input type=\"text\" id=\"homeSearchInput\" placeholder=\"Search for songs, artists, or albums...\">\r\n                    <button onclick=\"document.getElementById('homeSearchInput').value && handleSearch({key:'Enter',target:document.getElementById('homeSearchInput')})\">Search</button>\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        // Set up home search\r\n        const homeSearchInput = document.getElementById('homeSearchInput') as HTMLInputElement;\r\n        if (homeSearchInput) {\r\n            homeSearchInput.addEventListener('keypress', (e: KeyboardEvent) => {\r\n                if (e.key === 'Enter') {\r\n                    this.handleSearch(e);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    async loadLibrary(): Promise<void> {\r\n        this.currentView = 'library';\r\n        this.updateActiveNavItem('library');\r\n\r\n        try {\r\n            const api = apiService.getAPI();\r\n            const data: LibraryResponse = await api.getLibrary();\r\n            this.displayLibraryContent(data);\r\n        } catch (error) {\r\n            console.error('Error loading library:', error);\r\n            if (window.notificationManager) {\r\n                window.notificationManager.showErrorNotification('Failed to load library');\r\n            }\r\n        }\r\n    }\r\n\r\n    async loadSongs(): Promise<void> {\r\n        this.currentView = 'songs';\r\n        this.updateActiveNavItem('songs');\r\n\r\n        try {\r\n            const api = apiService.getAPI();\r\n            const data: LibrarySongsResponse = await api.getLibrarySongs();\r\n            this.displaySongsContent(data);\r\n        } catch (error) {\r\n            console.error('Error loading songs:', error);\r\n            if (window.notificationManager) {\r\n                window.notificationManager.showErrorNotification('Failed to load songs');\r\n            }\r\n        }\r\n    }\r\n\r\n    async loadArtists(): Promise<void> {\r\n        this.currentView = 'artists';\r\n        this.updateActiveNavItem('artists');\r\n\r\n        try {\r\n            const api = apiService.getAPI();\r\n            const data: LibraryArtistsResponse = await api.getLibraryArtists();\r\n            this.displayArtistsContent(data);\r\n        } catch (error) {\r\n            console.error('Error loading artists:', error);\r\n            if (window.notificationManager) {\r\n                window.notificationManager.showErrorNotification('Failed to load artists');\r\n            }\r\n        }\r\n    }\r\n\r\n    async loadAlbums(): Promise<void> {\r\n        this.currentView = 'albums';\r\n        this.updateActiveNavItem('albums');\r\n\r\n        try {\r\n            const api = apiService.getAPI();\r\n            const data: LibraryAlbumsResponse = await api.getLibraryAlbums();\r\n            this.displayAlbumsContent(data);\r\n        } catch (error) {\r\n            console.error('Error loading albums:', error);\r\n            if (window.notificationManager) {\r\n                window.notificationManager.showErrorNotification('Failed to load albums');\r\n            }\r\n        }\r\n    }\r\n\r\n    async loadPlaylists(): Promise<void> {\r\n        try {\r\n            const api = apiService.getAPI();\r\n            const data: LibraryPlaylistsResponse = await api.getLibraryPlaylists();\r\n            this.playlists = data.playlists;\r\n            this.updatePlaylistsSidebar();\r\n        } catch (error) {\r\n            console.error('Error loading playlists:', error);\r\n        }\r\n    }\r\n\r\n    async loadPlaylist(id: string, title: string): Promise<void> {\r\n        this.currentView = 'playlist';\r\n        this.updateActiveNavItem('playlist');\r\n\r\n        try {\r\n            const api = apiService.getAPI();\r\n            const data: PlaylistResponse = await api.getPlaylist(id);\r\n            this.displayPlaylistContent(data, title);\r\n        } catch (error) {\r\n            console.error('Error loading playlist:', error);\r\n            if (window.notificationManager) {\r\n                window.notificationManager.showErrorNotification('Failed to load playlist');\r\n            }\r\n        }\r\n    }\r\n\r\n    async loadAlbum(id: string, title: string): Promise<void> {\r\n        this.currentView = 'album';\r\n        this.updateActiveNavItem('album');\r\n\r\n        try {\r\n            const api = apiService.getAPI();\r\n            const data: AlbumInfo = await api.getAlbumInfo(id);\r\n            this.displayAlbumContent(data, title);\r\n        } catch (error) {\r\n            console.error('Error loading album:', error);\r\n            if (window.notificationManager) {\r\n                window.notificationManager.showErrorNotification('Failed to load album');\r\n            }\r\n        }\r\n    }\r\n\r\n    async loadArtist(id: string, name: string): Promise<void> {\r\n        this.currentView = 'artist';\r\n        this.updateActiveNavItem('artist');\r\n\r\n        try {\r\n            const api = apiService.getAPI();\r\n            const data: ArtistInfo = await api.getArtistInfo(id);\r\n            this.displayArtistContent(data, name);\r\n        } catch (error) {\r\n            console.error('Error loading artist:', error);\r\n            if (window.notificationManager) {\r\n                window.notificationManager.showErrorNotification('Failed to load artist');\r\n            }\r\n        }\r\n    }\r\n\r\n    async handleSearch(event: KeyboardEvent): Promise<void> {\r\n        const target = event.target as HTMLInputElement;\r\n        const query = target.value.trim();\r\n\r\n        if (!query) return;\r\n\r\n        this.currentView = 'search';\r\n        this.updateActiveNavItem('search');\r\n\r\n        try {\r\n            const api = apiService.getAPI();\r\n            const data: SearchResponse = await api.search(query);\r\n            this.searchResults = data.results;\r\n            this.displaySearchResults(data, query);\r\n        } catch (error) {\r\n            console.error('Error searching:', error);\r\n            if (window.notificationManager) {\r\n                window.notificationManager.showErrorNotification('Search failed');\r\n            }\r\n        }\r\n    }\r\n\r\n    displayLibraryContent(data: LibraryResponse): void {\r\n        const mainContent = document.getElementById('mainContent');\r\n        if (!mainContent) return;\r\n\r\n        mainContent.innerHTML = `\r\n            <div class=\"library-content\">\r\n                <h2>Your Library</h2>\r\n                <div class=\"library-stats\">\r\n                    <div class=\"stat\">\r\n                        <span class=\"stat-number\">${data.songs?.length || 0}</span>\r\n                        <span class=\"stat-label\">Songs</span>\r\n                    </div>\r\n                    <div class=\"stat\">\r\n                        <span class=\"stat-number\">${data.artists?.length || 0}</span>\r\n                        <span class=\"stat-label\">Artists</span>\r\n                    </div>\r\n                    <div class=\"stat\">\r\n                        <span class=\"stat-number\">${data.albums?.length || 0}</span>\r\n                        <span class=\"stat-label\">Albums</span>\r\n                    </div>\r\n                    <div class=\"stat\">\r\n                        <span class=\"stat-number\">${data.playlists?.length || 0}</span>\r\n                        <span class=\"stat-label\">Playlists</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    displaySongsContent(data: LibrarySongsResponse): void {\r\n        const mainContent = document.getElementById('mainContent');\r\n        if (!mainContent) return;\r\n\r\n        const songs = data.songs || [];\r\n        const songsHtml = songs.map((song) => `\r\n            <div class=\"song-item\" data-song-id=\"${song.id}\" \r\n                 data-song-name=\"${song.name}\" \r\n                 data-song-artist=\"${song.artists && song.artists.length > 0 ? song.artists[0].name : ''}\"\r\n                 data-song-thumbnail=\"${song.thumbnails && song.thumbnails.length > 0 ? song.thumbnails[0].url : ''}\">\r\n                <img src=\"${song.thumbnails && song.thumbnails.length > 0 ? song.thumbnails[0].url : ''}\" alt=\"${song.name}\">\r\n                <div class=\"song-info\">\r\n                    <h3>${song.name}</h3>\r\n                    <p>${song.artists && song.artists.length > 0 ? song.artists[0].name : 'Unknown Artist'}</p>\r\n                </div>\r\n                <div class=\"song-duration\">${song.duration || ''}</div>\r\n            </div>\r\n        `).join('');\r\n\r\n        mainContent.innerHTML = `\r\n            <div class=\"songs-content\">\r\n                <h2>Your Songs (${songs.length})</h2>\r\n                <div class=\"songs-list\">\r\n                    ${songsHtml}\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    displayArtistsContent(data: LibraryArtistsResponse): void {\r\n        const mainContent = document.getElementById('mainContent');\r\n        if (!mainContent) return;\r\n\r\n        const artists = data.artists || [];\r\n        const artistsHtml = artists.map((artist) => `\r\n            <div class=\"artist-item\" data-artist-id=\"${artist.id}\" \r\n                 data-artist-name=\"${artist.name}\">\r\n                <img src=\"${artist.thumbnails && artist.thumbnails.length > 0 ? artist.thumbnails[0].url : ''}\" alt=\"${artist.name}\">\r\n                <div class=\"artist-info\">\r\n                    <h3>${artist.name}</h3>\r\n                    <p>${artist.songCount || 0} songs</p>\r\n                </div>\r\n            </div>\r\n        `).join('');\r\n\r\n        mainContent.innerHTML = `\r\n            <div class=\"artists-content\">\r\n                <h2>Your Artists (${artists.length})</h2>\r\n                <div class=\"artists-list\">\r\n                    ${artistsHtml}\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    displayAlbumsContent(data: LibraryAlbumsResponse): void {\r\n        const mainContent = document.getElementById('mainContent');\r\n        if (!mainContent) return;\r\n\r\n        const albums = data.albums || [];\r\n        const albumsHtml = albums.map((album) => `\r\n            <div class=\"album-item\" data-album-id=\"${album.id}\" \r\n                 data-album-title=\"${album.name}\">\r\n                <img src=\"${album.thumbnails && album.thumbnails.length > 0 ? album.thumbnails[0].url : ''}\" alt=\"${album.name}\">\r\n                <div class=\"album-info\">\r\n                    <h3>${album.name}</h3>\r\n                    <p>${album.artists && album.artists.length > 0 ? album.artists[0].name : 'Unknown Artist'}</p>\r\n                    <p>${album.year || ''}</p>\r\n                </div>\r\n            </div>\r\n        `).join('');\r\n\r\n        mainContent.innerHTML = `\r\n            <div class=\"albums-content\">\r\n                <h2>Your Albums (${albums.length})</h2>\r\n                <div class=\"albums-list\">\r\n                    ${albumsHtml}\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    displayPlaylistContent(data: PlaylistResponse, title: string): void {\r\n        const mainContent = document.getElementById('mainContent');\r\n        if (!mainContent) return;\r\n\r\n        const songs = data.songs || [];\r\n        const songsHtml = songs.map((song: SearchResult) => {\r\n            if (song instanceof SongSearchResult) {\r\n                const songItem = song as SongSearchResult;\r\n                return `\r\n                    <div class=\"song-item\" data-song-id=\"${songItem.id}\" \r\n                         data-song-name=\"${songItem.name}\" \r\n                         data-song-artist=\"${songItem.artists && songItem.artists.length > 0 ? songItem.artists[0].name : ''}\"\r\n                         data-song-thumbnail=\"${songItem.thumbnails && songItem.thumbnails.length > 0 ? songItem.thumbnails[0].url : ''}\">\r\n                        <img src=\"${songItem.thumbnails && songItem.thumbnails.length > 0 ? songItem.thumbnails[0].url : ''}\" alt=\"${songItem.name}\">\r\n                        <div class=\"song-info\">\r\n                            <h3>${songItem.name}</h3>\r\n                            <p>${songItem.artists && songItem.artists.length > 0 ? songItem.artists[0].name : 'Unknown Artist'}</p>\r\n                        </div>\r\n                        <div class=\"song-duration\">${songItem.duration || ''}</div>\r\n                    </div>\r\n                `;\r\n            }\r\n            return '';\r\n        }).join('');\r\n\r\n        mainContent.innerHTML = `\r\n            <div class=\"playlist-content\">\r\n                <h2>${title}</h2>\r\n                <p>${songs.length} songs</p>\r\n                <div class=\"songs-list\">\r\n                    ${songsHtml}\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    displayAlbumContent(data: AlbumInfo, title: string): void {\r\n        const mainContent = document.getElementById('mainContent');\r\n        if (!mainContent) return;\r\n\r\n        const songs = data.songs || [];\r\n        const songsHtml = songs.map((song) => `\r\n            <div class=\"song-item\" data-song-id=\"${song.id}\" \r\n                 data-song-name=\"${song.name}\" \r\n                 data-song-artist=\"${song.artists && song.artists.length > 0 ? song.artists[0].name : ''}\"\r\n                 data-song-thumbnail=\"${song.thumbnails && song.thumbnails.length > 0 ? song.thumbnails[0].url : ''}\">\r\n                <img src=\"${song.thumbnails && song.thumbnails.length > 0 ? song.thumbnails[0].url : ''}\" alt=\"${song.name}\">\r\n                <div class=\"song-info\">\r\n                    <h3>${song.name}</h3>\r\n                    <p>${song.artists && song.artists.length > 0 ? song.artists[0].name : 'Unknown Artist'}</p>\r\n                </div>\r\n                <div class=\"song-duration\">${song.duration || ''}</div>\r\n            </div>\r\n        `).join('');\r\n\r\n        mainContent.innerHTML = `\r\n            <div class=\"album-content\">\r\n                <h2>${title}</h2>\r\n                <p>${songs.length} songs</p>\r\n                <div class=\"songs-list\">\r\n                    ${songsHtml}\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    displayArtistContent(data: ArtistInfo, name: string): void {\r\n        const mainContent = document.getElementById('mainContent');\r\n        if (!mainContent) return;\r\n\r\n        const songs = data.songs || [];\r\n        const songsHtml = songs.map((song) => `\r\n            <div class=\"song-item\" data-song-id=\"${song.id}\" \r\n                 data-song-name=\"${song.name}\" \r\n                 data-song-artist=\"${song.artists && song.artists.length > 0 ? song.artists[0].name : ''}\"\r\n                 data-song-thumbnail=\"${song.thumbnails && song.thumbnails.length > 0 ? song.thumbnails[0].url : ''}\">\r\n                <img src=\"${song.thumbnails && song.thumbnails.length > 0 ? song.thumbnails[0].url : ''}\" alt=\"${song.name}\">\r\n                <div class=\"song-info\">\r\n                    <h3>${song.name}</h3>\r\n                    <p>${song.artists && song.artists.length > 0 ? song.artists[0].name : 'Unknown Artist'}</p>\r\n                </div>\r\n                <div class=\"song-duration\">${song.duration || ''}</div>\r\n            </div>\r\n        `).join('');\r\n\r\n        mainContent.innerHTML = `\r\n            <div class=\"artist-content\">\r\n                <h2>${name}</h2>\r\n                <p>${songs.length} songs</p>\r\n                <div class=\"songs-list\">\r\n                    ${songsHtml}\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    displaySearchResults(data: SearchResponse, query: string): void {\r\n        const mainContent = document.getElementById('mainContent');\r\n        if (!mainContent) return;\r\n\r\n        const results = data.results || [];\r\n        const resultsHtml = results.map((item: SearchResult) => {\r\n            if (item instanceof SongSearchResult) {\r\n                const songItem = item as SongSearchResult;\r\n                return `\r\n                    <div class=\"song-item\" data-song-id=\"${songItem.id}\" \r\n                         data-song-name=\"${songItem.name}\" \r\n                         data-song-artist=\"${songItem.artists && songItem.artists.length > 0 ? songItem.artists[0].name : ''}\"\r\n                         data-song-thumbnail=\"${songItem.thumbnails && songItem.thumbnails.length > 0 ? songItem.thumbnails[0].url : ''}\">\r\n                        <img src=\"${songItem.thumbnails && songItem.thumbnails.length > 0 ? songItem.thumbnails[0].url : ''}\" alt=\"${songItem.name}\">\r\n                        <div class=\"song-info\">\r\n                            <h3>${songItem.name}</h3>\r\n                            <p>${songItem.artists && songItem.artists.length > 0 ? songItem.artists[0].name : 'Unknown Artist'}</p>\r\n                        </div>\r\n                        <div class=\"song-duration\">${songItem.duration || ''}</div>\r\n                    </div>\r\n                `;\r\n            } else if (item instanceof AlbumSearchResult) {\r\n                const albumItem = item as AlbumSearchResult;\r\n                return `\r\n                    <div class=\"album-item\" data-album-id=\"${albumItem.id}\" \r\n                         data-album-title=\"${albumItem.name}\">\r\n                        <img src=\"${albumItem.thumbnails && albumItem.thumbnails.length > 0 ? albumItem.thumbnails[0].url : ''}\" alt=\"${albumItem.name}\">\r\n                        <div class=\"album-info\">\r\n                            <h3>${albumItem.name}</h3>\r\n                            <p>${albumItem.artists && albumItem.artists.length > 0 ? albumItem.artists[0].name : 'Unknown Artist'}</p>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n            } else if (item instanceof ArtistSearchResult) {\r\n                const artistItem = item as ArtistSearchResult;\r\n                return `\r\n                    <div class=\"artist-item\" data-artist-id=\"${artistItem.id}\" \r\n                         data-artist-name=\"${artistItem.name}\">\r\n                        <img src=\"${artistItem.thumbnails && artistItem.thumbnails.length > 0 ? artistItem.thumbnails[0].url : ''}\" alt=\"${artistItem.name}\">\r\n                        <div class=\"artist-info\">\r\n                            <h3>${artistItem.name}</h3>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n            }\r\n            return '';\r\n        }).join('');\r\n\r\n        mainContent.innerHTML = `\r\n            <div class=\"search-results\">\r\n                <h2>Search Results for \"${query}\"</h2>\r\n                <p>${results.length} results found</p>\r\n                <div class=\"results-list\">\r\n                    ${resultsHtml}\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    updatePlaylistsSidebar(): void {\r\n        const playlistsContainer = document.getElementById('playlistsContainer');\r\n        if (!playlistsContainer) return;\r\n\r\n        const playlistsHtml = this.playlists.map((playlist: any) => `\r\n            <div class=\"playlist-item\" data-playlist-id=\"${playlist.id || playlist.playlistId}\" \r\n                 data-playlist-title=\"${playlist.name || playlist.title}\">\r\n                <div class=\"playlist-info\">\r\n                    <h4>${playlist.name || playlist.title}</h4>\r\n                    <p>${playlist.songCount || 0} songs</p>\r\n                </div>\r\n            </div>\r\n        `).join('');\r\n\r\n        playlistsContainer.innerHTML = playlistsHtml;\r\n    }\r\n\r\n    updateActiveNavItem(view: string): void {\r\n        // Remove active class from all nav items\r\n        document.querySelectorAll('.nav-item').forEach(item => {\r\n            item.classList.remove('active');\r\n        });\r\n\r\n        // Add active class to current view\r\n        const navItem = document.querySelector(`[data-view=\"${view}\"]`);\r\n        if (navItem) {\r\n            navItem.classList.add('active');\r\n        }\r\n    }\r\n}\r\n\r\n// Create global instance\r\nwindow.contentManager = new ContentManager();\r\n\r\n// Global functions for onclick handlers\r\nwindow.loadHome = () => window.contentManager.loadHome();\r\nwindow.loadLibrary = () => window.contentManager.loadLibrary();\r\nwindow.loadSongs = () => window.contentManager.loadSongs();\r\nwindow.loadArtists = () => window.contentManager.loadArtists();\r\nwindow.loadAlbums = () => window.contentManager.loadAlbums();\r\nwindow.loadPlaylists = () => window.contentManager.loadPlaylists();\r\nwindow.loadPlaylist = (id: string, title: string) => window.contentManager.loadPlaylist(id, title);\r\nwindow.loadAlbum = (id: string, title: string) => window.contentManager.loadAlbum(id, title);\r\nwindow.loadArtist = (id: string, name: string) => window.contentManager.loadArtist(id, name);\r\nwindow.handleSearch = (event: KeyboardEvent) => window.contentManager.handleSearch(event);\r\n","// Event delegation for data attributes instead of inline onclick handlers\r\nexport function setupEventDelegation(): void {\r\n    // Handle song clicks with data attributes\r\n    document.addEventListener('click', function (event: Event): void {\r\n        const target = event.target as Element;\r\n        const songElement = target.closest('[data-song-id]') as HTMLElement;\r\n        if (songElement) {\r\n            const songId = songElement.dataset.songId!;\r\n            const songName = songElement.dataset.songName || '';\r\n            const songArtist = songElement.dataset.songArtist || '';\r\n            const songThumbnail = songElement.dataset.songThumbnail || '';\r\n            const playlistId = songElement.dataset.playlistId || null;\r\n            const songIndex = songElement.dataset.songIndex ? parseInt(songElement.dataset.songIndex) : -1;\r\n\r\n            window.playerManager.playSong(songId, songName, songArtist, songThumbnail, playlistId ? [playlistId] : undefined, songIndex);\r\n            event.stopPropagation(); // Prevent event from bubbling up to parent elements\r\n            return; // Exit early to prevent other handlers from running\r\n        }\r\n\r\n        // Handle playlist clicks with data attributes\r\n        const playlistElement = target.closest('[data-playlist-id]') as HTMLElement;\r\n        if (playlistElement) {\r\n            const playlistId = playlistElement.dataset.playlistId!;\r\n            const playlistTitle = playlistElement.dataset.playlistTitle || '';\r\n\r\n            window.contentManager.loadPlaylist(playlistId, playlistTitle);\r\n            event.stopPropagation(); // Prevent event from bubbling up\r\n            return; // Exit early to prevent other handlers from running\r\n        }\r\n\r\n        // Handle album clicks with data attributes\r\n        const albumElement = target.closest('[data-album-id]') as HTMLElement;\r\n        if (albumElement) {\r\n            const albumId = albumElement.dataset.albumId!;\r\n            const albumTitle = albumElement.dataset.albumTitle || '';\r\n\r\n            window.contentManager.loadAlbum(albumId, albumTitle);\r\n            event.stopPropagation(); // Prevent event from bubbling up\r\n            return; // Exit early to prevent other handlers from running\r\n        }\r\n\r\n        // Handle artist clicks with data attributes\r\n        const artistElement = target.closest('[data-artist-id]') as HTMLElement;\r\n        if (artistElement) {\r\n            const artistId = artistElement.dataset.artistId!;\r\n            const artistName = artistElement.dataset.artistName || '';\r\n\r\n            window.contentManager.loadArtist(artistId, artistName);\r\n            event.stopPropagation(); // Prevent event from bubbling up\r\n            return; // Exit early to prevent other handlers from running\r\n        }\r\n    });\r\n}\r\n","/**\r\n * YouTube Music API Proxy - TypeScript Library\r\n * Complete API library for interacting with YouTube Music API Proxy\r\n * \r\n * This file provides the core API functionality with proper classes and interfaces\r\n * that mirror the C# backend models for type safety and consistency.\r\n */\r\n\r\n// ============================================================================\r\n// Base Classes and Interfaces\r\n// ============================================================================\r\n\r\n/**\r\n * Base entity with name and ID\r\n */\r\nexport abstract class NamedEntity {\r\n    constructor(\r\n        public readonly name: string,\r\n        public readonly id: string\r\n    ) {}\r\n}\r\n\r\n/**\r\n * Base entity with additional info\r\n */\r\nexport abstract class EntityInfo extends NamedEntity {\r\n    constructor(\r\n        name: string,\r\n        id: string,\r\n        public readonly thumbnails: Thumbnail[]\r\n    ) {\r\n        super(name, id);\r\n    }\r\n}\r\n\r\n/**\r\n * Thumbnail information\r\n */\r\nexport interface Thumbnail {\r\n    url: string;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\n/**\r\n * Radio channel information\r\n */\r\nexport interface Radio {\r\n    playlistId: string;\r\n    name: string;\r\n}\r\n\r\n/**\r\n * Playability status\r\n */\r\nexport interface PlayabilityStatus {\r\n    status: string;\r\n    reason?: string;\r\n}\r\n\r\n/**\r\n * Playback tracking information\r\n */\r\nexport interface PlaybackTracking {\r\n    videostatsPlaybackUrl: string;\r\n    videostatsDelayplayUrl: string;\r\n    videostatsWatchtimeUrl: string;\r\n    ptrackingUrl: string;\r\n    qoeUrl: string;\r\n    atrUrl: string;\r\n}\r\n\r\n/**\r\n * Stream information base\r\n */\r\nexport interface StreamInfo {\r\n    type: 'AudioStreamInfo' | 'VideoStreamInfo';\r\n    url: string;\r\n    bitrate: number;\r\n    contentLenght: number;\r\n}\r\n\r\n/**\r\n * Audio stream information\r\n */\r\nexport interface AudioStreamInfo extends StreamInfo {\r\n    type: 'AudioStreamInfo';\r\n}\r\n\r\n/**\r\n * Video stream information\r\n */\r\nexport interface VideoStreamInfo extends StreamInfo {\r\n    type: 'VideoStreamInfo';\r\n    width: number;\r\n    height: number;\r\n    fps: number;\r\n}\r\n\r\n/**\r\n * Streaming data containing audio and video streams\r\n */\r\nexport interface StreamingData {\r\n    streamInfo: StreamInfo[];\r\n}\r\n\r\n/**\r\n * Search category enumeration\r\n */\r\nexport enum SearchCategory {\r\n    Songs = 'Songs',\r\n    Videos = 'Videos',\r\n    Albums = 'Albums',\r\n    CommunityPlaylists = 'CommunityPlaylists',\r\n    Artists = 'Artists',\r\n    Podcasts = 'Podcasts',\r\n    Episodes = 'Episodes',\r\n    Profiles = 'Profiles'\r\n}\r\n\r\n// ============================================================================\r\n// Search Result Classes\r\n// ============================================================================\r\n\r\n/**\r\n * Base search result class\r\n */\r\nexport abstract class SearchResult extends EntityInfo {\r\n    constructor(\r\n        name: string,\r\n        id: string,\r\n        thumbnails: Thumbnail[],\r\n        public readonly category: SearchCategory\r\n    ) {\r\n        super(name, id, thumbnails);\r\n    }\r\n}\r\n\r\n/**\r\n * Song search result\r\n */\r\nexport class SongSearchResult extends SearchResult {\r\n    constructor(\r\n        name: string,\r\n        id: string,\r\n        public readonly artists: NamedEntity[],\r\n        public readonly album: NamedEntity,\r\n        public readonly duration: string,\r\n        public readonly isExplicit: boolean,\r\n        public readonly playsInfo: string,\r\n        public readonly radio: Radio | null,\r\n        thumbnails: Thumbnail[]\r\n    ) {\r\n        super(name, id, thumbnails, SearchCategory.Songs);\r\n    }\r\n}\r\n\r\n/**\r\n * Video search result\r\n */\r\nexport class VideoSearchResult extends SearchResult {\r\n    constructor(\r\n        name: string,\r\n        id: string,\r\n        public readonly artists: NamedEntity[],\r\n        public readonly duration: string,\r\n        public readonly isExplicit: boolean,\r\n        public readonly playsInfo: string,\r\n        public readonly radio: Radio | null,\r\n        thumbnails: Thumbnail[]\r\n    ) {\r\n        super(name, id, thumbnails, SearchCategory.Videos);\r\n    }\r\n}\r\n\r\n/**\r\n * Album search result\r\n */\r\nexport class AlbumSearchResult extends SearchResult {\r\n    constructor(\r\n        name: string,\r\n        id: string,\r\n        public readonly artists: NamedEntity[],\r\n        public readonly year: string,\r\n        public readonly songCount: number,\r\n        thumbnails: Thumbnail[]\r\n    ) {\r\n        super(name, id, thumbnails, SearchCategory.Albums);\r\n    }\r\n}\r\n\r\n/**\r\n * Artist search result\r\n */\r\nexport class ArtistSearchResult extends SearchResult {\r\n    constructor(\r\n        name: string,\r\n        id: string,\r\n        public readonly subscribers: string,\r\n        public readonly songCount: number,\r\n        thumbnails: Thumbnail[]\r\n    ) {\r\n        super(name, id, thumbnails, SearchCategory.Artists);\r\n    }\r\n}\r\n\r\n// ============================================================================\r\n// Info Classes\r\n// ============================================================================\r\n\r\n/**\r\n * Song/Video information\r\n */\r\nexport class SongVideoInfo extends EntityInfo {\r\n    constructor(\r\n        name: string,\r\n        id: string,\r\n        public readonly browseId: string,\r\n        public readonly description: string,\r\n        public readonly artists: NamedEntity[],\r\n        public readonly album: NamedEntity | null,\r\n        public readonly duration: string,\r\n        public readonly radio: Radio | null,\r\n        public readonly playabilityStatus: PlayabilityStatus,\r\n        public readonly isRatingsAllowed: boolean,\r\n        public readonly isPrivate: boolean,\r\n        public readonly isUnlisted: boolean,\r\n        public readonly isLiveContent: boolean,\r\n        public readonly isFamilyFriendly: boolean,\r\n        public readonly isExplicit: boolean,\r\n        public readonly viewsCount: number,\r\n        public readonly publishedAt: string,\r\n        public readonly uploadedAt: string,\r\n        public readonly playbackTracking: PlaybackTracking | null,\r\n        thumbnails: Thumbnail[],\r\n        public readonly tags: string[]\r\n    ) {\r\n        super(name, id, thumbnails);\r\n    }\r\n}\r\n\r\n/**\r\n * Album song information\r\n */\r\nexport interface AlbumSong {\r\n    id: string;\r\n    name: string;\r\n    artists: NamedEntity[];\r\n    duration: string;\r\n    isExplicit: boolean;\r\n    thumbnails: Thumbnail[];\r\n}\r\n\r\n/**\r\n * Album information\r\n */\r\nexport class AlbumInfo {\r\n    constructor(\r\n        public readonly name: string,\r\n        public readonly id: string,\r\n        public readonly description: string | null,\r\n        public readonly artists: NamedEntity[],\r\n        public readonly duration: string,\r\n        public readonly songCount: number,\r\n        public readonly releaseYear: number,\r\n        public readonly isSingle: boolean,\r\n        public readonly isEp: boolean,\r\n        public readonly thumbnails: Thumbnail[],\r\n        public readonly songs: AlbumSong[]\r\n    ) {}\r\n}\r\n\r\n/**\r\n * Artist information\r\n */\r\nexport class ArtistInfo {\r\n    constructor(\r\n        public readonly name: string,\r\n        public readonly id: string,\r\n        public readonly description: string | null,\r\n        public readonly subscribers: string,\r\n        public readonly songCount: number,\r\n        public readonly albumCount: number,\r\n        public readonly thumbnails: Thumbnail[],\r\n        public readonly songs: AlbumSong[],\r\n        public readonly albums: AlbumInfo[]\r\n    ) {}\r\n}\r\n\r\n// ============================================================================\r\n// Library Classes\r\n// ============================================================================\r\n\r\n/**\r\n * Library song\r\n */\r\nexport interface LibrarySong {\r\n    id: string;\r\n    name: string;\r\n    artists: NamedEntity[];\r\n    album: NamedEntity | null;\r\n    duration: string;\r\n    thumbnails: Thumbnail[];\r\n}\r\n\r\n/**\r\n * Library album\r\n */\r\nexport interface LibraryAlbum {\r\n    id: string;\r\n    name: string;\r\n    artists: NamedEntity[];\r\n    year: number;\r\n    songCount: number;\r\n    thumbnails: Thumbnail[];\r\n}\r\n\r\n/**\r\n * Library artist\r\n */\r\nexport interface LibraryArtist {\r\n    id: string;\r\n    name: string;\r\n    subscribers: string;\r\n    songCount: number;\r\n    thumbnails: Thumbnail[];\r\n}\r\n\r\n/**\r\n * Library subscription\r\n */\r\nexport interface LibrarySubscription {\r\n    id: string;\r\n    name: string;\r\n    subscribers: string;\r\n    thumbnails: Thumbnail[];\r\n}\r\n\r\n/**\r\n * Library podcast\r\n */\r\nexport interface LibraryPodcast {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    episodeCount: number;\r\n    thumbnails: Thumbnail[];\r\n}\r\n\r\n/**\r\n * Library community playlist\r\n */\r\nexport interface LibraryCommunityPlaylist {\r\n    id: string;\r\n    name: string;\r\n    author: string;\r\n    songCount: number;\r\n    thumbnails: Thumbnail[];\r\n}\r\n\r\n// ============================================================================\r\n// Response Classes\r\n// ============================================================================\r\n\r\n/**\r\n * Base API response\r\n */\r\nexport class ApiResponse<T> {\r\n    constructor(\r\n        public readonly data: T,\r\n        public readonly success: boolean = true,\r\n        public readonly error?: string\r\n    ) {}\r\n}\r\n\r\n/**\r\n * Error response\r\n */\r\nexport class ErrorResponse {\r\n    constructor(\r\n        public readonly error: string,\r\n        public readonly details?: string\r\n    ) {}\r\n}\r\n\r\n/**\r\n * Health response\r\n */\r\nexport class HealthResponse {\r\n    constructor(\r\n        public readonly status: string,\r\n        public readonly version: string,\r\n        public readonly name: string,\r\n        public readonly timestamp: string,\r\n        public readonly runtime: RuntimeInfo,\r\n        public readonly environment: EnvironmentInfo\r\n    ) {}\r\n}\r\n\r\n/**\r\n * Runtime information\r\n */\r\nexport interface RuntimeInfo {\r\n    framework: string;\r\n    os: string;\r\n    uptimeSeconds: number;\r\n    memoryUsageMB: number;\r\n}\r\n\r\n/**\r\n * Environment information\r\n */\r\nexport interface EnvironmentInfo {\r\n    environment: string;\r\n    cookiesConfigured: boolean;\r\n}\r\n\r\n/**\r\n * Search response\r\n */\r\nexport class SearchResponse {\r\n    constructor(\r\n        public readonly results: SearchResult[],\r\n        public readonly totalCount: number,\r\n        public readonly query: string,\r\n        public readonly category?: string\r\n    ) {}\r\n}\r\n\r\n/**\r\n * Song/Video info response with streaming data\r\n */\r\nexport class SongVideoInfoResponse extends SongVideoInfo {\r\n    constructor(\r\n        songVideoInfo: SongVideoInfo,\r\n        public readonly streamingData?: StreamingData,\r\n        public readonly lyrics?: LyricsApiResponse\r\n    ) {\r\n        super(\r\n            songVideoInfo.name,\r\n            songVideoInfo.id,\r\n            songVideoInfo.browseId,\r\n            songVideoInfo.description,\r\n            songVideoInfo.artists,\r\n            songVideoInfo.album,\r\n            songVideoInfo.duration,\r\n            songVideoInfo.radio,\r\n            songVideoInfo.playabilityStatus,\r\n            songVideoInfo.isRatingsAllowed,\r\n            songVideoInfo.isPrivate,\r\n            songVideoInfo.isUnlisted,\r\n            songVideoInfo.isLiveContent,\r\n            songVideoInfo.isFamilyFriendly,\r\n            songVideoInfo.isExplicit,\r\n            songVideoInfo.viewsCount,\r\n            songVideoInfo.publishedAt,\r\n            songVideoInfo.uploadedAt,\r\n            songVideoInfo.playbackTracking,\r\n            songVideoInfo.thumbnails,\r\n            songVideoInfo.tags\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Library response\r\n */\r\nexport class LibraryResponse {\r\n    constructor(\r\n        public readonly songs: LibrarySong[],\r\n        public readonly albums: LibraryAlbum[],\r\n        public readonly artists: LibraryArtist[],\r\n        public readonly subscriptions: LibrarySubscription[],\r\n        public readonly podcasts: LibraryPodcast[],\r\n        public readonly playlists: LibraryCommunityPlaylist[]\r\n    ) {}\r\n}\r\n\r\n/**\r\n * Library songs response\r\n */\r\nexport class LibrarySongsResponse {\r\n    constructor(\r\n        public readonly songs: LibrarySong[],\r\n        public readonly totalCount: number\r\n    ) {}\r\n}\r\n\r\n/**\r\n * Library albums response\r\n */\r\nexport class LibraryAlbumsResponse {\r\n    constructor(\r\n        public readonly albums: LibraryAlbum[],\r\n        public readonly totalCount: number\r\n    ) {}\r\n}\r\n\r\n/**\r\n * Library artists response\r\n */\r\nexport class LibraryArtistsResponse {\r\n    constructor(\r\n        public readonly artists: LibraryArtist[],\r\n        public readonly totalCount: number\r\n    ) {}\r\n}\r\n\r\n/**\r\n * Library subscriptions response\r\n */\r\nexport class LibrarySubscriptionsResponse {\r\n    constructor(\r\n        public readonly subscriptions: LibrarySubscription[],\r\n        public readonly totalCount: number\r\n    ) {}\r\n}\r\n\r\n/**\r\n * Library podcasts response\r\n */\r\nexport class LibraryPodcastsResponse {\r\n    constructor(\r\n        public readonly podcasts: LibraryPodcast[],\r\n        public readonly totalCount: number\r\n    ) {}\r\n}\r\n\r\n/**\r\n * Library playlists response\r\n */\r\nexport class LibraryPlaylistsResponse {\r\n    constructor(\r\n        public readonly playlists: LibraryCommunityPlaylist[],\r\n        public readonly totalCount: number\r\n    ) {}\r\n}\r\n\r\n/**\r\n * Playlist response\r\n */\r\nexport class PlaylistResponse {\r\n    constructor(\r\n        public readonly id: string,\r\n        public readonly browseId: string,\r\n        public readonly playlist: any,\r\n        public readonly songs: SearchResult[],\r\n        public readonly totalSongs: number\r\n    ) {}\r\n}\r\n\r\n// ============================================================================\r\n// Lyrics Classes\r\n// ============================================================================\r\n\r\n/**\r\n * Lyrics data\r\n */\r\nexport class LyricsData {\r\n    constructor(\r\n        public readonly id: string,\r\n        public readonly videoId: string,\r\n        public readonly songTitle: string,\r\n        public readonly artistName: string,\r\n        public readonly albumName: string,\r\n        public readonly durationSeconds: number,\r\n        public readonly plainLyric: string,\r\n        public readonly syncedLyrics: string,\r\n        public readonly richSyncLyrics: string,\r\n        public readonly vote: number,\r\n        public readonly contributor: string,\r\n        public readonly contributorEmail: string\r\n    ) {}\r\n}\r\n\r\n/**\r\n * Lyrics error response\r\n */\r\nexport class LyricsErrorResponse {\r\n    constructor(\r\n        public readonly error: boolean,\r\n        public readonly code: number,\r\n        public readonly reason: string,\r\n        public readonly timeout?: string,\r\n        public readonly videoId?: string,\r\n        public readonly url?: string\r\n    ) {}\r\n}\r\n\r\n/**\r\n * Lyrics processing response\r\n */\r\nexport class LyricsProcessingResponse {\r\n    constructor(\r\n        public readonly code: number,\r\n        public readonly message: string\r\n    ) {}\r\n}\r\n\r\n/**\r\n * Lyrics API response wrapper\r\n */\r\nexport class LyricsApiResponse {\r\n    constructor(\r\n        public readonly data?: LyricsData[],\r\n        public readonly error?: LyricsErrorResponse,\r\n        public readonly processing?: LyricsProcessingResponse,\r\n        public readonly success: boolean = false\r\n    ) {}\r\n}\r\n\r\n// ============================================================================\r\n// Configuration Interfaces\r\n// ============================================================================\r\n\r\n/**\r\n * YouTube Music API options\r\n */\r\nexport interface YouTubeMusicAPIOptions {\r\n    timeout?: number;\r\n    retries?: number;\r\n    cookies?: string;\r\n    location?: string;\r\n}\r\n\r\n/**\r\n * Request options\r\n */\r\nexport interface RequestOptions extends RequestInit {\r\n    headers?: Record<string, string>;\r\n}\r\n\r\n/**\r\n * Search parameters\r\n */\r\nexport interface SearchParams {\r\n    query: string;\r\n    category?: SearchCategory | null;\r\n}\r\n\r\n/**\r\n * Stream parameters\r\n */\r\nexport interface StreamParams {\r\n    quality?: string | null;\r\n}\r\n\r\n/**\r\n * Query parameters\r\n */\r\nexport interface QueryParams {\r\n    [key: string]: any;\r\n}\r\n\r\n// ============================================================================\r\n// YouTube Music API Class\r\n// ============================================================================\r\n\r\n/**\r\n * Main YouTube Music API client class\r\n */\r\nexport class YouTubeMusicAPI {\r\n    public readonly baseUrl: string;\r\n    public readonly options: {\r\n        timeout: number;\r\n        retries: number;\r\n    };\r\n    public cookies: string | null;\r\n    public location: string;\r\n\r\n    constructor(baseUrl: string = '', options: YouTubeMusicAPIOptions = {}) {\r\n        this.baseUrl = baseUrl.replace(/\\/$/, ''); // Remove trailing slash\r\n        this.options = {\r\n            timeout: 30000,\r\n            retries: 3,\r\n            ...options\r\n        };\r\n        this.cookies = options.cookies || null;\r\n        this.location = options.location || 'US';\r\n    }\r\n\r\n    /**\r\n     * Set authentication cookies\r\n     * @param cookies - Base64 encoded YouTube cookies\r\n     */\r\n    public setCookies(cookies: string): void {\r\n        this.cookies = cookies;\r\n    }\r\n\r\n    /**\r\n     * Set geographical location\r\n     * @param location - Location code (e.g., 'US', 'GB', 'DE')\r\n     */\r\n    public setLocation(location: string): void {\r\n        this.location = location;\r\n    }\r\n\r\n    /**\r\n     * Build query parameters for API requests\r\n     * @param params - Additional parameters\r\n     * @returns Query string\r\n     */\r\n    public buildQueryParams(params: QueryParams = {}): string {\r\n        const queryParams = new URLSearchParams();\r\n\r\n        if (this.cookies) {\r\n            queryParams.append('cookies', this.cookies);\r\n        }\r\n\r\n        if (this.location) {\r\n            queryParams.append('location', this.location);\r\n        }\r\n\r\n        // Add additional parameters\r\n        Object.entries(params).forEach(([key, value]) => {\r\n            if (value !== null && value !== undefined) {\r\n                queryParams.append(key, value);\r\n            }\r\n        });\r\n\r\n        return queryParams.toString();\r\n    }\r\n\r\n    /**\r\n     * Make HTTP request with error handling and retries\r\n     * @param endpoint - API endpoint\r\n     * @param options - Request options\r\n     * @returns Response data\r\n     */\r\n    public async request(endpoint: string, options: RequestOptions = {}): Promise<any> {\r\n        const url = `${this.baseUrl}${endpoint}`;\r\n        const config: RequestInit = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                ...options.headers\r\n            },\r\n            ...options\r\n        };\r\n\r\n        let lastError: Error;\r\n        for (let attempt = 1; attempt <= this.options.retries; attempt++) {\r\n            try {\r\n                const controller = new AbortController();\r\n                const timeoutId = setTimeout(() => controller.abort(), this.options.timeout);\r\n\r\n                const response = await fetch(url, {\r\n                    ...config,\r\n                    signal: controller.signal\r\n                });\r\n\r\n                clearTimeout(timeoutId);\r\n\r\n                if (!response.ok) {\r\n                    const errorData = await response.json().catch(() => ({}));\r\n                    throw new Error(errorData.error || `HTTP ${response.status}: ${response.statusText}`);\r\n                }\r\n\r\n                return await response.json();\r\n            } catch (error) {\r\n                lastError = error as Error;\r\n                if (attempt === this.options.retries) {\r\n                    throw error;\r\n                }\r\n                // Wait before retrying (exponential backoff)\r\n                await new Promise(resolve => setTimeout(resolve, Math.pow(2, attempt) * 1000));\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get health and version information\r\n     * @returns Health status and version information\r\n     */\r\n    public async getHealth(): Promise<HealthResponse> {\r\n        const data = await this.request('/api');\r\n        return new HealthResponse(\r\n            data.status,\r\n            data.version,\r\n            data.name,\r\n            data.timestamp,\r\n            data.runtime,\r\n            data.environment\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Search for content on YouTube Music\r\n     * @param query - Search query\r\n     * @param category - Optional category filter\r\n     * @returns Search results\r\n     */\r\n    public async search(query: string, category: SearchCategory | null = null): Promise<SearchResponse> {\r\n        const params: SearchParams = { query };\r\n        if (category) {\r\n            params.category = category;\r\n        }\r\n        const queryString = this.buildQueryParams(params);\r\n        const data = await this.request(`/api/search?${queryString}`);\r\n        \r\n        // Convert raw results to proper SearchResult objects\r\n        const results = data.results.map((result: any) => {\r\n            switch (result.type) {\r\n                case 'SongSearchResult':\r\n                    return new SongSearchResult(\r\n                        result.title,\r\n                        result.id,\r\n                        result.artists || [],\r\n                        result.album || null,\r\n                        result.duration || '',\r\n                        result.isExplicit || false,\r\n                        result.playsInfo || '',\r\n                        result.radio || null,\r\n                        result.thumbnails || []\r\n                    );\r\n                case 'VideoSearchResult':\r\n                    return new VideoSearchResult(\r\n                        result.title,\r\n                        result.id,\r\n                        result.artists || [],\r\n                        result.duration || '',\r\n                        result.isExplicit || false,\r\n                        result.playsInfo || '',\r\n                        result.radio || null,\r\n                        result.thumbnails || []\r\n                    );\r\n                case 'AlbumSearchResult':\r\n                    return new AlbumSearchResult(\r\n                        result.title,\r\n                        result.browseId,\r\n                        result.artists || [],\r\n                        result.year || '',\r\n                        result.songCount || 0,\r\n                        result.thumbnails || []\r\n                    );\r\n                case 'ArtistSearchResult':\r\n                    return new ArtistSearchResult(\r\n                        result.name,\r\n                        result.browseId,\r\n                        result.subscribers || '',\r\n                        result.songCount || 0,\r\n                        result.thumbnails || []\r\n                    );\r\n                default:\r\n                    return result; // Return as-is for unknown types\r\n            }\r\n        });\r\n\r\n        return new SearchResponse(\r\n            results,\r\n            data.totalCount,\r\n            data.query,\r\n            data.category\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get detailed information about a song or video\r\n     * @param id - YouTube video/song ID\r\n     * @returns Song/video information\r\n     */\r\n    public async getSongInfo(id: string): Promise<SongVideoInfoResponse> {\r\n        const queryString = this.buildQueryParams();\r\n        const data = await this.request(`/api/song/${id}?${queryString}`);\r\n        \r\n        const songInfo = new SongVideoInfo(\r\n            data.title || data.name,\r\n            data.id,\r\n            data.browseId || '',\r\n            data.description || '',\r\n            data.artists || [],\r\n            data.album || null,\r\n            data.duration || '',\r\n            data.radio || null,\r\n            data.playabilityStatus || { status: 'OK' },\r\n            data.isRatingsAllowed || false,\r\n            data.isPrivate || false,\r\n            data.isUnlisted || false,\r\n            data.isLiveContent || false,\r\n            data.isFamilyFriendly || false,\r\n            data.isExplicit || false,\r\n            data.viewsCount || 0,\r\n            data.publishedAt || '',\r\n            data.uploadedAt || '',\r\n            data.playbackTracking || null,\r\n            data.thumbnails || [],\r\n            data.tags || []\r\n        );\r\n\r\n        return new SongVideoInfoResponse(\r\n            songInfo,\r\n            data.streamingData,\r\n            data.lyrics\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get streaming data for a song or video\r\n     * @param id - YouTube video/song ID\r\n     * @returns Streaming data\r\n     */\r\n    public async getStreamingData(id: string): Promise<StreamingData> {\r\n        const queryString = this.buildQueryParams();\r\n        return await this.request(`/api/streaming/${id}?${queryString}`);\r\n    }\r\n\r\n    /**\r\n     * Get audio stream URL for a song or video\r\n     * @param id - YouTube video/song ID\r\n     * @param quality - Audio quality preference\r\n     * @returns Audio stream URL\r\n     */\r\n    public getAudioStreamUrl(id: string, quality: string | null = null): string {\r\n        const params: StreamParams = {};\r\n        if (quality) {\r\n            params.quality = quality;\r\n        }\r\n        const queryString = this.buildQueryParams(params);\r\n        return `${this.baseUrl}/api/stream/${id}?${queryString}`;\r\n    }\r\n\r\n    /**\r\n     * Get album information\r\n     * @param browseId - Album browse ID\r\n     * @returns Album information\r\n     */\r\n    public async getAlbumInfo(browseId: string): Promise<AlbumInfo> {\r\n        const queryString = this.buildQueryParams();\r\n        const data = await this.request(`/api/album/${browseId}?${queryString}`);\r\n        \r\n        return new AlbumInfo(\r\n            data.name,\r\n            data.id,\r\n            data.description,\r\n            data.artists || [],\r\n            data.duration || '',\r\n            data.songCount || 0,\r\n            data.releaseYear || 0,\r\n            data.isSingle || false,\r\n            data.isEp || false,\r\n            data.thumbnails || [],\r\n            data.songs || []\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get artist information\r\n     * @param browseId - Artist browse ID\r\n     * @returns Artist information\r\n     */\r\n    public async getArtistInfo(browseId: string): Promise<ArtistInfo> {\r\n        const queryString = this.buildQueryParams();\r\n        const data = await this.request(`/api/artist/${browseId}?${queryString}`);\r\n        \r\n        return new ArtistInfo(\r\n            data.name,\r\n            data.id,\r\n            data.description,\r\n            data.subscribers || '',\r\n            data.songCount || 0,\r\n            data.albumCount || 0,\r\n            data.thumbnails || [],\r\n            data.songs || [],\r\n            data.albums || []\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get user's complete library (requires authentication)\r\n     * @returns User's library\r\n     */\r\n    public async getLibrary(): Promise<LibraryResponse> {\r\n        const queryString = this.buildQueryParams();\r\n        const data = await this.request(`/api/library?${queryString}`);\r\n        \r\n        return new LibraryResponse(\r\n            data.songs || [],\r\n            data.albums || [],\r\n            data.artists || [],\r\n            data.subscriptions || [],\r\n            data.podcasts || [],\r\n            data.playlists || []\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get user's library songs (requires authentication)\r\n     * @returns User's library songs\r\n     */\r\n    public async getLibrarySongs(): Promise<LibrarySongsResponse> {\r\n        const queryString = this.buildQueryParams();\r\n        const data = await this.request(`/api/library/songs?${queryString}`);\r\n        \r\n        return new LibrarySongsResponse(\r\n            data.songs || [],\r\n            data.totalCount || 0\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get user's library albums (requires authentication)\r\n     * @returns User's library albums\r\n     */\r\n    public async getLibraryAlbums(): Promise<LibraryAlbumsResponse> {\r\n        const queryString = this.buildQueryParams();\r\n        const data = await this.request(`/api/library/albums?${queryString}`);\r\n        \r\n        return new LibraryAlbumsResponse(\r\n            data.albums || [],\r\n            data.totalCount || 0\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get user's library artists (requires authentication)\r\n     * @returns User's library artists\r\n     */\r\n    public async getLibraryArtists(): Promise<LibraryArtistsResponse> {\r\n        const queryString = this.buildQueryParams();\r\n        const data = await this.request(`/api/library/artists?${queryString}`);\r\n        \r\n        return new LibraryArtistsResponse(\r\n            data.artists || [],\r\n            data.totalCount || 0\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get user's library subscriptions (requires authentication)\r\n     * @returns User's library subscriptions\r\n     */\r\n    public async getLibrarySubscriptions(): Promise<LibrarySubscriptionsResponse> {\r\n        const queryString = this.buildQueryParams();\r\n        const data = await this.request(`/api/library/subscriptions?${queryString}`);\r\n        \r\n        return new LibrarySubscriptionsResponse(\r\n            data.subscriptions || [],\r\n            data.totalCount || 0\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get user's library podcasts (requires authentication)\r\n     * @returns User's library podcasts\r\n     */\r\n    public async getLibraryPodcasts(): Promise<LibraryPodcastsResponse> {\r\n        const queryString = this.buildQueryParams();\r\n        const data = await this.request(`/api/library/podcasts?${queryString}`);\r\n        \r\n        return new LibraryPodcastsResponse(\r\n            data.podcasts || [],\r\n            data.totalCount || 0\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get user's library playlists (requires authentication)\r\n     * @returns User's library playlists\r\n     */\r\n    public async getLibraryPlaylists(): Promise<LibraryPlaylistsResponse> {\r\n        const queryString = this.buildQueryParams();\r\n        const data = await this.request(`/api/library/playlists?${queryString}`);\r\n        \r\n        return new LibraryPlaylistsResponse(\r\n            data.playlists || [],\r\n            data.totalCount || 0\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get playlist information by ID\r\n     * @param id - Playlist ID\r\n     * @returns Playlist information\r\n     */\r\n    public async getPlaylist(id: string): Promise<PlaylistResponse> {\r\n        const queryString = this.buildQueryParams();\r\n        const data = await this.request(`/api/playlist/${id}?${queryString}`);\r\n        \r\n        return new PlaylistResponse(\r\n            data.id,\r\n            data.browseId,\r\n            data.playlist,\r\n            data.songs || [],\r\n            data.totalSongs || 0\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Clear the session cache\r\n     * @returns Success message\r\n     */\r\n    public async clearCache(): Promise<any> {\r\n        return this.request('/api/cache/clear', { method: 'POST' });\r\n    }\r\n\r\n    /**\r\n     * Get session cache statistics\r\n     * @returns Cache statistics\r\n     */\r\n    public async getCacheStats(): Promise<any> {\r\n        return this.request('/api/cache/stats');\r\n    }\r\n}\r\n\r\n// ============================================================================\r\n// Default export for ES modules\r\n// ============================================================================\r\n\r\nexport default YouTubeMusicAPI;\r\n","import { NOTIFICATION_ICONS, DEFAULTS, NotificationType } from './constants';\r\n\r\n// Notification System\r\nexport class NotificationManager {\r\n    private notificationCounter: number = 0;\r\n\r\n    constructor() {\r\n        this.notificationCounter = 0;\r\n    }\r\n\r\n    showNotification(type: NotificationType, title: string, message: string, duration: number = DEFAULTS.NOTIFICATION_DURATION): string | null {\r\n        const container = document.getElementById('notificationContainer');\r\n        if (!container) {\r\n            console.error('Notification container not found');\r\n            return null;\r\n        }\r\n\r\n        const notificationId = `notification-${++this.notificationCounter}`;\r\n\r\n        const notification = document.createElement('div');\r\n        notification.className = `notification ${type}`;\r\n        notification.id = notificationId;\r\n\r\n        // Create notification icon\r\n        const iconDiv = document.createElement('div');\r\n        iconDiv.className = 'notification-icon';\r\n        iconDiv.textContent = NOTIFICATION_ICONS[type] || NOTIFICATION_ICONS.info;\r\n        notification.appendChild(iconDiv);\r\n\r\n        // Create notification content\r\n        const contentDiv = document.createElement('div');\r\n        contentDiv.className = 'notification-content';\r\n\r\n        const titleDiv = document.createElement('div');\r\n        titleDiv.className = 'notification-title';\r\n        titleDiv.textContent = title;\r\n        contentDiv.appendChild(titleDiv);\r\n\r\n        const messageDiv = document.createElement('div');\r\n        messageDiv.className = 'notification-message';\r\n        messageDiv.textContent = message;\r\n        contentDiv.appendChild(messageDiv);\r\n\r\n        notification.appendChild(contentDiv);\r\n\r\n        // Create close button\r\n        const closeButton = document.createElement('button');\r\n        closeButton.className = 'notification-close';\r\n        closeButton.textContent = '×';\r\n        closeButton.onclick = () => window.notificationManager.removeNotification(notificationId);\r\n        notification.appendChild(closeButton);\r\n\r\n        container.appendChild(notification);\r\n\r\n        // Trigger animation\r\n        setTimeout(() => {\r\n            notification.classList.add('show');\r\n        }, 10);\r\n\r\n        // Auto-remove after duration\r\n        let timeoutId: number | null = null;\r\n        if (duration > 0) {\r\n            timeoutId = window.setTimeout(() => {\r\n                this.removeNotification(notificationId);\r\n            }, duration);\r\n        }\r\n\r\n        // Store timeout ID for potential cleanup\r\n        notification.dataset.timeoutId = timeoutId?.toString() || '';\r\n\r\n        return notificationId;\r\n    }\r\n\r\n    removeNotification(notificationId: string): void {\r\n        const notification = document.getElementById(notificationId);\r\n        if (notification) {\r\n            // Clear the timeout if it exists\r\n            if (notification.dataset.timeoutId) {\r\n                clearTimeout(parseInt(notification.dataset.timeoutId));\r\n                delete notification.dataset.timeoutId;\r\n            }\r\n\r\n            notification.classList.remove('show');\r\n            setTimeout(() => {\r\n                if (notification.parentNode) {\r\n                    notification.parentNode.removeChild(notification);\r\n                }\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    showErrorNotification(message: string): string | null {\r\n        return this.showNotification('error', 'Error', message, DEFAULTS.ERROR_NOTIFICATION_DURATION);\r\n    }\r\n\r\n    showSuccessNotification(message: string): string | null {\r\n        return this.showNotification('success', 'Success', message, DEFAULTS.SUCCESS_NOTIFICATION_DURATION);\r\n    }\r\n\r\n    showWarningNotification(message: string): string | null {\r\n        return this.showNotification('warning', 'Warning', message, DEFAULTS.WARNING_NOTIFICATION_DURATION);\r\n    }\r\n\r\n    showInfoNotification(message: string): string | null {\r\n        return this.showNotification('info', 'Info', message, DEFAULTS.INFO_NOTIFICATION_DURATION);\r\n    }\r\n}\r\n\r\n// Create global instance\r\nwindow.notificationManager = new NotificationManager();\r\n\r\n// Make functions globally accessible for onclick handlers\r\nwindow.removeNotification = (notificationId: string) => window.notificationManager.removeNotification(notificationId);\r\n","import { PLAYER_STATES, REPEAT_MODES, DEFAULTS, PlayerState, RepeatMode } from './constants';\r\nimport { formatDuration } from './utils';\r\n\r\n// Player Manager\r\nexport class PlayerManager {\r\n    private currentState: PlayerState = PLAYER_STATES.STOPPED;\r\n    private currentVolume: number = DEFAULTS.VOLUME;\r\n    private repeatMode: RepeatMode = REPEAT_MODES.NONE;\r\n    private isShuffled: boolean = false;\r\n    private currentPlaylist: any[] = [];\r\n    private currentIndex: number = -1;\r\n    private originalPlaylist: any[] = [];\r\n\r\n    constructor() {\r\n        this.init();\r\n    }\r\n\r\n    init(): void {\r\n        this.setupEventListeners();\r\n        this.restoreState();\r\n        this.updateUI();\r\n    }\r\n\r\n    setupEventListeners(): void {\r\n        // Player controls\r\n        const playButton = document.getElementById('playButton');\r\n        const pauseButton = document.getElementById('pauseButton');\r\n        const stopButton = document.getElementById('stopButton');\r\n        const nextButton = document.getElementById('nextButton');\r\n        const prevButton = document.getElementById('prevButton');\r\n        const volumeSlider = document.getElementById('volumeSlider') as HTMLInputElement;\r\n        const repeatButton = document.getElementById('repeatButton');\r\n        const shuffleButton = document.getElementById('shuffleButton');\r\n\r\n        if (playButton) playButton.addEventListener('click', () => this.resumeSong());\r\n        if (pauseButton) pauseButton.addEventListener('click', () => this.pauseSong());\r\n        if (stopButton) stopButton.addEventListener('click', () => this.stopSong());\r\n        if (nextButton) nextButton.addEventListener('click', () => this.nextSong());\r\n        if (prevButton) prevButton.addEventListener('click', () => this.previousSong());\r\n\r\n        if (volumeSlider) {\r\n            volumeSlider.addEventListener('input', (e) => {\r\n                const target = e.target as HTMLInputElement;\r\n                this.setVolume(parseFloat(target.value));\r\n            });\r\n        }\r\n\r\n        if (repeatButton) repeatButton.addEventListener('click', () => this.cycleRepeatMode());\r\n        if (shuffleButton) shuffleButton.addEventListener('click', () => this.toggleShuffle());\r\n\r\n        // Audio element events\r\n        if (window.currentAudio) {\r\n            window.currentAudio.addEventListener('ended', () => this.handleSongEnd());\r\n            window.currentAudio.addEventListener('timeupdate', () => this.updateProgress());\r\n            window.currentAudio.addEventListener('loadedmetadata', () => this.updateDuration());\r\n        }\r\n    }\r\n\r\n    playSong(id: string, title: string, artist: string, thumbnail: string, playlist?: any[], index?: number): void {\r\n        this.loadSong(id, title, artist, thumbnail, playlist, index);\r\n        this.resumeSong();\r\n    }\r\n\r\n    loadSong(id: string, title: string, artist: string, thumbnail: string, playlist?: any[], index?: number): void {\r\n        // Stop current audio\r\n        if (window.currentAudio) {\r\n            window.currentAudio.pause();\r\n            window.currentAudio.currentTime = 0;\r\n        }\r\n\r\n        // Create new audio element\r\n        const audio = new Audio();\r\n        audio.src = `/api/stream/${id}`;\r\n        audio.volume = this.currentVolume;\r\n        audio.preload = 'metadata';\r\n\r\n        // Set up event listeners\r\n        audio.addEventListener('ended', () => this.handleSongEnd());\r\n        audio.addEventListener('timeupdate', () => this.updateProgress());\r\n        audio.addEventListener('loadedmetadata', () => this.updateDuration());\r\n        audio.addEventListener('error', (e) => this.handleAudioError(e));\r\n\r\n        window.currentAudio = audio;\r\n        window.currentSongInfo = { id, title, artist, thumbnail };\r\n\r\n        // Update playlist info\r\n        if (playlist) {\r\n            this.currentPlaylist = playlist;\r\n            this.originalPlaylist = [...playlist];\r\n            this.currentIndex = index !== undefined ? index : -1;\r\n        }\r\n\r\n        // Update UI\r\n        this.updateSongInfo(title, artist, thumbnail);\r\n        this.currentState = PLAYER_STATES.STOPPED;\r\n        this.updateUI();\r\n\r\n        // Update info panel\r\n        if (window.rightSidebarManager) {\r\n            window.rightSidebarManager.updateInfoPanel(window.currentSongInfo);\r\n        }\r\n    }\r\n\r\n    pauseSong(): void {\r\n        if (window.currentAudio && this.currentState === PLAYER_STATES.PLAYING) {\r\n            window.currentAudio.pause();\r\n            this.currentState = PLAYER_STATES.PAUSED;\r\n            this.updateUI();\r\n        }\r\n    }\r\n\r\n    resumeSong(): void {\r\n        if (window.currentAudio && this.currentState !== PLAYER_STATES.PLAYING) {\r\n            window.currentAudio.play().then(() => {\r\n                this.currentState = PLAYER_STATES.PLAYING;\r\n                this.updateUI();\r\n            }).catch(error => {\r\n                console.error('Error playing audio:', error);\r\n                if (window.notificationManager) {\r\n                    window.notificationManager.showErrorNotification('Failed to play audio');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    stopSong(): void {\r\n        if (window.currentAudio) {\r\n            window.currentAudio.pause();\r\n            window.currentAudio.currentTime = 0;\r\n            this.currentState = PLAYER_STATES.STOPPED;\r\n            this.updateUI();\r\n        }\r\n    }\r\n\r\n    nextSong(): void {\r\n        if (this.currentPlaylist.length > 0 && this.currentIndex < this.currentPlaylist.length - 1) {\r\n            this.currentIndex++;\r\n            const song = this.currentPlaylist[this.currentIndex];\r\n            this.playSong(\r\n                song.id || song.videoId,\r\n                song.name || song.title,\r\n                song.artists && song.artists.length > 0 ? song.artists[0].name : '',\r\n                song.thumbnails && song.thumbnails.length > 0 ? song.thumbnails[0].url : '',\r\n                this.currentPlaylist,\r\n                this.currentIndex\r\n            );\r\n        }\r\n    }\r\n\r\n    previousSong(): void {\r\n        if (this.currentPlaylist.length > 0 && this.currentIndex > 0) {\r\n            this.currentIndex--;\r\n            const song = this.currentPlaylist[this.currentIndex];\r\n            this.playSong(\r\n                song.id || song.videoId,\r\n                song.name || song.title,\r\n                song.artists && song.artists.length > 0 ? song.artists[0].name : '',\r\n                song.thumbnails && song.thumbnails.length > 0 ? song.thumbnails[0].url : '',\r\n                this.currentPlaylist,\r\n                this.currentIndex\r\n            );\r\n        }\r\n    }\r\n\r\n    setVolume(volume: number): void {\r\n        this.currentVolume = Math.max(0, Math.min(1, volume));\r\n        if (window.currentAudio) {\r\n            window.currentAudio.volume = this.currentVolume;\r\n        }\r\n        this.updateVolumeUI();\r\n        this.saveState();\r\n    }\r\n\r\n    setRepeatMode(mode: RepeatMode): void {\r\n        this.repeatMode = mode;\r\n        this.updateRepeatUI();\r\n        this.saveState();\r\n    }\r\n\r\n    cycleRepeatMode(): void {\r\n        const modes = [REPEAT_MODES.NONE, REPEAT_MODES.ALL, REPEAT_MODES.ONE];\r\n        const currentIndex = modes.indexOf(this.repeatMode);\r\n        const nextIndex = (currentIndex + 1) % modes.length;\r\n        this.setRepeatMode(modes[nextIndex]);\r\n    }\r\n\r\n    toggleShuffle(): void {\r\n        this.isShuffled = !this.isShuffled;\r\n        if (this.isShuffled && this.currentPlaylist.length > 0) {\r\n            this.originalPlaylist = [...this.currentPlaylist];\r\n            this.shufflePlaylist();\r\n        } else if (!this.isShuffled && this.originalPlaylist.length > 0) {\r\n            this.currentPlaylist = [...this.originalPlaylist];\r\n        }\r\n        this.updateShuffleUI();\r\n        this.saveState();\r\n    }\r\n\r\n    shufflePlaylist(): void {\r\n        for (let i = this.currentPlaylist.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [this.currentPlaylist[i], this.currentPlaylist[j]] = [this.currentPlaylist[j], this.currentPlaylist[i]];\r\n        }\r\n    }\r\n\r\n    handleSongEnd(): void {\r\n        switch (this.repeatMode) {\r\n            case REPEAT_MODES.ONE:\r\n                // Replay current song\r\n                if (window.currentAudio) {\r\n                    window.currentAudio.currentTime = 0;\r\n                    window.currentAudio.play();\r\n                }\r\n                break;\r\n            case REPEAT_MODES.ALL:\r\n                // Play next song or restart playlist\r\n                if (this.currentIndex < this.currentPlaylist.length - 1) {\r\n                    this.nextSong();\r\n                } else {\r\n                    this.currentIndex = -1;\r\n                    this.nextSong();\r\n                }\r\n                break;\r\n            case REPEAT_MODES.NONE:\r\n            default:\r\n                // Play next song if available\r\n                if (this.currentIndex < this.currentPlaylist.length - 1) {\r\n                    this.nextSong();\r\n                } else {\r\n                    this.stopSong();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleAudioError(error: Event): void {\r\n        console.error('Audio error:', error);\r\n        if (window.notificationManager) {\r\n            window.notificationManager.showErrorNotification('Failed to load audio');\r\n        }\r\n    }\r\n\r\n    updateProgress(): void {\r\n        if (!window.currentAudio) return;\r\n\r\n        const progressBar = document.getElementById('progressBar') as HTMLInputElement;\r\n        const currentTime = document.getElementById('currentTime');\r\n        const duration = document.getElementById('duration');\r\n\r\n        if (progressBar) {\r\n            progressBar.value = window.currentAudio.currentTime.toString();\r\n            progressBar.max = window.currentAudio.duration.toString();\r\n        }\r\n\r\n        if (currentTime) {\r\n            currentTime.textContent = formatDuration(window.currentAudio.currentTime);\r\n        }\r\n\r\n        if (duration) {\r\n            duration.textContent = formatDuration(window.currentAudio.duration);\r\n        }\r\n    }\r\n\r\n    updateDuration(): void {\r\n        if (!window.currentAudio) return;\r\n\r\n        const progressBar = document.getElementById('progressBar') as HTMLInputElement;\r\n        const duration = document.getElementById('duration');\r\n\r\n        if (progressBar) {\r\n            progressBar.max = window.currentAudio.duration.toString();\r\n        }\r\n\r\n        if (duration) {\r\n            duration.textContent = formatDuration(window.currentAudio.duration);\r\n        }\r\n    }\r\n\r\n    updateSongInfo(title: string, artist: string, thumbnail: string): void {\r\n        const songTitle = document.getElementById('songTitle');\r\n        const songArtist = document.getElementById('songArtist');\r\n        const songThumbnail = document.getElementById('songThumbnail') as HTMLImageElement;\r\n\r\n        if (songTitle) songTitle.textContent = title;\r\n        if (songArtist) songArtist.textContent = artist;\r\n        if (songThumbnail) songThumbnail.src = thumbnail;\r\n    }\r\n\r\n    updateUI(): void {\r\n        const playButton = document.getElementById('playButton');\r\n        const pauseButton = document.getElementById('pauseButton');\r\n\r\n        if (playButton) playButton.style.display = this.currentState === PLAYER_STATES.PLAYING ? 'none' : 'block';\r\n        if (pauseButton) pauseButton.style.display = this.currentState === PLAYER_STATES.PLAYING ? 'block' : 'none';\r\n    }\r\n\r\n    updateVolumeUI(): void {\r\n        const volumeSlider = document.getElementById('volumeSlider') as HTMLInputElement;\r\n        if (volumeSlider) {\r\n            volumeSlider.value = this.currentVolume.toString();\r\n        }\r\n    }\r\n\r\n    updateRepeatUI(): void {\r\n        const repeatButton = document.getElementById('repeatButton');\r\n        if (repeatButton) {\r\n            repeatButton.textContent = this.repeatMode === REPEAT_MODES.ONE ? '🔂' :\r\n                this.repeatMode === REPEAT_MODES.ALL ? '🔁' : '↩️';\r\n        }\r\n    }\r\n\r\n    updateShuffleUI(): void {\r\n        const shuffleButton = document.getElementById('shuffleButton');\r\n        if (shuffleButton) {\r\n            shuffleButton.classList.toggle('active', this.isShuffled);\r\n        }\r\n    }\r\n\r\n    addMobileTouchHandlers(): void {\r\n        // Add touch handlers for mobile devices\r\n        const progressBar = document.getElementById('progressBar') as HTMLInputElement;\r\n        if (progressBar) {\r\n            progressBar.addEventListener('input', (e) => {\r\n                const target = e.target as HTMLInputElement;\r\n                if (window.currentAudio) {\r\n                    window.currentAudio.currentTime = parseFloat(target.value);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    enhancePlayerControls(): void {\r\n        // Add keyboard shortcuts\r\n        document.addEventListener('keydown', (e) => {\r\n            if (e.target && (e.target as HTMLElement).tagName === 'INPUT') return;\r\n\r\n            switch (e.code) {\r\n                case 'Space':\r\n                    e.preventDefault();\r\n                    if (this.currentState === PLAYER_STATES.PLAYING) {\r\n                        this.pauseSong();\r\n                    } else {\r\n                        this.resumeSong();\r\n                    }\r\n                    break;\r\n                case 'ArrowRight':\r\n                    e.preventDefault();\r\n                    this.nextSong();\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    e.preventDefault();\r\n                    this.previousSong();\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    setCurrentPlaylist(playlistId: string): void {\r\n        // Store current playlist ID for highlighting\r\n        this.currentPlaylistId = playlistId;\r\n    }\r\n\r\n    highlightCurrentPlaylist(): void {\r\n        // Highlight current playlist in sidebar\r\n        const playlistElements = document.querySelectorAll('[data-playlist-id]');\r\n        playlistElements.forEach(element => {\r\n            element.classList.remove('current-playlist');\r\n            if (element.getAttribute('data-playlist-id') === this.currentPlaylistId) {\r\n                element.classList.add('current-playlist');\r\n            }\r\n        });\r\n    }\r\n\r\n    saveState(): void {\r\n        localStorage.setItem('playerState', JSON.stringify({\r\n            volume: this.currentVolume,\r\n            repeatMode: this.repeatMode,\r\n            isShuffled: this.isShuffled\r\n        }));\r\n    }\r\n\r\n    restoreState(): void {\r\n        try {\r\n            const savedState = localStorage.getItem('playerState');\r\n            if (savedState) {\r\n                const state = JSON.parse(savedState);\r\n                this.currentVolume = state.volume || DEFAULTS.VOLUME;\r\n                this.repeatMode = state.repeatMode || REPEAT_MODES.NONE;\r\n                this.isShuffled = state.isShuffled || false;\r\n            }\r\n        } catch (error) {\r\n            console.error('Error restoring player state:', error);\r\n        }\r\n    }\r\n\r\n    private currentPlaylistId: string = '';\r\n}\r\n\r\n// Create global instance\r\nwindow.playerManager = new PlayerManager();\r\n\r\n// Global functions for onclick handlers\r\nwindow.playSong = (id: string, title: string, artist: string, thumbnail: string, playlist?: any[], index?: number) =>\r\n    window.playerManager.playSong(id, title, artist, thumbnail, playlist, index);\r\nwindow.loadSong = (id: string, title: string, artist: string, thumbnail: string, playlist?: any[], index?: number) =>\r\n    window.playerManager.loadSong(id, title, artist, thumbnail, playlist, index);\r\nwindow.pauseSong = () => window.playerManager.pauseSong();\r\nwindow.resumeSong = () => window.playerManager.resumeSong();\r\nwindow.stopSong = () => window.playerManager.stopSong();\r\nwindow.nextSong = () => window.playerManager.nextSong();\r\nwindow.previousSong = () => window.playerManager.previousSong();\r\nwindow.setVolume = (volume: number) => window.playerManager.setVolume(volume);\r\nwindow.setRepeatMode = (mode: RepeatMode) => window.playerManager.setRepeatMode(mode);\r\nwindow.toggleShuffle = () => window.playerManager.toggleShuffle();\r\n","import { DEFAULTS, RIGHT_SIDEBAR_TABS, RightSidebarTab } from './constants';\r\n\r\n// Right Sidebar Manager\r\nexport class RightSidebarManager {\r\n    private isVisible: boolean = false;\r\n    private currentTab: RightSidebarTab = RIGHT_SIDEBAR_TABS.INFO;\r\n    private currentWidth: number = DEFAULTS.RIGHT_SIDEBAR_WIDTH;\r\n    private isResizing: boolean = false;\r\n    private startX: number = 0;\r\n    private startWidth: number = 0;\r\n\r\n    constructor() {\r\n        this.init();\r\n    }\r\n\r\n    init(): void {\r\n        this.setupEventListeners();\r\n        this.restoreState();\r\n        this.updateLayout();\r\n    }\r\n\r\n    setupEventListeners(): void {\r\n        // Resize handle\r\n        const resizeHandle = document.getElementById('rightSidebarResizeHandle');\r\n        if (resizeHandle) {\r\n            resizeHandle.addEventListener('mousedown', (e: MouseEvent) => {\r\n                this.startResize(e);\r\n            });\r\n        }\r\n\r\n        // Tab switching\r\n        const infoTab = document.getElementById('infoTab');\r\n        const lyricsTab = document.getElementById('lyricsTab');\r\n\r\n        if (infoTab) {\r\n            infoTab.addEventListener('click', () => this.switchTab(RIGHT_SIDEBAR_TABS.INFO));\r\n        }\r\n        if (lyricsTab) {\r\n            lyricsTab.addEventListener('click', () => this.switchTab(RIGHT_SIDEBAR_TABS.LYRICS));\r\n        }\r\n\r\n        // Close button\r\n        const closeButton = document.getElementById('rightSidebarClose');\r\n        if (closeButton) {\r\n            closeButton.addEventListener('click', () => this.hide());\r\n        }\r\n\r\n        // Global resize events\r\n        document.addEventListener('mousemove', (e: MouseEvent) => {\r\n            if (this.isResizing) {\r\n                this.handleResize(e);\r\n            }\r\n        });\r\n\r\n        document.addEventListener('mouseup', () => {\r\n            if (this.isResizing) {\r\n                this.stopResize();\r\n            }\r\n        });\r\n    }\r\n\r\n    startResize(e: MouseEvent): void {\r\n        this.isResizing = true;\r\n        this.startX = e.clientX;\r\n        this.startWidth = this.currentWidth;\r\n        document.body.style.cursor = 'col-resize';\r\n        e.preventDefault();\r\n    }\r\n\r\n    handleResize(e: MouseEvent): void {\r\n        if (!this.isResizing) return;\r\n\r\n        const deltaX = this.startX - e.clientX;\r\n        const newWidth = Math.max(\r\n            DEFAULTS.RIGHT_SIDEBAR_MIN_WIDTH,\r\n            Math.min(DEFAULTS.RIGHT_SIDEBAR_MAX_WIDTH, this.startWidth + deltaX)\r\n        );\r\n\r\n        this.currentWidth = newWidth;\r\n        this.updateLayout();\r\n    }\r\n\r\n    stopResize(): void {\r\n        this.isResizing = false;\r\n        document.body.style.cursor = '';\r\n        this.saveState();\r\n    }\r\n\r\n    switchTab(tab: RightSidebarTab): void {\r\n        this.currentTab = tab;\r\n        this.updateTabContent();\r\n        this.saveState();\r\n    }\r\n\r\n    updateTabContent(): void {\r\n        const infoContent = document.getElementById('infoContent');\r\n        const lyricsContent = document.getElementById('lyricsContent');\r\n        const infoTab = document.getElementById('infoTab');\r\n        const lyricsTab = document.getElementById('lyricsTab');\r\n\r\n        // Update tab buttons\r\n        if (infoTab) infoTab.classList.toggle('active', this.currentTab === RIGHT_SIDEBAR_TABS.INFO);\r\n        if (lyricsTab) lyricsTab.classList.toggle('active', this.currentTab === RIGHT_SIDEBAR_TABS.LYRICS);\r\n\r\n        // Update content visibility\r\n        if (infoContent) infoContent.style.display = this.currentTab === RIGHT_SIDEBAR_TABS.INFO ? 'block' : 'none';\r\n        if (lyricsContent) lyricsContent.style.display = this.currentTab === RIGHT_SIDEBAR_TABS.LYRICS ? 'block' : 'none';\r\n    }\r\n\r\n    show(): void {\r\n        this.isVisible = true;\r\n        this.updateLayout();\r\n        this.saveState();\r\n    }\r\n\r\n    hide(): void {\r\n        this.isVisible = false;\r\n        this.updateLayout();\r\n        this.saveState();\r\n    }\r\n\r\n    toggle(): void {\r\n        if (this.isVisible) {\r\n            this.hide();\r\n        } else {\r\n            this.show();\r\n        }\r\n    }\r\n\r\n    updateLayout(): void {\r\n        const rightSidebar = document.getElementById('rightSidebar');\r\n        const mainContent = document.getElementById('mainContent');\r\n        const playerBar = document.querySelector('.player-bar');\r\n\r\n        if (!rightSidebar || !mainContent) return;\r\n\r\n        if (this.isVisible) {\r\n            rightSidebar.style.width = `${this.currentWidth}px`;\r\n            rightSidebar.style.display = 'block';\r\n            mainContent.style.marginRight = `${this.currentWidth}px`;\r\n            if (playerBar) {\r\n                (playerBar as HTMLElement).style.marginRight = `${this.currentWidth}px`;\r\n            }\r\n        } else {\r\n            rightSidebar.style.display = 'none';\r\n            mainContent.style.marginRight = '0';\r\n            if (playerBar) {\r\n                (playerBar as HTMLElement).style.marginRight = '0';\r\n            }\r\n        }\r\n    }\r\n\r\n    updateInfoPanel(songInfo: any): void {\r\n        const infoContent = document.getElementById('infoContent');\r\n        if (!infoContent || !songInfo) return;\r\n\r\n        const title = songInfo.name || songInfo.title || 'Unknown Title';\r\n        const artist = songInfo.artists && songInfo.artists.length > 0 ? songInfo.artists[0].name : 'Unknown Artist';\r\n        const album = songInfo.album || 'Unknown Album';\r\n        const duration = songInfo.duration || 'Unknown';\r\n        const thumbnail = songInfo.thumbnails && songInfo.thumbnails.length > 0 ? songInfo.thumbnails[0].url : '';\r\n\r\n        infoContent.innerHTML = `\r\n            <div class=\"song-info\">\r\n                <img src=\"${thumbnail}\" alt=\"${title}\" class=\"song-thumbnail\">\r\n                <h3>${title}</h3>\r\n                <p class=\"artist\">${artist}</p>\r\n                <p class=\"album\">${album}</p>\r\n                <p class=\"duration\">${duration}</p>\r\n            </div>\r\n        `;\r\n\r\n        this.show();\r\n    }\r\n\r\n    updateLyricsPanel(lyrics: string): void {\r\n        const lyricsContent = document.getElementById('lyricsContent');\r\n        if (!lyricsContent) return;\r\n\r\n        lyricsContent.innerHTML = `\r\n            <div class=\"lyrics-content\">\r\n                <pre>${lyrics || 'No lyrics available'}</pre>\r\n            </div>\r\n        `;\r\n\r\n        this.switchTab(RIGHT_SIDEBAR_TABS.LYRICS);\r\n        this.show();\r\n    }\r\n\r\n    clearInfoPanel(): void {\r\n        const infoContent = document.getElementById('infoContent');\r\n        const lyricsContent = document.getElementById('lyricsContent');\r\n\r\n        if (infoContent) infoContent.innerHTML = '';\r\n        if (lyricsContent) lyricsContent.innerHTML = '';\r\n\r\n        this.hide();\r\n    }\r\n\r\n    saveState(): void {\r\n        localStorage.setItem('rightSidebarState', JSON.stringify({\r\n            isVisible: this.isVisible,\r\n            currentTab: this.currentTab,\r\n            currentWidth: this.currentWidth\r\n        }));\r\n    }\r\n\r\n    restoreState(): void {\r\n        try {\r\n            const savedState = localStorage.getItem('rightSidebarState');\r\n            if (savedState) {\r\n                const state = JSON.parse(savedState);\r\n                this.isVisible = state.isVisible || false;\r\n                this.currentTab = state.currentTab || RIGHT_SIDEBAR_TABS.INFO;\r\n                this.currentWidth = state.currentWidth || DEFAULTS.RIGHT_SIDEBAR_WIDTH;\r\n            }\r\n        } catch (error) {\r\n            console.error('Error restoring right sidebar state:', error);\r\n        }\r\n    }\r\n}\r\n\r\n// Create global instance\r\nwindow.rightSidebarManager = new RightSidebarManager();\r\n\r\n// Global functions for onclick handlers\r\nwindow.toggleRightSidebar = () => window.rightSidebarManager.toggle();\r\nwindow.showRightSidebar = () => window.rightSidebarManager.show();\r\nwindow.hideRightSidebar = () => window.rightSidebarManager.hide();\r\nwindow.clearInfoPanel = () => window.rightSidebarManager.clearInfoPanel();\r\n","import YouTubeMusicAPI from '../lib/youtube-music-api-proxy/youtube-music-api-proxy';\r\n\r\n/**\r\n * API Service - Singleton pattern for managing YouTube Music API\r\n * Replaces the old API ready system with a more sensible approach\r\n */\r\nclass APIService {\r\n    private static instance: APIService;\r\n    private api: YouTubeMusicAPI | null = null;\r\n    private isInitialized = false;\r\n    private initPromise: Promise<YouTubeMusicAPI> | null = null;\r\n\r\n    private constructor() { }\r\n\r\n    public static getInstance(): APIService {\r\n        if (!APIService.instance) {\r\n            APIService.instance = new APIService();\r\n        }\r\n        return APIService.instance;\r\n    }\r\n\r\n    /**\r\n     * Initialize the API service\r\n     * @param baseUrl - Base URL for the API (optional)\r\n     * @param options - API options (optional)\r\n     * @returns Promise that resolves to the API instance\r\n     */\r\n    public async initialize(baseUrl: string = '', options: any = {}): Promise<YouTubeMusicAPI> {\r\n        if (this.isInitialized && this.api) {\r\n            return this.api;\r\n        }\r\n\r\n        if (this.initPromise) {\r\n            return this.initPromise;\r\n        }\r\n\r\n        this.initPromise = this.createAPI(baseUrl, options);\r\n        return this.initPromise;\r\n    }\r\n\r\n    /**\r\n     * Get the API instance (must be initialized first)\r\n     * @returns The API instance\r\n     * @throws Error if API is not initialized\r\n     */\r\n    public getAPI(): YouTubeMusicAPI {\r\n        if (!this.api || !this.isInitialized) {\r\n            throw new Error('API not initialized. Call initialize() first.');\r\n        }\r\n        return this.api;\r\n    }\r\n\r\n    /**\r\n     * Check if the API is initialized\r\n     * @returns True if initialized\r\n     */\r\n    public isReady(): boolean {\r\n        return this.isInitialized && this.api !== null;\r\n    }\r\n\r\n    /**\r\n     * Create and test the API instance\r\n     * @param baseUrl - Base URL for the API\r\n     * @param options - API options\r\n     * @returns Promise that resolves to the API instance\r\n     */\r\n    private async createAPI(baseUrl: string, options: any): Promise<YouTubeMusicAPI> {\r\n        try {\r\n            console.log('Creating YouTube Music API...');\r\n\r\n            this.api = new YouTubeMusicAPI(baseUrl, {\r\n                timeout: 30000,\r\n                retries: 3,\r\n                ...options\r\n            });\r\n\r\n            // Test the API to make sure it's working\r\n            try {\r\n                if (this.api.getHealth) {\r\n                    await this.api.getHealth();\r\n                    console.log('YouTube Music API health check passed');\r\n                } else {\r\n                    console.log('YouTube Music API created successfully (no health check available)');\r\n                }\r\n            } catch (error) {\r\n                console.warn('API health check failed, but proceeding anyway:', error);\r\n            }\r\n\r\n            this.isInitialized = true;\r\n            console.log('YouTube Music API is ready and working');\r\n            return this.api;\r\n\r\n        } catch (error) {\r\n            console.error('Error creating YouTube Music API:', error);\r\n            this.initPromise = null;\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset the API service (useful for testing or re-initialization)\r\n     */\r\n    public reset(): void {\r\n        this.api = null;\r\n        this.isInitialized = false;\r\n        this.initPromise = null;\r\n    }\r\n}\r\n\r\n// Export singleton instance\r\nexport const apiService = APIService.getInstance();\r\n\r\n// Export the class for testing purposes\r\nexport { APIService };\r\n\r\n// Default export for convenience\r\nexport default apiService;\r\n","import { SIDEBAR_COLLAPSE_BREAKPOINT, SIDEBAR_STATES, SidebarState } from './constants';\r\n\r\n// Sidebar state management\r\nexport class SidebarManager {\r\n    public isMobile: boolean = false;\r\n    private currentState: SidebarState = SIDEBAR_STATES.EXPANDED;\r\n    public isMobileMenuOpen: boolean = false;\r\n\r\n    constructor() {\r\n        this.isMobile = false;\r\n        this.currentState = SIDEBAR_STATES.EXPANDED;\r\n        this.isMobileMenuOpen = false;\r\n        this.init();\r\n    }\r\n\r\n    init(): void {\r\n        this.updateBreakpoint();\r\n        this.setupEventListeners();\r\n        this.restoreState();\r\n        this.updateLayout();\r\n    }\r\n\r\n    updateBreakpoint(): void {\r\n        this.isMobile = window.innerWidth <= SIDEBAR_COLLAPSE_BREAKPOINT;\r\n    }\r\n\r\n    setupEventListeners(): void {\r\n        // Window resize handler\r\n        window.addEventListener('resize', () => {\r\n            const wasMobile = this.isMobile;\r\n            this.updateBreakpoint();\r\n\r\n            // Handle transition from mobile to desktop or vice versa\r\n            if (wasMobile !== this.isMobile) {\r\n                this.handleBreakpointChange();\r\n            }\r\n\r\n            this.updateLayout();\r\n        });\r\n\r\n        // Close mobile menu when clicking outside\r\n        document.addEventListener('click', (event: Event) => {\r\n            if (this.isMobile && this.isMobileMenuOpen) {\r\n                const sidebar = document.getElementById('sidebar');\r\n                const mobileMenuToggle = document.getElementById('mobileMenuToggle');\r\n\r\n                if (sidebar && mobileMenuToggle &&\r\n                    !sidebar.contains(event.target as Node) &&\r\n                    !mobileMenuToggle.contains(event.target as Node)) {\r\n                    this.closeMobileMenu();\r\n                }\r\n            }\r\n        });\r\n\r\n        // Keyboard shortcuts for desktop\r\n        document.addEventListener('keydown', (event: KeyboardEvent) => {\r\n            if (this.isMobile) return;\r\n\r\n            if ((event.ctrlKey || event.metaKey) && event.key === 'b') { // Ctrl/Cmd + B to cycle through states\r\n                event.preventDefault();\r\n                this.cycleState();\r\n            }\r\n        });\r\n\r\n        // Double-click sidebar toggle to enter full screen\r\n        const sidebarToggle = document.getElementById('sidebarToggle');\r\n        if (sidebarToggle) {\r\n            sidebarToggle.addEventListener('dblclick', (event: Event) => {\r\n                event.preventDefault();\r\n                if (this.currentState === SIDEBAR_STATES.FULL) {\r\n                    this.setState(SIDEBAR_STATES.EXPANDED);\r\n                } else {\r\n                    this.setState(SIDEBAR_STATES.FULL);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    handleBreakpointChange(): void {\r\n        if (this.isMobile) {\r\n            // Transitioning to mobile - use collapsed state\r\n            this.currentState = SIDEBAR_STATES.COLLAPSED;\r\n            this.isMobileMenuOpen = false;\r\n            this.saveState();\r\n        } else {\r\n            // Transitioning to desktop - restore saved state\r\n            this.restoreState();\r\n        }\r\n    }\r\n\r\n    toggle(): void {\r\n        if (this.isMobile) {\r\n            this.toggleMobileMenu();\r\n        } else {\r\n            this.cycleState();\r\n        }\r\n    }\r\n\r\n    cycleState(): void {\r\n        const states: SidebarState[] = [SIDEBAR_STATES.EXPANDED, SIDEBAR_STATES.ICON, SIDEBAR_STATES.COLLAPSED];\r\n        const currentIndex = states.indexOf(this.currentState);\r\n        const nextIndex = (currentIndex + 1) % states.length;\r\n        this.currentState = states[nextIndex];\r\n        this.saveState();\r\n        this.updateLayout();\r\n    }\r\n\r\n    setState(state: SidebarState): void {\r\n        if (Object.values(SIDEBAR_STATES).includes(state)) {\r\n            this.currentState = state;\r\n            this.saveState();\r\n            this.updateLayout();\r\n        }\r\n    }\r\n\r\n    toggleMobileMenu(): void {\r\n        this.isMobileMenuOpen = !this.isMobileMenuOpen;\r\n        this.saveState();\r\n        this.updateLayout();\r\n    }\r\n\r\n    closeMobileMenu(): void {\r\n        this.isMobileMenuOpen = false;\r\n        this.saveState();\r\n        this.updateLayout();\r\n    }\r\n\r\n    updateLayout(): void {\r\n        const sidebar = document.getElementById('sidebar');\r\n        const mainContent = document.getElementById('mainContent');\r\n        const sidebarToggle = document.getElementById('sidebarToggle');\r\n        const mobileMenuToggle = document.getElementById('mobileMenuToggle');\r\n        const hamburgerMenu = document.getElementById('hamburgerMenu');\r\n        const playerBar = document.querySelector('.player-bar');\r\n\r\n        if (!sidebar || !mainContent) {\r\n            console.error('Required DOM elements not found for sidebar layout update');\r\n            return;\r\n        }\r\n\r\n        // Remove all state classes\r\n        sidebar.classList.remove('full', 'expanded', 'icon', 'collapsed', 'mobile-open');\r\n        mainContent.classList.remove('sidebar-full', 'sidebar-expanded', 'sidebar-icon', 'sidebar-collapsed');\r\n        if (playerBar) {\r\n            playerBar.classList.remove('sidebar-full', 'sidebar-expanded', 'sidebar-icon', 'sidebar-collapsed');\r\n        }\r\n\r\n        if (this.isMobile) {\r\n            // Mobile layout\r\n            if (sidebarToggle) sidebarToggle.style.display = 'none';\r\n            if (mobileMenuToggle) mobileMenuToggle.style.display = 'flex';\r\n            if (hamburgerMenu) hamburgerMenu.style.display = 'none';\r\n\r\n            if (this.isMobileMenuOpen) {\r\n                sidebar.classList.add('mobile-open');\r\n                mobileMenuToggle.textContent = '✕';\r\n                this.addMobileBackdrop();\r\n            } else {\r\n                sidebar.classList.add('collapsed');\r\n                mobileMenuToggle.textContent = '☰';\r\n                this.removeMobileBackdrop();\r\n            }\r\n\r\n            // Mobile sidebar should not affect main content layout\r\n            mainContent.classList.remove('sidebar-collapsed');\r\n            if (playerBar) {\r\n                playerBar.classList.remove('sidebar-collapsed');\r\n            }\r\n        } else {\r\n            // Desktop layout\r\n            if (sidebarToggle) sidebarToggle.style.display = 'flex';\r\n            if (mobileMenuToggle) mobileMenuToggle.style.display = 'none';\r\n            this.removeMobileBackdrop();\r\n\r\n            // Apply current state\r\n            sidebar.classList.add(this.currentState);\r\n            mainContent.classList.add(`sidebar-${this.currentState}`);\r\n            if (playerBar) {\r\n                playerBar.classList.add(`sidebar-${this.currentState}`);\r\n            }\r\n\r\n            // Update hamburger menu visibility\r\n            if (hamburgerMenu) {\r\n                hamburgerMenu.style.display = this.currentState === 'collapsed' ? 'block' : 'none';\r\n            }\r\n\r\n            // Update toggle button\r\n            this.updateToggleButton();\r\n        }\r\n    }\r\n\r\n    updateToggleButton(): void {\r\n        const sidebarToggle = document.getElementById('sidebarToggle');\r\n        if (!sidebarToggle) return;\r\n\r\n        const buttonConfig: Record<SidebarState, { text: string; title: string; left: string }> = {\r\n            full: { text: '✕', title: 'Exit full screen', left: '20px' },\r\n            expanded: { text: '◀', title: 'Collapse to icons', left: '260px' },\r\n            icon: { text: '◀', title: 'Collapse sidebar', left: '80px' },\r\n            collapsed: { text: '▶', title: 'Expand sidebar', left: '20px' }\r\n        };\r\n\r\n        const config = buttonConfig[this.currentState];\r\n        if (config) {\r\n            sidebarToggle.textContent = config.text;\r\n            sidebarToggle.title = config.title;\r\n            sidebarToggle.style.left = config.left;\r\n        }\r\n    }\r\n\r\n    addMobileBackdrop(): void {\r\n        if (!document.getElementById('mobileMenuBackdrop')) {\r\n            const backdrop = document.createElement('div');\r\n            backdrop.id = 'mobileMenuBackdrop';\r\n            backdrop.style.cssText = `\r\n                position: fixed;\r\n                top: 0;\r\n                left: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                background-color: rgba(0, 0, 0, 0.5);\r\n                z-index: 199;\r\n                opacity: 0;\r\n                transition: opacity 0.3s ease;\r\n            `;\r\n            document.body.appendChild(backdrop);\r\n\r\n            // Animate backdrop in\r\n            setTimeout(() => {\r\n                backdrop.style.opacity = '1';\r\n            }, 10);\r\n\r\n            // Close menu when backdrop is clicked\r\n            backdrop.addEventListener('click', () => {\r\n                this.closeMobileMenu();\r\n            });\r\n        }\r\n    }\r\n\r\n    removeMobileBackdrop(): void {\r\n        const backdrop = document.getElementById('mobileMenuBackdrop');\r\n        if (backdrop) {\r\n            backdrop.style.opacity = '0';\r\n            setTimeout(() => {\r\n                if (backdrop.parentNode) {\r\n                    backdrop.parentNode.removeChild(backdrop);\r\n                }\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    saveState(): void {\r\n        if (!this.isMobile) {\r\n            localStorage.setItem('sidebarState', JSON.stringify({\r\n                state: this.currentState\r\n            }));\r\n        } else {\r\n            // Save mobile state\r\n            localStorage.setItem('sidebarState', JSON.stringify({\r\n                state: this.currentState,\r\n                isMobileMenuOpen: this.isMobileMenuOpen\r\n            }));\r\n        }\r\n    }\r\n\r\n    restoreState(): void {\r\n        try {\r\n            const savedState = localStorage.getItem('sidebarState');\r\n            if (savedState) {\r\n                const state = JSON.parse(savedState);\r\n                this.currentState = state.state || SIDEBAR_STATES.EXPANDED;\r\n                this.isMobileMenuOpen = state.isMobileMenuOpen || false;\r\n            } else {\r\n                // Default states\r\n                this.currentState = SIDEBAR_STATES.EXPANDED;\r\n                this.isMobileMenuOpen = false;\r\n            }\r\n        } catch (error) {\r\n            console.error('Error restoring sidebar state:', error);\r\n            this.currentState = SIDEBAR_STATES.EXPANDED;\r\n            this.isMobileMenuOpen = false;\r\n        }\r\n\r\n        // Override for mobile if transitioning to mobile\r\n        if (this.isMobile) {\r\n            this.currentState = SIDEBAR_STATES.COLLAPSED;\r\n            // Keep the mobile menu state from saved data\r\n        }\r\n    }\r\n}\r\n\r\n// Create global instance\r\nwindow.sidebarManager = new SidebarManager();\r\n\r\n// Global toggle function for onclick handlers\r\nwindow.toggleSidebar = () => window.sidebarManager.toggle();\r\n\r\n// Add functions to directly set sidebar states\r\nwindow.setSidebarFull = () => window.sidebarManager.setState(SIDEBAR_STATES.FULL);\r\nwindow.setSidebarExpanded = () => window.sidebarManager.setState(SIDEBAR_STATES.EXPANDED);\r\nwindow.setSidebarIcon = () => window.sidebarManager.setState(SIDEBAR_STATES.ICON);\r\nwindow.setSidebarCollapsed = () => window.sidebarManager.setState(SIDEBAR_STATES.COLLAPSED);\r\n","import { getQueryParams, buildQueryString, updateURL } from './utils';\r\nimport apiService from './services/api-service';\r\nimport { PlaylistResponse, SongVideoInfoResponse, SearchResult, SongSearchResult } from './lib/youtube-music-api-proxy/youtube-music-api-proxy';\r\n\r\n// URL Manager\r\nexport class URLManager {\r\n    constructor() {\r\n        this.init();\r\n    }\r\n\r\n    init(): void {\r\n        // Initialize URL manager\r\n    }\r\n\r\n    // Load content from URL parameters on page load\r\n    async loadFromURL(): Promise<void> {\r\n        const params = getQueryParams();\r\n\r\n        if (params.playlist) {\r\n            // Load playlist from URL parameter\r\n            try {\r\n                const api = apiService.getAPI();\r\n                const data: PlaylistResponse = await api.getPlaylist(params.playlist);\r\n                const playlistTitle = data.playlist?.name || data.playlist?.title || 'Playlist';\r\n\r\n                if (window.contentManager) {\r\n                    window.contentManager.displayPlaylistContent(data, playlistTitle);\r\n                }\r\n\r\n                // Set current playlist\r\n                if (window.playerManager) {\r\n                    window.playerManager.setCurrentPlaylist(params.playlist);\r\n                    window.playerManager.highlightCurrentPlaylist();\r\n\r\n                    // If song parameter is also present, load that specific song\r\n                    if (params.song) {\r\n                        // Try to find the song in the playlist data\r\n                        const songs = data.songs || [];\r\n                        const songIndex = songs.findIndex((song) => song.id === params.song);\r\n                        if (songIndex !== -1) {\r\n                            const song = songs[songIndex];\r\n                            const title = song.name || 'Unknown Title';\r\n                            let artist = '';\r\n                            let thumbnail = '';\r\n\r\n                            // Handle different song types\r\n                            if (song instanceof SongSearchResult) {\r\n                                const songItem = song as SongSearchResult;\r\n                                if (songItem.artists && songItem.artists.length > 0) {\r\n                                    artist = songItem.artists[0].name;\r\n                                }\r\n                                if (songItem.thumbnails && songItem.thumbnails.length > 0) {\r\n                                    thumbnail = songItem.thumbnails[0].url;\r\n                                }\r\n                            }\r\n\r\n                            // If play parameter is present, auto-play the song\r\n                            if (params.play) {\r\n                                window.playerManager.playSong(song.id, title, artist, thumbnail, songs, songIndex);\r\n                            } else {\r\n                                window.playerManager.loadSong(song.id, title, artist, thumbnail, songs, songIndex);\r\n                            }\r\n                        } else {\r\n                            // Song not found in playlist, try to load it directly\r\n                            if (params.play) {\r\n                                window.playerManager.playSong(params.song, 'Unknown Title', 'Unknown Artist', '', data.songs, -1);\r\n                            } else {\r\n                                window.playerManager.loadSong(params.song, 'Unknown Title', 'Unknown Artist', '', data.songs, -1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Error loading playlist from URL:', error);\r\n                if (window.notificationManager) {\r\n                    window.notificationManager.showErrorNotification('Error loading playlist from URL');\r\n                }\r\n            }\r\n        } else if (params.song) {\r\n            // Load specific song from URL parameter\r\n            try {\r\n                const api = apiService.getAPI();\r\n                const data: SongVideoInfoResponse = await api.getSongInfo(params.song);\r\n                const title = data.name || 'Unknown Title';\r\n                const artist = data.artists && data.artists.length > 0 ? data.artists[0].name : '';\r\n                const thumbnail = data.thumbnails && data.thumbnails.length > 0 ? data.thumbnails[0].url : '';\r\n\r\n                // If play parameter is present, auto-play the song\r\n                if (window.playerManager) {\r\n                    if (params.play) {\r\n                        window.playerManager.playSong(params.song, title, artist, thumbnail, null, -1);\r\n                    } else {\r\n                        window.playerManager.loadSong(params.song, title, artist, thumbnail, null, -1);\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Error loading song from URL:', error);\r\n                if (window.notificationManager) {\r\n                    window.notificationManager.showErrorNotification('Error loading song from URL');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// Create global instance immediately\r\nwindow.urlManager = new URLManager();\r\n\r\n// Make functions globally accessible\r\nwindow.loadFromURL = () => window.urlManager.loadFromURL();\r\n","import { DEFAULT_TITLE, SIDEBAR_COLLAPSE_BREAKPOINT } from './constants';\r\n\r\n// Helper function to format duration\r\nexport function formatDuration(duration: any): string {\r\n    if (!duration) return 'Unknown';\r\n\r\n    // If it's already formatted (HH:MM:SS), return as is\r\n    if (typeof duration === 'string' && duration.includes(':')) {\r\n        // Remove milliseconds if present (e.g., \"00:03:17.3600000\" -> \"00:03:17\")\r\n        return duration.split('.')[0];\r\n    }\r\n\r\n    // If it's a number (seconds), convert to HH:MM:SS\r\n    if (typeof duration === 'number') {\r\n        const hours = Math.floor(duration / 3600);\r\n        const minutes = Math.floor((duration % 3600) / 60);\r\n        const seconds = Math.floor(duration % 60);\r\n\r\n        if (hours > 0) {\r\n            return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n        } else {\r\n            return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n        }\r\n    }\r\n\r\n    return duration;\r\n}\r\n\r\n// Helper function to format numbers (e.g., 1000000 -> 1M)\r\nexport function formatNumber(num: number): string {\r\n    if (num >= 1000000000) {\r\n        return (num / 1000000000).toFixed(1) + 'B';\r\n    } else if (num >= 1000000) {\r\n        return (num / 1000000).toFixed(1) + 'M';\r\n    } else if (num >= 1000) {\r\n        return (num / 1000).toFixed(1) + 'K';\r\n    }\r\n    return num.toString();\r\n}\r\n\r\n// Helper function to format date\r\nexport function formatDate(dateString: string): string {\r\n    if (!dateString) return 'Unknown';\r\n\r\n    try {\r\n        const date = new Date(dateString);\r\n        return date.toLocaleDateString('en-US', {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric'\r\n        });\r\n    } catch (error) {\r\n        return dateString;\r\n    }\r\n}\r\n\r\n// Get all query parameters from the current URL\r\nexport function getQueryParams(): Record<string, string> {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const params: Record<string, string> = {};\r\n    for (const [key, value] of urlParams) {\r\n        params[key] = value;\r\n    }\r\n    return params;\r\n}\r\n\r\n// Convert query parameters to URL string\r\nexport function buildQueryString(params: Record<string, any>): string {\r\n    return Object.keys(params)\r\n        .filter(key => params[key] !== null && params[key] !== undefined && params[key] !== '')\r\n        .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)\r\n        .join('&');\r\n}\r\n\r\n// Update URL with new parameters\r\nexport function updateURL(params: Record<string, any>): void {\r\n    const url = new URL(window.location.href);\r\n    Object.keys(params).forEach(key => {\r\n        if (params[key] === null || params[key] === undefined || params[key] === '') {\r\n            url.searchParams.delete(key);\r\n        } else {\r\n            url.searchParams.set(key, params[key]);\r\n        }\r\n    });\r\n    window.history.pushState({}, '', url);\r\n}\r\n\r\n// Update CSS variables to match JavaScript constants\r\nexport async function updateCSSBreakpoints(): Promise<void> {\r\n    try {\r\n        document.documentElement.style.setProperty('--sidebar-collapse-breakpoint', `${SIDEBAR_COLLAPSE_BREAKPOINT}px`);\r\n    } catch (error) {\r\n        console.error('Error updating CSS breakpoints:', error);\r\n    }\r\n}\r\n\r\n// Check if sidebar should be collapsed based on screen width\r\nexport async function shouldCollapseSidebar(): Promise<boolean> {\r\n    try {\r\n        return window.innerWidth <= SIDEBAR_COLLAPSE_BREAKPOINT;\r\n    } catch (error) {\r\n        console.error('Error checking sidebar collapse:', error);\r\n        return false; // Default to not collapsed on error\r\n    }\r\n}\r\n\r\n// Function to stop all audio elements in the document\r\nexport function stopAllAudio(): void {\r\n    // Stop the current audio\r\n    if (window.currentAudio) {\r\n        window.currentAudio.pause();\r\n        window.currentAudio.currentTime = 0;\r\n        window.currentAudio = null;\r\n    }\r\n\r\n    // Stop all other audio elements that might be playing\r\n    const allAudioElements = document.querySelectorAll('audio');\r\n    allAudioElements.forEach(audio => {\r\n        if (audio !== window.currentAudio) {\r\n            audio.pause();\r\n            audio.currentTime = 0;\r\n        }\r\n    });\r\n\r\n    // Stop any video elements that might have audio\r\n    const allVideoElements = document.querySelectorAll('video');\r\n    allVideoElements.forEach(video => {\r\n        if ((video as any).audioTracks && (video as any).audioTracks.length > 0) {\r\n            video.pause();\r\n            video.currentTime = 0;\r\n        }\r\n    });\r\n\r\n    // Also stop any HTML5 audio elements that might be created dynamically\r\n    if (window.AudioContext || (window as any).webkitAudioContext) {\r\n        // Stop any active audio contexts\r\n        try {\r\n            // Only create AudioContext if it's allowed (user has interacted with page)\r\n            if (document.body.classList.contains('user-interacted')) {\r\n                const AudioContextClass = window.AudioContext || (window as any).webkitAudioContext;\r\n                const audioContext = new AudioContextClass();\r\n                if (audioContext.state === 'running') {\r\n                    audioContext.suspend();\r\n                }\r\n            }\r\n        } catch (e) {\r\n            // Ignore errors if audio context is not available\r\n        }\r\n    }\r\n\r\n    // Force stop any media elements that might be playing in the background\r\n    // This handles cases where audio might be playing from other sources\r\n    const mediaElements = document.querySelectorAll('audio, video');\r\n    mediaElements.forEach(media => {\r\n        if (!(media as HTMLMediaElement).paused) {\r\n            (media as HTMLMediaElement).pause();\r\n            (media as HTMLMediaElement).currentTime = 0;\r\n        }\r\n    });\r\n\r\n    // Clear song info when stopping audio\r\n    window.currentSongInfo = null;\r\n    if (window.clearInfoPanel) {\r\n        window.clearInfoPanel();\r\n    }\r\n\r\n    console.log('Stopped all audio playback');\r\n}\r\n\r\n// Show loading state\r\nexport function showLoading(): void {\r\n    const loading = document.getElementById('loading');\r\n    const error = document.getElementById('error');\r\n    const welcomeSection = document.querySelector('.welcome-section');\r\n    const searchResults = document.getElementById('searchResults');\r\n    const libraryContent = document.getElementById('libraryContent');\r\n\r\n    if (loading) (loading as HTMLElement).style.display = 'block';\r\n    if (error) (error as HTMLElement).style.display = 'none';\r\n    if (welcomeSection) (welcomeSection as HTMLElement).style.display = 'none';\r\n    if (searchResults) (searchResults as HTMLElement).style.display = 'none';\r\n    if (libraryContent) (libraryContent as HTMLElement).style.display = 'none';\r\n}\r\n\r\n// Show error state\r\nexport function showError(message: string): void {\r\n    const error = document.getElementById('error');\r\n    const loading = document.getElementById('loading');\r\n    const welcomeSection = document.querySelector('.welcome-section');\r\n    const searchResults = document.getElementById('searchResults');\r\n    const libraryContent = document.getElementById('libraryContent');\r\n\r\n    if (error) {\r\n        error.textContent = message;\r\n        (error as HTMLElement).style.display = 'block';\r\n    }\r\n    if (loading) (loading as HTMLElement).style.display = 'none';\r\n    if (welcomeSection) (welcomeSection as HTMLElement).style.display = 'none';\r\n    if (searchResults) (searchResults as HTMLElement).style.display = 'none';\r\n    if (libraryContent) (libraryContent as HTMLElement).style.display = 'none';\r\n}\r\n\r\n// Update active navigation item\r\nexport function updateActiveNavItem(clickedItem: Element): void {\r\n    // Remove active class from all nav items\r\n    document.querySelectorAll('.nav-item').forEach(item => {\r\n        item.classList.remove('active');\r\n    });\r\n    // Add active class to clicked item\r\n    clickedItem.classList.add('active');\r\n\r\n    // Close mobile menu after navigation\r\n    if (window.sidebarManager && window.sidebarManager.isMobile && window.sidebarManager.isMobileMenuOpen) {\r\n        window.sidebarManager.toggle();\r\n    }\r\n}\r\n\r\n// Create global utils object for backward compatibility\r\nwindow.utils = {\r\n    formatDuration,\r\n    formatNumber,\r\n    formatDate,\r\n    getQueryParams,\r\n    buildQueryString,\r\n    updateURL,\r\n    updateCSSBreakpoints,\r\n    shouldCollapseSidebar,\r\n    stopAllAudio,\r\n    showLoading,\r\n    showError,\r\n    updateActiveNavItem\r\n};\r\n\r\n// Also export individual functions to window for direct access\r\nwindow.formatDuration = formatDuration;\r\nwindow.formatNumber = formatNumber;\r\nwindow.formatDate = formatDate;\r\nwindow.getQueryParams = getQueryParams;\r\nwindow.buildQueryString = buildQueryString;\r\nwindow.updateURL = updateURL;\r\nwindow.updateCSSBreakpoints = updateCSSBreakpoints;\r\nwindow.shouldCollapseSidebar = shouldCollapseSidebar;\r\nwindow.stopAllAudio = stopAllAudio;\r\nwindow.showLoading = showLoading;\r\nwindow.showError = showError;\r\nwindow.updateActiveNavItem = updateActiveNavItem;\r\n\r\n// Add synchronous wrapper for shouldCollapseSidebar for backward compatibility\r\nwindow.shouldCollapseSidebarSync = (): boolean => {\r\n    // Default to false for synchronous calls\r\n    return window.innerWidth <= 800; // Default breakpoint\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Main Application Entry Point\r\n// This file imports and initializes all the modular components\r\n\r\n// Reference types\r\n/// <reference path=\"./types.d.ts\" />\r\n\r\n// Import CSS\r\nimport '../css/main.css';\r\n\r\n// Import all modules (but don't initialize them yet)\r\nimport './constants';\r\nimport './utils';\r\nimport './notification-manager';\r\nimport './sidebar-manager';\r\nimport './right-sidebar-manager';\r\nimport './player-manager';\r\nimport './content-manager';\r\nimport './url-manager';\r\nimport { setupEventDelegation } from './event-delegation';\r\nimport apiService from './services/api-service';\r\n\r\nconsole.log('Initializing API service...');\r\n\r\n// Enhanced API initialization with better error handling\r\nasync function initializeAPI(maxRetries: number = 10, retryDelay: number = 1000): Promise<boolean> {\r\n    let retryCount = 0;\r\n\r\n    const attemptCreate = async (): Promise<boolean> => {\r\n        try {\r\n            // Initialize the API service\r\n            const api = await apiService.initialize('', {\r\n                timeout: 30000,\r\n                retries: 3\r\n            });\r\n\r\n            // Set the global API instance for backward compatibility\r\n            window.ytmAPI = api;\r\n\r\n            console.log('YouTube Music API is ready and working');\r\n            return true;\r\n        } catch (error) {\r\n            console.error('Error creating YouTube Music API:', error);\r\n\r\n            retryCount++;\r\n            if (retryCount < maxRetries) {\r\n                console.log(`YouTube Music API not available, retrying in ${retryDelay}ms (attempt ${retryCount}/${maxRetries})`);\r\n                await new Promise(resolve => setTimeout(resolve, retryDelay));\r\n                return await attemptCreate();\r\n            } else {\r\n                console.error('YouTube Music API failed to initialize after maximum retries');\r\n                // Show error to user\r\n                const errorDiv = document.getElementById('error');\r\n                if (errorDiv) {\r\n                    errorDiv.textContent = 'Failed to initialize YouTube Music API. Please refresh the page.';\r\n                    errorDiv.style.display = 'block';\r\n                }\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n\r\n    return await attemptCreate();\r\n}\r\n\r\n// Initialize the application only after API is ready\r\nfunction initializeApp(): void {\r\n    console.log('Initializing YouTube Music API Proxy...');\r\n\r\n    // Update CSS breakpoints\r\n    if (window.updateCSSBreakpoints) {\r\n        window.updateCSSBreakpoints().catch(error => {\r\n            console.error('Error updating CSS breakpoints:', error);\r\n        });\r\n    }\r\n\r\n    // Initialize event delegation for data attributes\r\n    setupEventDelegation();\r\n\r\n    // Track user interaction to enable AudioContext\r\n    const trackUserInteraction = (): void => {\r\n        document.body.classList.add('user-interacted');\r\n        // Remove the event listeners after first interaction\r\n        document.removeEventListener('click', trackUserInteraction);\r\n        document.removeEventListener('touchstart', trackUserInteraction);\r\n        document.removeEventListener('keydown', trackUserInteraction);\r\n    };\r\n\r\n    document.addEventListener('click', trackUserInteraction);\r\n    document.addEventListener('touchstart', trackUserInteraction);\r\n    document.addEventListener('keydown', trackUserInteraction);\r\n\r\n    // Stop any existing audio when page loads\r\n    if (window.stopAllAudio) {\r\n        window.stopAllAudio();\r\n    }\r\n\r\n    // Stop audio when page is about to unload\r\n    window.addEventListener('beforeunload', () => {\r\n        if (window.stopAllAudio) {\r\n            window.stopAllAudio();\r\n        }\r\n    });\r\n\r\n    // Initialize mobile enhancements\r\n    if (window.playerManager) {\r\n        window.playerManager.addMobileTouchHandlers();\r\n        window.playerManager.enhancePlayerControls();\r\n    }\r\n\r\n    // Add event listeners for navigation items\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n        const libraryNavItem = document.getElementById('libraryNavItem');\r\n        const songsNavItem = document.getElementById('songsNavItem');\r\n        const artistsNavItem = document.getElementById('artistsNavItem');\r\n        const albumsNavItem = document.getElementById('albumsNavItem');\r\n        const searchInput = document.getElementById('searchInput') as HTMLInputElement;\r\n\r\n        if (libraryNavItem) {\r\n            libraryNavItem.addEventListener('click', window.loadLibrary);\r\n        }\r\n        if (songsNavItem) {\r\n            songsNavItem.addEventListener('click', window.loadSongs);\r\n        }\r\n        if (artistsNavItem) {\r\n            artistsNavItem.addEventListener('click', window.loadArtists);\r\n        }\r\n        if (albumsNavItem) {\r\n            albumsNavItem.addEventListener('click', window.loadAlbums);\r\n        }\r\n        if (searchInput) {\r\n            searchInput.addEventListener('keypress', window.handleSearch);\r\n        }\r\n    });\r\n\r\n    // Check if there are URL parameters to load from\r\n    // Use a small delay to ensure all modules are loaded\r\n    setTimeout(() => {\r\n        if (window.getQueryParams) {\r\n            const params = window.getQueryParams();\r\n            console.log('URL parameters found:', params);\r\n\r\n            if (params.playlist || params.song) {\r\n                // Load playlists first, then load from URL parameters\r\n                if (window.contentManager) {\r\n                    window.contentManager.loadPlaylists().then(() => {\r\n                        if (window.urlManager) {\r\n                            window.urlManager.loadFromURL();\r\n                        }\r\n                    });\r\n                }\r\n            } else {\r\n                // No URL parameters, load home page\r\n                if (window.contentManager) {\r\n                    window.contentManager.loadHome();\r\n                    // Load playlists in background\r\n                    window.contentManager.loadPlaylists();\r\n                }\r\n            }\r\n        } else {\r\n            console.error('getQueryParams function not available');\r\n            // Fallback: load home page\r\n            if (window.contentManager) {\r\n                window.contentManager.loadHome();\r\n                window.contentManager.loadPlaylists();\r\n            }\r\n        }\r\n    }, 100);\r\n\r\n    console.log('YouTube Music API Proxy initialized successfully!');\r\n}\r\n\r\n// Main initialization function\r\nasync function startApplication(): Promise<void> {\r\n    console.log('Starting YouTube Music API Proxy application...');\r\n\r\n    // Show loading state\r\n    const loading = document.getElementById('loading');\r\n    if (loading) {\r\n        loading.style.display = 'block';\r\n        loading.textContent = 'Initializing YouTube Music API...';\r\n    }\r\n\r\n    // Initialize API first\r\n    const apiSuccess = await initializeAPI();\r\n\r\n    if (!apiSuccess) {\r\n        console.error('Failed to initialize API, application cannot start');\r\n        return;\r\n    }\r\n\r\n    // Hide loading and show success\r\n    if (loading) {\r\n        loading.textContent = 'API Ready! Initializing application...';\r\n    }\r\n\r\n    // Initialize the app\r\n    initializeApp();\r\n\r\n    // Hide loading completely\r\n    if (loading) {\r\n        loading.style.display = 'none';\r\n    }\r\n\r\n    console.log('Application startup complete!');\r\n}\r\n\r\n// Start the application when the DOM is ready\r\nif (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', startApplication);\r\n} else {\r\n    // DOM is already ready\r\n    startApplication();\r\n}\r\n\r\n// Export for potential external use\r\nexport { initializeApp, startApplication };\r\n"],"names":[],"sourceRoot":""}