(()=>{"use strict";const t="playing",e="paused",n="stopped",i="none",a="one",s="all",o={FULL:"full",EXPANDED:"expanded",ICON:"icon",COLLAPSED:"collapsed"},r="info",l="lyrics",d={error:"❌",success:"✅",warning:"⚠️",info:"ℹ️"},c=.5,u=5e3,h=8e3,m=4e3,g=6e3,w=5e3,p=300,y=200,b=600;function v(t){if(!t)return"Unknown";if("string"==typeof t&&t.includes(":"))return t.split(".")[0];if("number"==typeof t){const e=Math.floor(t/3600),n=Math.floor(t%3600/60),i=Math.floor(t%60);return e>0?`${e.toString().padStart(2,"0")}:${n.toString().padStart(2,"0")}:${i.toString().padStart(2,"0")}`:`${n.toString().padStart(2,"0")}:${i.toString().padStart(2,"0")}`}return t}function f(t){return t>=1e9?(t/1e9).toFixed(1)+"B":t>=1e6?(t/1e6).toFixed(1)+"M":t>=1e3?(t/1e3).toFixed(1)+"K":t.toString()}function S(t){if(!t)return"Unknown";try{return new Date(t).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"})}catch(e){return t}}function I(){const t=new URLSearchParams(window.location.search),e={};for(const[n,i]of t)e[n]=i;return e}function M(t){return Object.keys(t).filter(e=>null!==t[e]&&void 0!==t[e]&&""!==t[e]).map(e=>`${encodeURIComponent(e)}=${encodeURIComponent(t[e])}`).join("&")}function E(t){const e=new URL(window.location.href);Object.keys(t).forEach(n=>{null===t[n]||void 0===t[n]||""===t[n]?e.searchParams.delete(n):e.searchParams.set(n,t[n])}),window.history.pushState({},"",e)}async function A(){try{document.documentElement.style.setProperty("--sidebar-collapse-breakpoint","800px")}catch(t){}}async function L(){try{return window.innerWidth<=800}catch(t){return!1}}function $(){window.currentAudio&&(window.currentAudio.pause(),window.currentAudio.currentTime=0,window.currentAudio=null);document.querySelectorAll("audio").forEach(t=>{t!==window.currentAudio&&(t.pause(),t.currentTime=0)});if(document.querySelectorAll("video").forEach(t=>{t.audioTracks&&t.audioTracks.length>0&&(t.pause(),t.currentTime=0)}),window.AudioContext||window.webkitAudioContext)try{if(document.body.classList.contains("user-interacted")){const t=new(window.AudioContext||window.webkitAudioContext);"running"===t.state&&t.suspend()}}catch(t){}document.querySelectorAll("audio, video").forEach(t=>{t.paused||(t.pause(),t.currentTime=0)}),window.currentSongInfo=null,window.clearInfoPanel&&window.clearInfoPanel()}function P(){const t=document.getElementById("loading"),e=document.getElementById("error"),n=document.querySelector(".welcome-section"),i=document.getElementById("searchResults"),a=document.getElementById("libraryContent");t&&(t.style.display="block"),e&&(e.style.display="none"),n&&(n.style.display="none"),i&&(i.style.display="none"),a&&(a.style.display="none")}function B(t){const e=document.getElementById("error"),n=document.getElementById("loading"),i=document.querySelector(".welcome-section"),a=document.getElementById("searchResults"),s=document.getElementById("libraryContent");e&&(e.textContent=t,e.style.display="block"),n&&(n.style.display="none"),i&&(i.style.display="none"),a&&(a.style.display="none"),s&&(s.style.display="none")}function C(t){document.querySelectorAll(".nav-item").forEach(t=>{t.classList.remove("active")}),t.classList.add("active"),window.sidebarManager&&window.sidebarManager.isMobile&&window.sidebarManager.isMobileMenuOpen&&window.sidebarManager.toggle()}window.utils={formatDuration:v,formatNumber:f,formatDate:S,getQueryParams:I,buildQueryString:M,updateURL:E,updateCSSBreakpoints:A,shouldCollapseSidebar:L,stopAllAudio:$,showLoading:P,showError:B,updateActiveNavItem:C},window.formatDuration=v,window.formatNumber=f,window.formatDate=S,window.getQueryParams=I,window.buildQueryString=M,window.updateURL=E,window.updateCSSBreakpoints=A,window.shouldCollapseSidebar=L,window.stopAllAudio=$,window.showLoading=P,window.showError=B,window.updateActiveNavItem=C,window.shouldCollapseSidebarSync=()=>window.innerWidth<=800;window.notificationManager=new class{constructor(){this.notificationCounter=0,this.notificationCounter=0}showNotification(t,e,n,i=u){const a=document.getElementById("notificationContainer");if(!a)return null;const s="notification-"+ ++this.notificationCounter,o=document.createElement("div");o.className=`notification ${t}`,o.id=s;const r=document.createElement("div");r.className="notification-icon",r.textContent=d[t]||d.info,o.appendChild(r);const l=document.createElement("div");l.className="notification-content";const c=document.createElement("div");c.className="notification-title",c.textContent=e,l.appendChild(c);const h=document.createElement("div");h.className="notification-message",h.textContent=n,l.appendChild(h),o.appendChild(l);const m=document.createElement("button");m.className="notification-close",m.textContent="×",m.onclick=()=>window.notificationManager.removeNotification(s),o.appendChild(m),a.appendChild(o),setTimeout(()=>{o.classList.add("show")},10);let g=null;return i>0&&(g=window.setTimeout(()=>{this.removeNotification(s)},i)),o.dataset.timeoutId=g?.toString()||"",s}removeNotification(t){const e=document.getElementById(t);e&&(e.dataset.timeoutId&&(clearTimeout(parseInt(e.dataset.timeoutId)),delete e.dataset.timeoutId),e.classList.remove("show"),setTimeout(()=>{e.parentNode&&e.parentNode.removeChild(e)},300))}showErrorNotification(t){return this.showNotification("error","Error",t,h)}showSuccessNotification(t){return this.showNotification("success","Success",t,m)}showWarningNotification(t){return this.showNotification("warning","Warning",t,g)}showInfoNotification(t){return this.showNotification("info","Info",t,w)}},window.removeNotification=t=>window.notificationManager.removeNotification(t);window.sidebarManager=new class{constructor(){this.isMobile=!1,this.currentState=o.EXPANDED,this.isMobileMenuOpen=!1,this.isMobile=!1,this.currentState=o.EXPANDED,this.isMobileMenuOpen=!1,this.init()}init(){this.updateBreakpoint(),this.setupEventListeners(),this.restoreState(),this.updateLayout()}updateBreakpoint(){this.isMobile=window.innerWidth<=800}setupEventListeners(){window.addEventListener("resize",()=>{const t=this.isMobile;this.updateBreakpoint(),t!==this.isMobile&&this.handleBreakpointChange(),this.updateLayout()}),document.addEventListener("click",t=>{if(this.isMobile&&this.isMobileMenuOpen){const e=document.getElementById("sidebar"),n=document.getElementById("mobileMenuToggle");e&&n&&!e.contains(t.target)&&!n.contains(t.target)&&this.closeMobileMenu()}}),document.addEventListener("keydown",t=>{this.isMobile||(t.ctrlKey||t.metaKey)&&"b"===t.key&&(t.preventDefault(),this.cycleState())});const t=document.getElementById("sidebarToggle");t&&t.addEventListener("dblclick",t=>{t.preventDefault(),this.currentState===o.FULL?this.setState(o.EXPANDED):this.setState(o.FULL)})}handleBreakpointChange(){this.isMobile?(this.currentState=o.COLLAPSED,this.isMobileMenuOpen=!1,this.saveState()):this.restoreState()}toggle(){this.isMobile?this.toggleMobileMenu():this.cycleState()}cycleState(){const t=[o.EXPANDED,o.ICON,o.COLLAPSED],e=(t.indexOf(this.currentState)+1)%t.length;this.currentState=t[e],this.saveState(),this.updateLayout()}setState(t){Object.values(o).includes(t)&&(this.currentState=t,this.saveState(),this.updateLayout())}toggleMobileMenu(){this.isMobileMenuOpen=!this.isMobileMenuOpen,this.saveState(),this.updateLayout()}closeMobileMenu(){this.isMobileMenuOpen=!1,this.saveState(),this.updateLayout()}updateLayout(){const t=document.getElementById("sidebar"),e=document.getElementById("mainContent"),n=document.getElementById("sidebarToggle"),i=document.getElementById("mobileMenuToggle"),a=document.getElementById("hamburgerMenu"),s=document.querySelector(".player-bar");t&&e&&(t.classList.remove("full","expanded","icon","collapsed","mobile-open"),e.classList.remove("sidebar-full","sidebar-expanded","sidebar-icon","sidebar-collapsed"),s&&s.classList.remove("sidebar-full","sidebar-expanded","sidebar-icon","sidebar-collapsed"),this.isMobile?(n&&(n.style.display="none"),i&&(i.style.display="flex"),a&&(a.style.display="none"),this.isMobileMenuOpen?(t.classList.add("mobile-open"),i.textContent="✕",this.addMobileBackdrop()):(t.classList.add("collapsed"),i.textContent="☰",this.removeMobileBackdrop()),e.classList.remove("sidebar-collapsed"),s&&s.classList.remove("sidebar-collapsed")):(n&&(n.style.display="flex"),i&&(i.style.display="none"),this.removeMobileBackdrop(),t.classList.add(this.currentState),e.classList.add(`sidebar-${this.currentState}`),s&&s.classList.add(`sidebar-${this.currentState}`),a&&(a.style.display="collapsed"===this.currentState?"block":"none"),this.updateToggleButton()))}updateToggleButton(){const t=document.getElementById("sidebarToggle");if(!t)return;const e={full:{text:"✕",title:"Exit full screen",left:"20px"},expanded:{text:"◀",title:"Collapse to icons",left:"260px"},icon:{text:"◀",title:"Collapse sidebar",left:"80px"},collapsed:{text:"▶",title:"Expand sidebar",left:"20px"}}[this.currentState];e&&(t.textContent=e.text,t.title=e.title,t.style.left=e.left)}addMobileBackdrop(){if(!document.getElementById("mobileMenuBackdrop")){const t=document.createElement("div");t.id="mobileMenuBackdrop",t.style.cssText="\n                position: fixed;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: rgba(0, 0, 0, 0.5);\n                z-index: 199;\n                opacity: 0;\n                transition: opacity 0.3s ease;\n            ",document.body.appendChild(t),setTimeout(()=>{t.style.opacity="1"},10),t.addEventListener("click",()=>{this.closeMobileMenu()})}}removeMobileBackdrop(){const t=document.getElementById("mobileMenuBackdrop");t&&(t.style.opacity="0",setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t)},300))}saveState(){this.isMobile?localStorage.setItem("sidebarState",JSON.stringify({state:this.currentState,isMobileMenuOpen:this.isMobileMenuOpen})):localStorage.setItem("sidebarState",JSON.stringify({state:this.currentState}))}restoreState(){try{const t=localStorage.getItem("sidebarState");if(t){const e=JSON.parse(t);this.currentState=e.state||o.EXPANDED,this.isMobileMenuOpen=e.isMobileMenuOpen||!1}else this.currentState=o.EXPANDED,this.isMobileMenuOpen=!1}catch(t){this.currentState=o.EXPANDED,this.isMobileMenuOpen=!1}this.isMobile&&(this.currentState=o.COLLAPSED)}},window.toggleSidebar=()=>window.sidebarManager.toggle(),window.setSidebarFull=()=>window.sidebarManager.setState(o.FULL),window.setSidebarExpanded=()=>window.sidebarManager.setState(o.EXPANDED),window.setSidebarIcon=()=>window.sidebarManager.setState(o.ICON),window.setSidebarCollapsed=()=>window.sidebarManager.setState(o.COLLAPSED);window.rightSidebarManager=new class{constructor(){this.isVisible=!1,this.currentTab=r,this.currentWidth=p,this.isResizing=!1,this.startX=0,this.startWidth=0,this.init()}init(){this.setupEventListeners(),this.restoreState(),this.updateLayout()}setupEventListeners(){const t=document.getElementById("rightSidebarResizeHandle");t&&t.addEventListener("mousedown",t=>{this.startResize(t)});const e=document.getElementById("infoTab"),n=document.getElementById("lyricsTab");e&&e.addEventListener("click",()=>this.switchTab(r)),n&&n.addEventListener("click",()=>this.switchTab(l));const i=document.getElementById("rightSidebarClose");i&&i.addEventListener("click",()=>this.hide()),document.addEventListener("mousemove",t=>{this.isResizing&&this.handleResize(t)}),document.addEventListener("mouseup",()=>{this.isResizing&&this.stopResize()})}startResize(t){this.isResizing=!0,this.startX=t.clientX,this.startWidth=this.currentWidth,document.body.style.cursor="col-resize",t.preventDefault()}handleResize(t){if(!this.isResizing)return;const e=this.startX-t.clientX,n=Math.max(y,Math.min(b,this.startWidth+e));this.currentWidth=n,this.updateLayout()}stopResize(){this.isResizing=!1,document.body.style.cursor="",this.saveState()}switchTab(t){this.currentTab=t,this.updateTabContent(),this.saveState()}updateTabContent(){const t=document.getElementById("infoContent"),e=document.getElementById("lyricsContent"),n=document.getElementById("infoTab"),i=document.getElementById("lyricsTab");n&&n.classList.toggle("active",this.currentTab===r),i&&i.classList.toggle("active",this.currentTab===l),t&&(t.style.display=this.currentTab===r?"block":"none"),e&&(e.style.display=this.currentTab===l?"block":"none")}show(){this.isVisible=!0,this.updateLayout(),this.saveState()}hide(){this.isVisible=!1,this.updateLayout(),this.saveState()}toggle(){this.isVisible?this.hide():this.show()}updateLayout(){const t=document.getElementById("rightSidebar"),e=document.getElementById("mainContent"),n=document.querySelector(".player-bar");t&&e&&(this.isVisible?(t.style.width=`${this.currentWidth}px`,t.style.display="block",e.style.marginRight=`${this.currentWidth}px`,n&&(n.style.marginRight=`${this.currentWidth}px`)):(t.style.display="none",e.style.marginRight="0",n&&(n.style.marginRight="0")))}updateInfoPanel(t){const e=document.getElementById("infoContent");if(!e||!t)return;const n=t.name||t.title||"Unknown Title",i=t.artists&&t.artists.length>0?t.artists[0].name:"Unknown Artist",a=t.album||"Unknown Album",s=t.duration||"Unknown",o=t.thumbnails&&t.thumbnails.length>0?t.thumbnails[0].url:"";e.innerHTML=`\n            <div class="song-info">\n                <img src="${o}" alt="${n}" class="song-thumbnail">\n                <h3>${n}</h3>\n                <p class="artist">${i}</p>\n                <p class="album">${a}</p>\n                <p class="duration">${s}</p>\n            </div>\n        `,this.show()}updateLyricsPanel(t){const e=document.getElementById("lyricsContent");e&&(e.innerHTML=`\n            <div class="lyrics-content">\n                <pre>${t||"No lyrics available"}</pre>\n            </div>\n        `,this.switchTab(l),this.show())}clearInfoPanel(){const t=document.getElementById("infoContent"),e=document.getElementById("lyricsContent");t&&(t.innerHTML=""),e&&(e.innerHTML=""),this.hide()}saveState(){localStorage.setItem("rightSidebarState",JSON.stringify({isVisible:this.isVisible,currentTab:this.currentTab,currentWidth:this.currentWidth}))}restoreState(){try{const t=localStorage.getItem("rightSidebarState");if(t){const e=JSON.parse(t);this.isVisible=e.isVisible||!1,this.currentTab=e.currentTab||r,this.currentWidth=e.currentWidth||p}}catch(t){}}},window.toggleRightSidebar=()=>window.rightSidebarManager.toggle(),window.showRightSidebar=()=>window.rightSidebarManager.show(),window.hideRightSidebar=()=>window.rightSidebarManager.hide(),window.clearInfoPanel=()=>window.rightSidebarManager.clearInfoPanel();window.playerManager=new class{constructor(){this.currentState=n,this.currentVolume=c,this.repeatMode=i,this.isShuffled=!1,this.currentPlaylist=[],this.currentIndex=-1,this.originalPlaylist=[],this.currentPlaylistId="",this.init()}init(){this.setupEventListeners(),this.restoreState(),this.updateUI()}setupEventListeners(){const t=document.getElementById("playButton"),e=document.getElementById("pauseButton"),n=document.getElementById("stopButton"),i=document.getElementById("nextButton"),a=document.getElementById("prevButton"),s=document.getElementById("volumeSlider"),o=document.getElementById("repeatButton"),r=document.getElementById("shuffleButton");t&&t.addEventListener("click",()=>this.resumeSong()),e&&e.addEventListener("click",()=>this.pauseSong()),n&&n.addEventListener("click",()=>this.stopSong()),i&&i.addEventListener("click",()=>this.nextSong()),a&&a.addEventListener("click",()=>this.previousSong()),s&&s.addEventListener("input",t=>{const e=t.target;this.setVolume(parseFloat(e.value))}),o&&o.addEventListener("click",()=>this.cycleRepeatMode()),r&&r.addEventListener("click",()=>this.toggleShuffle()),window.currentAudio&&(window.currentAudio.addEventListener("ended",()=>this.handleSongEnd()),window.currentAudio.addEventListener("timeupdate",()=>this.updateProgress()),window.currentAudio.addEventListener("loadedmetadata",()=>this.updateDuration()))}playSong(t,e,n,i,a,s){this.loadSong(t,e,n,i,a,s),this.resumeSong()}loadSong(t,e,i,a,s,o){window.currentAudio&&(window.currentAudio.pause(),window.currentAudio.currentTime=0);const r=new Audio;r.src=`/api/stream/${t}`,r.volume=this.currentVolume,r.preload="metadata",r.addEventListener("ended",()=>this.handleSongEnd()),r.addEventListener("timeupdate",()=>this.updateProgress()),r.addEventListener("loadedmetadata",()=>this.updateDuration()),r.addEventListener("error",t=>this.handleAudioError(t)),window.currentAudio=r,window.currentSongInfo={id:t,title:e,artist:i,thumbnail:a},s&&(this.currentPlaylist=s,this.originalPlaylist=[...s],this.currentIndex=void 0!==o?o:-1),this.updateSongInfo(e,i,a),this.currentState=n,this.updateUI(),window.rightSidebarManager&&window.rightSidebarManager.updateInfoPanel(window.currentSongInfo)}pauseSong(){window.currentAudio&&this.currentState===t&&(window.currentAudio.pause(),this.currentState=e,this.updateUI())}resumeSong(){window.currentAudio&&this.currentState!==t&&window.currentAudio.play().then(()=>{this.currentState=t,this.updateUI()}).catch(t=>{window.notificationManager&&window.notificationManager.showErrorNotification("Failed to play audio")})}stopSong(){window.currentAudio&&(window.currentAudio.pause(),window.currentAudio.currentTime=0,this.currentState=n,this.updateUI())}nextSong(){if(this.currentPlaylist.length>0&&this.currentIndex<this.currentPlaylist.length-1){this.currentIndex++;const t=this.currentPlaylist[this.currentIndex];this.playSong(t.id||t.videoId,t.name||t.title,t.artists&&t.artists.length>0?t.artists[0].name:"",t.thumbnails&&t.thumbnails.length>0?t.thumbnails[0].url:"",this.currentPlaylist,this.currentIndex)}}previousSong(){if(this.currentPlaylist.length>0&&this.currentIndex>0){this.currentIndex--;const t=this.currentPlaylist[this.currentIndex];this.playSong(t.id||t.videoId,t.name||t.title,t.artists&&t.artists.length>0?t.artists[0].name:"",t.thumbnails&&t.thumbnails.length>0?t.thumbnails[0].url:"",this.currentPlaylist,this.currentIndex)}}setVolume(t){this.currentVolume=Math.max(0,Math.min(1,t)),window.currentAudio&&(window.currentAudio.volume=this.currentVolume),this.updateVolumeUI(),this.saveState()}setRepeatMode(t){this.repeatMode=t,this.updateRepeatUI(),this.saveState()}cycleRepeatMode(){const t=[i,s,a],e=(t.indexOf(this.repeatMode)+1)%t.length;this.setRepeatMode(t[e])}toggleShuffle(){this.isShuffled=!this.isShuffled,this.isShuffled&&this.currentPlaylist.length>0?(this.originalPlaylist=[...this.currentPlaylist],this.shufflePlaylist()):!this.isShuffled&&this.originalPlaylist.length>0&&(this.currentPlaylist=[...this.originalPlaylist]),this.updateShuffleUI(),this.saveState()}shufflePlaylist(){for(let t=this.currentPlaylist.length-1;t>0;t--){const e=Math.floor(Math.random()*(t+1));[this.currentPlaylist[t],this.currentPlaylist[e]]=[this.currentPlaylist[e],this.currentPlaylist[t]]}}handleSongEnd(){switch(this.repeatMode){case a:window.currentAudio&&(window.currentAudio.currentTime=0,window.currentAudio.play());break;case s:this.currentIndex<this.currentPlaylist.length-1||(this.currentIndex=-1),this.nextSong();break;default:this.currentIndex<this.currentPlaylist.length-1?this.nextSong():this.stopSong()}}handleAudioError(t){window.notificationManager&&window.notificationManager.showErrorNotification("Failed to load audio")}updateProgress(){if(!window.currentAudio)return;const t=document.getElementById("progressBar"),e=document.getElementById("currentTime"),n=document.getElementById("duration");t&&(t.value=window.currentAudio.currentTime.toString(),t.max=window.currentAudio.duration.toString()),e&&(e.textContent=v(window.currentAudio.currentTime)),n&&(n.textContent=v(window.currentAudio.duration))}updateDuration(){if(!window.currentAudio)return;const t=document.getElementById("progressBar"),e=document.getElementById("duration");t&&(t.max=window.currentAudio.duration.toString()),e&&(e.textContent=v(window.currentAudio.duration))}updateSongInfo(t,e,n){const i=document.getElementById("songTitle"),a=document.getElementById("songArtist"),s=document.getElementById("songThumbnail");i&&(i.textContent=t),a&&(a.textContent=e),s&&(s.src=n)}updateUI(){const e=document.getElementById("playButton"),n=document.getElementById("pauseButton");e&&(e.style.display=this.currentState===t?"none":"block"),n&&(n.style.display=this.currentState===t?"block":"none")}updateVolumeUI(){const t=document.getElementById("volumeSlider");t&&(t.value=this.currentVolume.toString())}updateRepeatUI(){const t=document.getElementById("repeatButton");t&&(t.textContent=this.repeatMode===a?"🔂":this.repeatMode===s?"🔁":"↩️")}updateShuffleUI(){const t=document.getElementById("shuffleButton");t&&t.classList.toggle("active",this.isShuffled)}addMobileTouchHandlers(){const t=document.getElementById("progressBar");t&&t.addEventListener("input",t=>{const e=t.target;window.currentAudio&&(window.currentAudio.currentTime=parseFloat(e.value))})}enhancePlayerControls(){document.addEventListener("keydown",e=>{if(!e.target||"INPUT"!==e.target.tagName)switch(e.code){case"Space":e.preventDefault(),this.currentState===t?this.pauseSong():this.resumeSong();break;case"ArrowRight":e.preventDefault(),this.nextSong();break;case"ArrowLeft":e.preventDefault(),this.previousSong()}})}setCurrentPlaylist(t){this.currentPlaylistId=t}highlightCurrentPlaylist(){document.querySelectorAll("[data-playlist-id]").forEach(t=>{t.classList.remove("current-playlist"),t.getAttribute("data-playlist-id")===this.currentPlaylistId&&t.classList.add("current-playlist")})}saveState(){localStorage.setItem("playerState",JSON.stringify({volume:this.currentVolume,repeatMode:this.repeatMode,isShuffled:this.isShuffled}))}restoreState(){try{const t=localStorage.getItem("playerState");if(t){const e=JSON.parse(t);this.currentVolume=e.volume||c,this.repeatMode=e.repeatMode||i,this.isShuffled=e.isShuffled||!1}}catch(t){}}},window.playSong=(t,e,n,i,a,s)=>window.playerManager.playSong(t,e,n,i,a,s),window.loadSong=(t,e,n,i,a,s)=>window.playerManager.loadSong(t,e,n,i,a,s),window.pauseSong=()=>window.playerManager.pauseSong(),window.resumeSong=()=>window.playerManager.resumeSong(),window.stopSong=()=>window.playerManager.stopSong(),window.nextSong=()=>window.playerManager.nextSong(),window.previousSong=()=>window.playerManager.previousSong(),window.setVolume=t=>window.playerManager.setVolume(t),window.setRepeatMode=t=>window.playerManager.setRepeatMode(t),window.toggleShuffle=()=>window.playerManager.toggleShuffle();const k=class{constructor(t="",e={}){this.baseUrl=t.replace(/\/$/,""),this.options={timeout:3e4,retries:3,...e},this.cookies=e.cookies||null,this.location=e.location||"US"}setCookies(t){this.cookies=t}setLocation(t){this.location=t}buildQueryParams(t={}){const e=new URLSearchParams;return this.cookies&&e.append("cookies",this.cookies),this.location&&e.append("location",this.location),Object.entries(t).forEach(([t,n])=>{null!=n&&e.append(t,n)}),e.toString()}async request(t,e={}){const n=`${this.baseUrl}${t}`,i={method:"GET",headers:{"Content-Type":"application/json",...e.headers},...e};let a;for(let t=1;t<=this.options.retries;t++)try{const t=new AbortController,e=setTimeout(()=>t.abort(),this.options.timeout),a=await fetch(n,{...i,signal:t.signal});if(clearTimeout(e),!a.ok){const t=await a.json().catch(()=>({}));throw new Error(t.error||`HTTP ${a.status}: ${a.statusText}`)}return await a.json()}catch(e){if(a=e,t===this.options.retries)throw e;await new Promise(e=>setTimeout(e,1e3*Math.pow(2,t)))}}async getHealth(){return this.request("/api")}async search(t,e=null){const n={query:t};e&&(n.category=e);const i=this.buildQueryParams(n);return this.request(`/api/search?${i}`)}async getSongInfo(t){const e=this.buildQueryParams();return this.request(`/api/song/${t}?${e}`)}async getStreamingData(t){const e=this.buildQueryParams();return this.request(`/api/streaming/${t}?${e}`)}getAudioStreamUrl(t,e=null){const n={};e&&(n.quality=e);const i=this.buildQueryParams(n);return`${this.baseUrl}/api/stream/${t}?${i}`}async getAlbumInfo(t){const e=this.buildQueryParams();return this.request(`/api/album/${t}?${e}`)}async getArtistInfo(t){const e=this.buildQueryParams();return this.request(`/api/artist/${t}?${e}`)}async getLibrary(){const t=this.buildQueryParams();return this.request(`/api/library?${t}`)}async getLibrarySongs(){const t=this.buildQueryParams();return this.request(`/api/library/songs?${t}`)}async getLibraryAlbums(){const t=this.buildQueryParams();return this.request(`/api/library/albums?${t}`)}async getLibraryArtists(){const t=this.buildQueryParams();return this.request(`/api/library/artists?${t}`)}async getLibrarySubscriptions(){const t=this.buildQueryParams();return this.request(`/api/library/subscriptions?${t}`)}async getLibraryPodcasts(){const t=this.buildQueryParams();return this.request(`/api/library/podcasts?${t}`)}async getLibraryPlaylists(){const t=this.buildQueryParams();return this.request(`/api/library/playlists?${t}`)}async getPlaylist(t){const e=this.buildQueryParams();return this.request(`/api/playlist/${t}?${e}`)}async clearCache(){return this.request("/api/cache/clear",{method:"POST"})}async getCacheStats(){return this.request("/api/cache/stats")}};class T{constructor(){this.api=null,this.isInitialized=!1,this.initPromise=null}static getInstance(){return T.instance||(T.instance=new T),T.instance}async initialize(t="",e={}){return this.isInitialized&&this.api?this.api:(this.initPromise||(this.initPromise=this.createAPI(t,e)),this.initPromise)}getAPI(){if(!this.api||!this.isInitialized)throw new Error("API not initialized. Call initialize() first.");return this.api}isReady(){return this.isInitialized&&null!==this.api}async createAPI(t,e){try{this.api=new k(t,{timeout:3e4,retries:3,...e});try{this.api.getHealth&&await this.api.getHealth()}catch(t){}return this.isInitialized=!0,this.api}catch(t){throw this.initPromise=null,t}}reset(){this.api=null,this.isInitialized=!1,this.initPromise=null}}const x=T.getInstance();window.contentManager=new class{constructor(){this.currentView="home",this.playlists=[],this.searchResults=[],this.init()}init(){this.setupEventListeners()}setupEventListeners(){const t=document.getElementById("searchInput");t&&t.addEventListener("keypress",t=>{"Enter"===t.key&&this.handleSearch(t)})}async loadHome(){this.currentView="home",this.updateActiveNavItem("home");const t=document.getElementById("mainContent");if(!t)return;t.innerHTML='\n            <div class="welcome-section">\n                <h1>Welcome to YouTube Music API Proxy</h1>\n                <p>Search for music, browse your library, or explore playlists.</p>\n                <div class="search-box">\n                    <input type="text" id="homeSearchInput" placeholder="Search for songs, artists, or albums...">\n                    <button onclick="document.getElementById(\'homeSearchInput\').value && handleSearch({key:\'Enter\',target:document.getElementById(\'homeSearchInput\')})">Search</button>\n                </div>\n            </div>\n        ';const e=document.getElementById("homeSearchInput");e&&e.addEventListener("keypress",t=>{"Enter"===t.key&&this.handleSearch(t)})}async loadLibrary(){this.currentView="library",this.updateActiveNavItem("library");try{const t=x.getAPI(),e=await t.getLibrary();this.displayLibraryContent(e)}catch(t){window.notificationManager&&window.notificationManager.showErrorNotification("Failed to load library")}}async loadSongs(){this.currentView="songs",this.updateActiveNavItem("songs");try{const t=x.getAPI(),e=await t.getLibrarySongs();this.displaySongsContent(e)}catch(t){window.notificationManager&&window.notificationManager.showErrorNotification("Failed to load songs")}}async loadArtists(){this.currentView="artists",this.updateActiveNavItem("artists");try{const t=x.getAPI(),e=await t.getLibraryArtists();this.displayArtistsContent(e)}catch(t){window.notificationManager&&window.notificationManager.showErrorNotification("Failed to load artists")}}async loadAlbums(){this.currentView="albums",this.updateActiveNavItem("albums");try{const t=x.getAPI(),e=await t.getLibraryAlbums();this.displayAlbumsContent(e)}catch(t){window.notificationManager&&window.notificationManager.showErrorNotification("Failed to load albums")}}async loadPlaylists(){try{const t=x.getAPI(),e=await t.getLibraryPlaylists();this.playlists=e.playlists||e||[],this.updatePlaylistsSidebar()}catch(t){}}async loadPlaylist(t,e){this.currentView="playlist",this.updateActiveNavItem("playlist");try{const n=x.getAPI(),i=await n.getPlaylist(t);this.displayPlaylistContent(i,e)}catch(t){window.notificationManager&&window.notificationManager.showErrorNotification("Failed to load playlist")}}async loadAlbum(t,e){this.currentView="album",this.updateActiveNavItem("album");try{const n=x.getAPI(),i=await n.getAlbumInfo(t);this.displayAlbumContent(i,e)}catch(t){window.notificationManager&&window.notificationManager.showErrorNotification("Failed to load album")}}async loadArtist(t,e){this.currentView="artist",this.updateActiveNavItem("artist");try{const n=x.getAPI(),i=await n.getArtistInfo(t);this.displayArtistContent(i,e)}catch(t){window.notificationManager&&window.notificationManager.showErrorNotification("Failed to load artist")}}async handleSearch(t){const e=t.target.value.trim();if(e){this.currentView="search",this.updateActiveNavItem("search");try{const t=x.getAPI(),n=await t.search(e);this.displaySearchResults(n,e)}catch(t){window.notificationManager&&window.notificationManager.showErrorNotification("Search failed")}}}displayLibraryContent(t){const e=document.getElementById("mainContent");e&&(e.innerHTML=`\n            <div class="library-content">\n                <h2>Your Library</h2>\n                <div class="library-stats">\n                    <div class="stat">\n                        <span class="stat-number">${t.songs?.length||0}</span>\n                        <span class="stat-label">Songs</span>\n                    </div>\n                    <div class="stat">\n                        <span class="stat-number">${t.artists?.length||0}</span>\n                        <span class="stat-label">Artists</span>\n                    </div>\n                    <div class="stat">\n                        <span class="stat-number">${t.albums?.length||0}</span>\n                        <span class="stat-label">Albums</span>\n                    </div>\n                    <div class="stat">\n                        <span class="stat-number">${t.playlists?.length||0}</span>\n                        <span class="stat-label">Playlists</span>\n                    </div>\n                </div>\n            </div>\n        `)}displaySongsContent(t){const e=document.getElementById("mainContent");if(!e)return;const n=t.songs||t||[],i=n.map(t=>`\n            <div class="song-item" data-song-id="${t.id||t.videoId}" \n                 data-song-name="${t.name||t.title}" \n                 data-song-artist="${t.artists&&t.artists.length>0?t.artists[0].name:""}"\n                 data-song-thumbnail="${t.thumbnails&&t.thumbnails.length>0?t.thumbnails[0].url:""}">\n                <img src="${t.thumbnails&&t.thumbnails.length>0?t.thumbnails[0].url:""}" alt="${t.name||t.title}">\n                <div class="song-info">\n                    <h3>${t.name||t.title}</h3>\n                    <p>${t.artists&&t.artists.length>0?t.artists[0].name:"Unknown Artist"}</p>\n                </div>\n                <div class="song-duration">${t.duration||""}</div>\n            </div>\n        `).join("");e.innerHTML=`\n            <div class="songs-content">\n                <h2>Your Songs (${n.length})</h2>\n                <div class="songs-list">\n                    ${i}\n                </div>\n            </div>\n        `}displayArtistsContent(t){const e=document.getElementById("mainContent");if(!e)return;const n=t.artists||t||[],i=n.map(t=>`\n            <div class="artist-item" data-artist-id="${t.browseId||t.id}" \n                 data-artist-name="${t.name}">\n                <img src="${t.thumbnails&&t.thumbnails.length>0?t.thumbnails[0].url:""}" alt="${t.name}">\n                <div class="artist-info">\n                    <h3>${t.name}</h3>\n                    <p>${t.songCount||0} songs</p>\n                </div>\n            </div>\n        `).join("");e.innerHTML=`\n            <div class="artists-content">\n                <h2>Your Artists (${n.length})</h2>\n                <div class="artists-grid">\n                    ${i}\n                </div>\n            </div>\n        `}displayAlbumsContent(t){const e=document.getElementById("mainContent");if(!e)return;const n=t.albums||t||[],i=n.map(t=>`\n            <div class="album-item" data-album-id="${t.browseId||t.id}" \n                 data-album-title="${t.name||t.title}">\n                <img src="${t.thumbnails&&t.thumbnails.length>0?t.thumbnails[0].url:""}" alt="${t.name||t.title}">\n                <div class="album-info">\n                    <h3>${t.name||t.title}</h3>\n                    <p>${t.artists&&t.artists.length>0?t.artists[0].name:"Unknown Artist"}</p>\n                    <p>${t.year||""}</p>\n                </div>\n            </div>\n        `).join("");e.innerHTML=`\n            <div class="albums-content">\n                <h2>Your Albums (${n.length})</h2>\n                <div class="albums-grid">\n                    ${i}\n                </div>\n            </div>\n        `}displayPlaylistContent(t,e){const n=document.getElementById("mainContent");if(!n)return;const i=t.songs||t.tracks||[],a=i.map((e,n)=>`\n            <div class="song-item" data-song-id="${e.id||e.videoId}" \n                 data-song-name="${e.name||e.title}" \n                 data-song-artist="${e.artists&&e.artists.length>0?e.artists[0].name:""}"\n                 data-song-thumbnail="${e.thumbnails&&e.thumbnails.length>0?e.thumbnails[0].url:""}"\n                 data-playlist-id="${t.id||t.playlistId}"\n                 data-song-index="${n}">\n                <div class="song-number">${n+1}</div>\n                <img src="${e.thumbnails&&e.thumbnails.length>0?e.thumbnails[0].url:""}" alt="${e.name||e.title}">\n                <div class="song-info">\n                    <h3>${e.name||e.title}</h3>\n                    <p>${e.artists&&e.artists.length>0?e.artists[0].name:"Unknown Artist"}</p>\n                </div>\n                <div class="song-duration">${e.duration||""}</div>\n            </div>\n        `).join("");n.innerHTML=`\n            <div class="playlist-content">\n                <h2>${e}</h2>\n                <p>${i.length} songs</p>\n                <div class="songs-list">\n                    ${a}\n                </div>\n            </div>\n        `}displayAlbumContent(t,e){const n=document.getElementById("mainContent");if(!n)return;const i=t.songs||t.tracks||[],a=i.map((t,e)=>`\n            <div class="song-item" data-song-id="${t.id||t.videoId}" \n                 data-song-name="${t.name||t.title}" \n                 data-song-artist="${t.artists&&t.artists.length>0?t.artists[0].name:""}"\n                 data-song-thumbnail="${t.thumbnails&&t.thumbnails.length>0?t.thumbnails[0].url:""}">\n                <div class="song-number">${e+1}</div>\n                <img src="${t.thumbnails&&t.thumbnails.length>0?t.thumbnails[0].url:""}" alt="${t.name||t.title}">\n                <div class="song-info">\n                    <h3>${t.name||t.title}</h3>\n                    <p>${t.artists&&t.artists.length>0?t.artists[0].name:"Unknown Artist"}</p>\n                </div>\n                <div class="song-duration">${t.duration||""}</div>\n            </div>\n        `).join("");n.innerHTML=`\n            <div class="album-content">\n                <h2>${e}</h2>\n                <p>${i.length} songs</p>\n                <div class="songs-list">\n                    ${a}\n                </div>\n            </div>\n        `}displayArtistContent(t,e){const n=document.getElementById("mainContent");if(!n)return;const i=t.songs||t.tracks||[],a=i.map(t=>`\n            <div class="song-item" data-song-id="${t.id||t.videoId}" \n                 data-song-name="${t.name||t.title}" \n                 data-song-artist="${t.artists&&t.artists.length>0?t.artists[0].name:""}"\n                 data-song-thumbnail="${t.thumbnails&&t.thumbnails.length>0?t.thumbnails[0].url:""}">\n                <img src="${t.thumbnails&&t.thumbnails.length>0?t.thumbnails[0].url:""}" alt="${t.name||t.title}">\n                <div class="song-info">\n                    <h3>${t.name||t.title}</h3>\n                    <p>${t.album||""}</p>\n                </div>\n                <div class="song-duration">${t.duration||""}</div>\n            </div>\n        `).join("");n.innerHTML=`\n            <div class="artist-content">\n                <h2>${e}</h2>\n                <p>${i.length} songs</p>\n                <div class="songs-list">\n                    ${a}\n                </div>\n            </div>\n        `}displaySearchResults(t,e){const n=document.getElementById("mainContent");if(!n)return;const i=t.results||t||[],a=i.map(t=>"song"===t.type?`\n                    <div class="song-item" data-song-id="${t.id||t.videoId}" \n                         data-song-name="${t.name||t.title}" \n                         data-song-artist="${t.artists&&t.artists.length>0?t.artists[0].name:""}"\n                         data-song-thumbnail="${t.thumbnails&&t.thumbnails.length>0?t.thumbnails[0].url:""}">\n                        <img src="${t.thumbnails&&t.thumbnails.length>0?t.thumbnails[0].url:""}" alt="${t.name||t.title}">\n                        <div class="song-info">\n                            <h3>${t.name||t.title}</h3>\n                            <p>${t.artists&&t.artists.length>0?t.artists[0].name:"Unknown Artist"}</p>\n                        </div>\n                        <div class="song-duration">${t.duration||""}</div>\n                    </div>\n                `:"album"===t.type?`\n                    <div class="album-item" data-album-id="${t.browseId||t.id}" \n                         data-album-title="${t.name||t.title}">\n                        <img src="${t.thumbnails&&t.thumbnails.length>0?t.thumbnails[0].url:""}" alt="${t.name||t.title}">\n                        <div class="album-info">\n                            <h3>${t.name||t.title}</h3>\n                            <p>${t.artists&&t.artists.length>0?t.artists[0].name:"Unknown Artist"}</p>\n                        </div>\n                    </div>\n                `:"artist"===t.type?`\n                    <div class="artist-item" data-artist-id="${t.browseId||t.id}" \n                         data-artist-name="${t.name}">\n                        <img src="${t.thumbnails&&t.thumbnails.length>0?t.thumbnails[0].url:""}" alt="${t.name}">\n                        <div class="artist-info">\n                            <h3>${t.name}</h3>\n                        </div>\n                    </div>\n                `:"").join("");n.innerHTML=`\n            <div class="search-results">\n                <h2>Search Results for "${e}"</h2>\n                <p>${i.length} results found</p>\n                <div class="results-list">\n                    ${a}\n                </div>\n            </div>\n        `}updatePlaylistsSidebar(){const t=document.getElementById("playlistsContainer");if(!t)return;const e=this.playlists.map(t=>`\n            <div class="playlist-item" data-playlist-id="${t.id||t.playlistId}" \n                 data-playlist-title="${t.name||t.title}">\n                <div class="playlist-info">\n                    <h4>${t.name||t.title}</h4>\n                    <p>${t.songCount||0} songs</p>\n                </div>\n            </div>\n        `).join("");t.innerHTML=e}updateActiveNavItem(t){document.querySelectorAll(".nav-item").forEach(t=>{t.classList.remove("active")});const e=document.querySelector(`[data-view="${t}"]`);e&&e.classList.add("active")}},window.loadHome=()=>window.contentManager.loadHome(),window.loadLibrary=()=>window.contentManager.loadLibrary(),window.loadSongs=()=>window.contentManager.loadSongs(),window.loadArtists=()=>window.contentManager.loadArtists(),window.loadAlbums=()=>window.contentManager.loadAlbums(),window.loadPlaylists=()=>window.contentManager.loadPlaylists(),window.loadPlaylist=(t,e)=>window.contentManager.loadPlaylist(t,e),window.loadAlbum=(t,e)=>window.contentManager.loadAlbum(t,e),window.loadArtist=(t,e)=>window.contentManager.loadArtist(t,e),window.handleSearch=t=>window.contentManager.handleSearch(t);function N(){window.updateCSSBreakpoints&&window.updateCSSBreakpoints().catch(t=>{}),document.addEventListener("click",function(t){const e=t.target,n=e.closest("[data-song-id]");if(n){const e=n.dataset.songId,i=n.dataset.songName||"",a=n.dataset.songArtist||"",s=n.dataset.songThumbnail||"",o=n.dataset.playlistId||null,r=n.dataset.songIndex?parseInt(n.dataset.songIndex):-1;return window.playerManager.playSong(e,i,a,s,o?[o]:void 0,r),void t.stopPropagation()}const i=e.closest("[data-playlist-id]");if(i){const e=i.dataset.playlistId,n=i.dataset.playlistTitle||"";return window.contentManager.loadPlaylist(e,n),void t.stopPropagation()}const a=e.closest("[data-album-id]");if(a){const e=a.dataset.albumId,n=a.dataset.albumTitle||"";return window.contentManager.loadAlbum(e,n),void t.stopPropagation()}const s=e.closest("[data-artist-id]");if(s){const e=s.dataset.artistId,n=s.dataset.artistName||"";return window.contentManager.loadArtist(e,n),void t.stopPropagation()}});const t=()=>{document.body.classList.add("user-interacted"),document.removeEventListener("click",t),document.removeEventListener("touchstart",t),document.removeEventListener("keydown",t)};document.addEventListener("click",t),document.addEventListener("touchstart",t),document.addEventListener("keydown",t),window.stopAllAudio&&window.stopAllAudio(),window.addEventListener("beforeunload",()=>{window.stopAllAudio&&window.stopAllAudio()}),window.playerManager&&(window.playerManager.addMobileTouchHandlers(),window.playerManager.enhancePlayerControls()),document.addEventListener("DOMContentLoaded",function(){const t=document.getElementById("libraryNavItem"),e=document.getElementById("songsNavItem"),n=document.getElementById("artistsNavItem"),i=document.getElementById("albumsNavItem"),a=document.getElementById("searchInput");t&&t.addEventListener("click",window.loadLibrary),e&&e.addEventListener("click",window.loadSongs),n&&n.addEventListener("click",window.loadArtists),i&&i.addEventListener("click",window.loadAlbums),a&&a.addEventListener("keypress",window.handleSearch)}),setTimeout(()=>{if(window.getQueryParams){const t=window.getQueryParams();t.playlist||t.song?window.contentManager&&window.contentManager.loadPlaylists().then(()=>{window.urlManager&&window.urlManager.loadFromURL()}):window.contentManager&&(window.contentManager.loadHome(),window.contentManager.loadPlaylists())}else window.contentManager&&(window.contentManager.loadHome(),window.contentManager.loadPlaylists())},100)}async function U(){const t=document.getElementById("loading");t&&(t.style.display="block",t.textContent="Initializing YouTube Music API...");await async function(t=10,e=1e3){let n=0;const i=async()=>{try{const t=await x.initialize("",{timeout:3e4,retries:3});return window.ytmAPI=t,!0}catch(a){if(n++,n<t)return await new Promise(t=>setTimeout(t,e)),await i();{const t=document.getElementById("error");return t&&(t.textContent="Failed to initialize YouTube Music API. Please refresh the page.",t.style.display="block"),!1}}};return await i()}()&&(t&&(t.textContent="API Ready! Initializing application..."),N(),t&&(t.style.display="none"))}window.urlManager=new class{constructor(){this.init()}init(){}async loadFromURL(){const t=I();if(t.playlist)try{const e=x.getAPI(),n=await e.getPlaylist(t.playlist),i=n.name||n.title||"Playlist";if(window.contentManager&&window.contentManager.displayPlaylistContent(n,i),window.playerManager&&(window.playerManager.setCurrentPlaylist(t.playlist),window.playerManager.highlightCurrentPlaylist(),t.song)){const e=n.songs||n.tracks||[],i=e.findIndex(e=>e.id===t.song||e.videoId===t.song);if(-1!==i){const n=e[i],a=n.name||n.title||"Unknown Title",s=n.artists&&n.artists.length>0?n.artists[0].name:"",o=n.thumbnails&&n.thumbnails.length>0?n.thumbnails[0].url:"";t.play?window.playerManager.playSong(n.id||n.videoId||"",a,s,o,e,i):window.playerManager.loadSong(n.id||n.videoId||"",a,s,o,e,i)}else t.play?window.playerManager.playSong(t.song,"Unknown Title","Unknown Artist","",n,-1):window.playerManager.loadSong(t.song,"Unknown Title","Unknown Artist","",n,-1)}}catch(t){window.notificationManager&&window.notificationManager.showErrorNotification("Error loading playlist from URL")}else if(t.song)try{const e=x.getAPI(),n=await e.getSongInfo(t.song),i=n.name||n.title||"Unknown Title",a=n.artists&&n.artists.length>0?n.artists[0].name:"",s=n.thumbnails&&n.thumbnails.length>0?n.thumbnails[0].url:"";window.playerManager&&(t.play?window.playerManager.playSong(t.song,i,a,s,null,-1):window.playerManager.loadSong(t.song,i,a,s,null,-1))}catch(t){window.notificationManager&&window.notificationManager.showErrorNotification("Error loading song from URL")}}},window.loadFromURL=()=>window.urlManager.loadFromURL(),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",U):U()})();